<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="true">
 <co id="0" binds="1 2 3 4 5 6 7">
  <template name="Q{}action-insert" flags="os" line="3519" module="saxon-xforms.xsl" slots="8">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3520">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3521" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="3522" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3524" var="ref" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="3525" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3541" var="instanceXML2" as="element()" slot="5" eval="7">
       <choose line="3543">
        <and op="and">
         <vc op="eq" onEmpty="0" comp="CCC">
          <ufCall line="3539" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
           <varRef name="ref" slot="3"/>
          </ufCall>
          <str val="saxon-forms-default"/>
         </vc>
         <fn name="exists">
          <varRef name="instanceXML" slot="1"/>
         </fn>
        </and>
        <check line="3544" card="1" diag="3|0|XTTE0570|instanceXML2">
         <varRef name="instanceXML" slot="1"/>
        </check>
        <true/>
        <check line="3547" card="1" diag="3|0|XTTE0570|instanceXML2">
         <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="2" eval="6">
          <varRef name="ref" slot="3"/>
         </ufCall>
        </check>
       </choose>
       <let line="3552" var="insert-node" as="node()" slot="6" eval="7">
        <treat line="3553" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|insert-node">
         <check card="1" diag="3|0|XTTE0570|insert-node">
          <evaluate dxns="">
           <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="4">
            <check card="1" diag="0|0||xforms:impose">
             <choose line="3537">
              <fn name="exists">
               <varRef name="ref" slot="3"/>
              </fn>
              <choose>
               <fn name="exists">
                <varRef name="at" slot="4"/>
               </fn>
               <fn name="concat">
                <varRef name="ref" slot="3"/>
                <str val="["/>
                <varRef name="at" slot="4"/>
                <str val="]"/>
               </fn>
               <true/>
               <varRef name="ref" slot="3"/>
              </choose>
             </choose>
            </check>
           </ufCall>
           <varRef role="cxt" name="instanceXML2" slot="5"/>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
         </check>
        </treat>
        <let line="3556" var="instance-with-insert" as="element()" slot="7" eval="7">
         <treat line="3557" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|instance-with-insert">
          <check card="1" diag="3|0|XTTE0570|instance-with-insert">
           <applyT mode="Q{}insert-node" bSlot="4">
            <varRef role="select" name="instanceXML2" slot="5"/>
            <withParam name="Q{}insert-node" flags="t" as="node()">
             <varRef line="3558" name="insert-node" slot="6"/>
            </withParam>
            <withParam name="Q{}position-relative" flags="t" as="xs:string?">
             <treat line="3526" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|position">
              <check card="?" diag="3|0|XTTE0570|position">
               <cvUntyped to="xs:string">
                <data>
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="action-map" slot="0"/>
                  <str val="@position"/>
                 </ifCall>
                </data>
               </cvUntyped>
              </check>
             </treat>
            </withParam>
           </applyT>
          </check>
         </treat>
         <sequence line="3563">
          <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="5" eval="6 6">
           <varRef name="ref" slot="3"/>
           <varRef name="instance-with-insert" slot="7"/>
          </ufCall>
          <callT line="3564" name="xforms-rebuild" bSlot="6" flags="t"/>
         </sequence>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="8" binds="1 2 3 4 9 6 7">
  <template name="Q{}action-delete" flags="os" line="3577" module="saxon-xforms.xsl" slots="11">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3578">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3579" name="Q{}instanceXML" slot="1" flags="ti" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="1" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="3580" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3582" var="ref" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="3583" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3593" var="ref-qualified" as="xs:string?" slot="5" eval="7">
       <choose>
        <fn name="exists">
         <varRef name="ref" slot="3"/>
        </fn>
        <choose>
         <fn name="exists">
          <varRef name="at" slot="4"/>
         </fn>
         <fn name="concat">
          <varRef name="ref" slot="3"/>
          <str val="["/>
          <varRef name="at" slot="4"/>
          <str val="]"/>
         </fn>
         <true/>
         <varRef name="ref" slot="3"/>
        </choose>
       </choose>
       <let line="3597" var="instanceXML2" as="element()" slot="6" eval="7">
        <choose line="3599">
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <ufCall line="3595" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
            <varRef name="ref" slot="3"/>
           </ufCall>
           <str val="saxon-forms-default"/>
          </vc>
          <fn name="exists">
           <varRef name="instanceXML" slot="1"/>
          </fn>
         </and>
         <varRef line="3600" name="instanceXML" slot="1"/>
         <true/>
         <check line="3603" card="1" diag="3|0|XTTE0570|instanceXML2">
          <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="2" eval="6">
           <varRef name="ref" slot="3"/>
          </ufCall>
         </check>
        </choose>
        <let line="3608" var="ifVar" as="xs:string?" slot="7" eval="7">
         <choose line="563">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
           <varRef line="3608" name="action-map" slot="0"/>
           <str val="@if"/>
          </ifCall>
          <treat line="564" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
           <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
            <cvUntyped to="xs:string">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <varRef line="3608" name="action-map" slot="0"/>
               <str val="@if"/>
              </ifCall>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </choose>
         <let line="3611" var="delete-node" as="node()?" slot="8" eval="7">
          <choose line="3613">
           <and op="and">
            <fn name="exists">
             <varRef name="ref-qualified" slot="5"/>
            </fn>
            <fn name="not">
             <gc op="=" card="1:1" comp="CCC">
              <varRef name="ref-qualified" slot="5"/>
              <str val=""/>
             </gc>
            </fn>
           </and>
           <treat line="3614" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|delete-node">
            <check card="?" diag="3|0|XTTE0570|delete-node">
             <evaluate dxns="">
              <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="7">
               <check card="1" diag="0|0||xforms:impose">
                <varRef name="ref-qualified" slot="5"/>
               </check>
              </ufCall>
              <varRef role="cxt" name="instanceXML2" slot="6"/>
              <str role="sa" val="no"/>
              <map role="wp" size="0"/>
             </evaluate>
            </check>
           </treat>
          </choose>
          <let line="3619" var="ifExecuted" as="xs:boolean" slot="9" eval="7">
           <choose line="3621">
            <fn name="exists">
             <varRef name="ifVar" slot="7"/>
            </fn>
            <treat line="3622" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|ifExecuted">
             <check card="1" diag="3|0|XTTE0570|ifExecuted">
              <cvUntyped to="xs:boolean">
               <data>
                <evaluate dxns="">
                 <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
                  <varRef name="ifVar" slot="7"/>
                 </check>
                 <varRef role="cxt" name="delete-node" slot="8"/>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <true/>
            <true/>
           </choose>
           <choose line="3630">
            <varRef name="ifExecuted" slot="9"/>
            <let line="3631" var="instance-with-delete" as="element()" slot="10" eval="7">
             <treat line="3632" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|instance-with-delete">
              <check card="1" diag="3|0|XTTE0570|instance-with-delete">
               <applyT mode="Q{}delete-node" bSlot="4">
                <varRef role="select" name="instanceXML2" slot="6"/>
                <withParam name="Q{}delete-node" flags="t" as="node()?">
                 <varRef line="3633" name="delete-node" slot="8"/>
                </withParam>
               </applyT>
              </check>
             </treat>
             <sequence line="3637">
              <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="5" eval="6 6">
               <varRef name="ref" slot="3"/>
               <varRef name="instance-with-delete" slot="10"/>
              </ufCall>
              <callT line="3638" name="xforms-rebuild" bSlot="6" flags="t"/>
             </sequence>
            </let>
           </choose>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="10" binds="11">
  <mode name="Q{}xforms-action-map" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="2017" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2002/xforms}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2002/xforms'"/>
     <gc ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2017" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <literal count="15">
       <str val="setvalue"/>
       <str val="insert"/>
       <str val="delete"/>
       <str val="setindex"/>
       <str val="toggle"/>
       <str val="setfocus"/>
       <str val="dispatch"/>
       <str val="rebuild"/>
       <str val="recalculate"/>
       <str val="revalidate"/>
       <str val="refresh"/>
       <str val="reset"/>
       <str val="load"/>
       <str val="send"/>
       <str val="message"/>
      </literal>
      <fn name="local-name">
       <dot type="Q{http://www.w3.org/2002/xforms}*"/>
      </fn>
     </gc>
    </p.withPredicate>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2019">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <ifCall line="2021" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
      <fn name="local-name">
       <dot type="Q{http://www.w3.org/2002/xforms}*"/>
      </fn>
      <let line="2022" var="array" as="map(*)*" slot="1" eval="8">
       <treat line="2023" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|array">
        <forEach>
         <currentGroup/>
         <applyT line="2024" bSlot="0">
          <dot role="select"/>
         </applyT>
        </forEach>
       </treat>
       <ifCall line="2027" name="Q{http://www.w3.org/2005/xpath-functions/array}_from-sequence" type="array(*)">
        <varRef name="array" slot="1"/>
       </ifCall>
      </let>
     </ifCall>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="12" binds="12 13 12 12 13">
  <mode name="Q{}form-check" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="10" flags="s" line="2220" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2221">
     <param name="Q{}curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="2222" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <param line="2223" name="Q{}pendingUpdates" slot="2" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="2230" var="updatedPath" as="xs:string" slot="3" eval="7">
      <choose>
       <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="position" slot="1"/>
        </data>
        <int val="0"/>
       </gc>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
        <str val="["/>
        <atomSing card="?" diag="0|3||fn:concat">
         <varRef name="position" slot="1"/>
        </atomSing>
        <str val="]"/>
       </fn>
       <true/>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </fn>
      </choose>
      <copy line="2238" flags="cin">
       <sequence role="content">
        <applyT mode="Q{}form-check" bSlot="0">
         <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <withParam name="Q{}curPath" as="xs:string">
          <fn line="2239" name="concat">
           <varRef name="updatedPath" slot="3"/>
           <str val="/"/>
          </fn>
         </withParam>
        </applyT>
        <let line="2245" var="associated-form-control" as="node()*" slot="4" eval="8">
         <slash>
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
          <fn name="key">
           <str val="Q{http://saxon.sf.net/}kk102"/>
           <varRef name="updatedPath" slot="3"/>
           <dot type="document-node()"/>
          </fn>
         </slash>
         <sequence line="2248">
          <choose>
           <fn name="exists">
            <varRef name="associated-form-control" slot="4"/>
           </fn>
           <valueOf line="2252" flags="l">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <applyT mode="Q{}get-field" bSlot="1">
                 <varRef role="select" name="associated-form-control" slot="4"/>
                </applyT>
               </mergeAdj>
              </data>
             </convert>
             <str val=""/>
            </fn>
           </valueOf>
           <and line="2255" op="and">
            <fn name="exists">
             <varRef name="pendingUpdates" slot="2"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
             <check card="1" diag="0|0||map:contains">
              <varRef name="pendingUpdates" slot="2"/>
             </check>
             <varRef name="updatedPath" slot="3"/>
            </ifCall>
           </and>
           <valueOf line="2263" flags="l">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
             <check card="1" diag="0|0||map:get">
              <varRef name="pendingUpdates" slot="2"/>
             </check>
             <varRef name="updatedPath" slot="3"/>
            </ifCall>
           </valueOf>
           <true/>
           <valueOf line="2272" flags="l">
            <fn name="normalize-space">
             <fn name="string-join">
              <data>
               <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
              </data>
              <str val=""/>
             </fn>
            </fn>
           </valueOf>
          </choose>
          <forEachGroup line="2277" algorithm="by">
           <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           <fn role="key" name="local-name">
            <dot type="element()"/>
           </fn>
           <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
           <let role="content" line="2279" var="updatedChildPath" as="xs:string" slot="5" eval="8">
            <fn name="concat">
             <varRef name="updatedPath" slot="3"/>
             <str val="/"/>
             <check card="?" diag="0|2||fn:concat">
              <currentGroupingKey/>
             </check>
            </fn>
            <let line="2284" var="vv:v0" as="xs:string" slot="6" eval="13">
             <fn name="concat">
              <varRef name="updatedChildPath" slot="5"/>
              <str val="["/>
             </fn>
             <let var="dataRefWithFilter" as="element()*" slot="7" eval="8">
              <filter flags="b">
               <slash simple="1">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <fn name="starts-with">
                <cvUntyped to="xs:string">
                 <attVal name="Q{}data-ref" chk="0"/>
                </cvUntyped>
                <varRef name="vv:v0" slot="6"/>
               </fn>
              </filter>
              <choose line="2287">
               <or op="or">
                <fn name="exists">
                 <tail start="2">
                  <currentGroup/>
                 </tail>
                </fn>
                <fn name="exists">
                 <varRef name="dataRefWithFilter" slot="7"/>
                </fn>
               </or>
               <let line="2290" var="vv:v1" as="xs:string" slot="8" eval="13">
                <fn name="concat">
                 <varRef name="updatedPath" slot="3"/>
                 <str val="/"/>
                </fn>
                <forEach line="2288">
                 <currentGroup/>
                 <applyT line="2289" mode="Q{}form-check" bSlot="2">
                  <dot role="select"/>
                  <withParam name="Q{}curPath" as="xs:string">
                   <varRef line="2290" name="vv:v1" slot="8"/>
                  </withParam>
                  <withParam name="Q{}position" as="xs:integer">
                   <fn line="2291" name="position"/>
                  </withParam>
                 </applyT>
                </forEach>
               </let>
               <true/>
               <let line="2299" var="vv:v2" as="xs:string" slot="9" eval="13">
                <fn name="concat">
                 <varRef name="updatedPath" slot="3"/>
                 <str val="/"/>
                </fn>
                <forEach line="2297">
                 <currentGroup/>
                 <applyT line="2298" mode="Q{}form-check" bSlot="3">
                  <dot role="select"/>
                  <withParam name="Q{}curPath" as="xs:string">
                   <varRef line="2299" name="vv:v2" slot="9"/>
                  </withParam>
                 </applyT>
                </forEach>
               </let>
              </choose>
             </let>
            </let>
           </let>
          </forEachGroup>
         </sequence>
        </let>
       </sequence>
      </copy>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="4" flags="s" line="2320" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2321">
     <param name="Q{}curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="2322" name="Q{}pendingUpdates" slot="1" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <let line="2323" var="updatedPath" as="xs:string" slot="2" eval="8">
      <fn name="concat">
       <atomSing card="?" diag="0|0||fn:concat">
        <varRef name="curPath" slot="0"/>
       </atomSing>
       <str val="@"/>
       <fn name="local-name">
        <dot type="attribute()"/>
       </fn>
      </fn>
      <let line="2332" var="associated-form-control" as="node()*" slot="3" eval="8">
       <slash>
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
        <fn name="key">
         <str val="Q{http://saxon.sf.net/}kk102"/>
         <varRef name="updatedPath" slot="2"/>
         <dot type="document-node()"/>
        </fn>
       </slash>
       <choose line="2335">
        <fn name="exists">
         <varRef name="associated-form-control" slot="3"/>
        </fn>
        <compAtt line="2338">
         <fn role="name" name="local-name">
          <dot type="attribute()"/>
         </fn>
         <fn role="select" line="2340" name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <mergeAdj>
             <applyT mode="Q{}get-field" bSlot="4">
              <varRef role="select" name="associated-form-control" slot="3"/>
             </applyT>
            </mergeAdj>
           </data>
          </convert>
          <str val=""/>
         </fn>
        </compAtt>
        <and line="2343" op="and">
         <fn name="exists">
          <varRef name="pendingUpdates" slot="1"/>
         </fn>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <check card="1" diag="0|0||map:contains">
           <varRef name="pendingUpdates" slot="1"/>
          </check>
          <varRef name="updatedPath" slot="2"/>
         </ifCall>
        </and>
        <compAtt line="2344">
         <fn role="name" name="local-name">
          <dot type="attribute()"/>
         </fn>
         <ifCall role="select" line="2345" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <check card="1" diag="0|0||map:get">
           <varRef name="pendingUpdates" slot="1"/>
          </check>
          <varRef name="updatedPath" slot="2"/>
         </ifCall>
        </compAtt>
        <true/>
        <forEach line="2349">
         <dot type="attribute()"/>
         <copy flags="cin">
          <empty role="content"/>
         </copy>
        </forEach>
       </choose>
      </let>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="14" binds="12">
  <mode name="Q{}form-check-initial" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="2186" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2187">
     <param name="Q{}instance-id" slot="0" as="xs:string">
      <str role="select" val="saxon-forms-default"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
       <check card="1" diag="8|0|XTTE0590|instance-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="2188" name="Q{}pendingUpdates" slot="1" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <copy line="2206" flags="cin">
      <applyT role="content" mode="Q{}form-check" bSlot="0">
       <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       <withParam name="Q{}curPath" as="xs:string">
        <choose line="2196">
         <vc op="eq" onEmpty="0" comp="CCC">
          <varRef name="instance-id" slot="0"/>
          <str val="saxon-forms-default"/>
         </vc>
         <str val=""/>
         <true/>
         <cvUntyped line="2200" to="xs:string">
          <cast as="xs:untypedAtomic" emptiable="0">
           <fn name="concat">
            <str val="instance('"/>
            <varRef name="instance-id" slot="0"/>
            <str val="')/"/>
           </fn>
          </cast>
         </cvUntyped>
        </choose>
       </withParam>
      </applyT>
     </copy>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="15" binds="">
  <template name="Q{}action-reset" flags="os" line="3666" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3667">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="3669">
     <valueOf role="select">
      <str val="[action-reset] Reset triggered!"/>
     </valueOf>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="16" binds="16">
  <mode name="Q{}update-ref" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="2" flags="s" line="1642" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1643">
     <param name="Q{}path" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|path">
       <check card="1" diag="8|0|XTTE0590|path">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1644" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <copy line="1647" flags="cin">
      <applyT role="content" mode="Q{}update-ref" bSlot="0">
       <sequence role="select">
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </sequence>
       <withParam name="Q{}path" as="xs:string">
        <varRef line="1648" name="path" slot="0"/>
       </withParam>
       <withParam name="Q{}position">
        <varRef line="1649" name="position" slot="1"/>
       </withParam>
      </applyT>
     </copy>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="3" flags="s" line="1623" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1624">
     <param name="Q{}path" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|path">
       <check card="1" diag="8|0|XTTE0590|path">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1625" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <let line="1627" var="path-updated" as="xs:string" slot="2" eval="7">
      <choose>
       <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="position" slot="1"/>
        </data>
        <int val="0"/>
       </gc>
       <fn name="concat">
        <varRef name="path" slot="0"/>
        <str val="["/>
        <atomSing card="?" diag="0|2||fn:concat">
         <varRef name="position" slot="1"/>
        </atomSing>
        <str val="]"/>
       </fn>
       <true/>
       <varRef name="path" slot="0"/>
      </choose>
      <choose line="1631">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="substring">
         <cvUntyped to="xs:string">
          <data>
           <dot type="attribute()"/>
          </data>
         </cvUntyped>
         <int val="1"/>
         <fn line="1628" name="string-length">
          <varRef name="path" slot="0"/>
         </fn>
        </fn>
        <varRef name="path" slot="0"/>
       </vc>
       <compAtt line="1632">
        <fn role="name" line="1626" name="name">
         <dot type="attribute()"/>
        </fn>
        <convert role="select" line="1633" from="xs:untypedAtomic" to="xs:string">
         <cast as="xs:untypedAtomic" emptiable="0">
          <fn name="concat">
           <varRef name="path-updated" slot="2"/>
           <fn name="substring">
            <cvUntyped to="xs:string">
             <data>
              <dot type="attribute()"/>
             </data>
            </cvUntyped>
            <arith op="+" calc="i+i">
             <fn name="string-length">
              <varRef name="path-updated" slot="2"/>
             </fn>
             <int val="1"/>
            </arith>
           </fn>
          </fn>
         </cast>
        </convert>
       </compAtt>
       <true/>
       <copyOf line="1637" flags="vc">
        <dot type="attribute()"/>
       </copyOf>
      </choose>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="2.0" seq="0" rank="1" minImp="0" slots="3" flags="s" line="1609" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute(Q{}data-action)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name==='data-action'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1610">
     <param name="Q{}path" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|path">
       <check card="1" diag="8|0|XTTE0590|path">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1611" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <let line="1613" var="myid" as="xs:string" slot="2" eval="8">
      <fn name="concat">
       <fn name="generate-id">
        <dot type="attribute(Q{}data-action)"/>
       </fn>
       <atomSing card="?" diag="0|1||fn:concat">
        <varRef name="position" slot="1"/>
       </atomSing>
      </fn>
      <sequence line="1615">
       <att name="data-old-action">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="attribute(Q{}data-action)"/>
         </data>
        </convert>
       </att>
       <att line="1618" name="data-action">
        <convert from="xs:untypedAtomic" to="xs:string">
         <cast as="xs:untypedAtomic" emptiable="0">
          <choose>
           <fn name="exists">
            <slash>
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
             <fn name="key">
              <str val="Q{http://saxon.sf.net/}kk101"/>
              <varRef name="myid" slot="2"/>
              <dot type="document-node()"/>
             </fn>
            </slash>
           </fn>
           <fn name="concat">
            <fn name="generate-id">
             <dot type="attribute(Q{}data-action)"/>
            </fn>
            <fn name="generate-id">
             <dot type="attribute(Q{}data-action)"/>
            </fn>
           </fn>
           <true/>
           <varRef name="myid" slot="2"/>
          </choose>
         </cast>
        </convert>
       </att>
      </sequence>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="17" binds="14 3 2 6 18 19 20">
  <template name="Q{}xforms-value-changed" flags="os" line="3187" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3188">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="3190" var="refi" as="attribute(Q{}data-ref)?" slot="1" eval="8">
     <slash simple="1">
      <varRef name="form-control" slot="0"/>
      <axis name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
     </slash>
     <let line="3194" var="actions" as="item()?" slot="2" eval="8">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getAction"/>
       <arrayBlock>
        <fn name="string">
         <slash simple="1">
          <varRef name="form-control" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
         </slash>
        </fn>
       </arrayBlock>
      </ifCall>
      <let line="3198" var="updatedInstanceXML" as="element()" slot="3" eval="7">
       <treat line="3199" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
        <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
         <applyT mode="Q{}form-check-initial" bSlot="0">
          <check role="select" line="3197" card="1" diag="3|0|XTTE0570|instanceXML">
           <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="1" eval="7">
            <check card="1" diag="0|0||xforms:getInstance-JS">
             <cvUntyped to="xs:string">
              <data>
               <varRef name="refi" slot="1"/>
              </data>
             </cvUntyped>
            </check>
           </ufCall>
          </check>
          <withParam name="Q{}instance-id" as="xs:string">
           <ufCall line="3193" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="2" eval="7">
            <check card="1" diag="0|0||xforms:getInstanceId">
             <cvUntyped to="xs:string">
              <data>
               <varRef name="refi" slot="1"/>
              </data>
             </cvUntyped>
            </check>
           </ufCall>
          </withParam>
         </applyT>
        </check>
       </treat>
       <sequence line="3204">
        <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="3" eval="7 6">
         <check card="1" diag="0|0||xforms:setInstance-JS">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="refi" slot="1"/>
           </data>
          </cvUntyped>
         </check>
         <varRef name="updatedInstanceXML" slot="3"/>
        </ufCall>
        <callT line="3205" name="refreshOutputs-JS" bSlot="4"/>
        <ifCall line="3211" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setPendingUpdates"/>
         <arrayBlock>
          <treat line="3208" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||pendingInstanceUpdates">
           <map size="0"/>
          </treat>
         </arrayBlock>
        </ifCall>
        <ifCall line="3212" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setUpdates"/>
         <arrayBlock>
          <treat line="3209" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||instanceUpdates">
           <map size="0"/>
          </treat>
         </arrayBlock>
        </ifCall>
        <forEach line="3214">
         <varRef name="actions" slot="2"/>
         <let line="3215" var="action-map" as="item()" slot="4" eval="7">
          <dot/>
          <choose line="3217">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:contains">
             <varRef name="action-map" slot="4"/>
            </treat>
            <str val="@event"/>
           </ifCall>
           <choose line="3218">
            <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:get">
                <varRef name="action-map" slot="4"/>
               </treat>
               <str val="@event"/>
              </ifCall>
             </data>
             <str val="xforms-value-changed"/>
            </gc>
            <callT line="3220" name="applyActions" bSlot="5">
             <withParam name="Q{}action-map" flags="t" as="item()">
              <varRef line="3221" name="action-map" slot="4"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string">
              <check line="3222" card="1" diag="8|0|XTTE0590|nodeset">
               <cvUntyped to="xs:string">
                <data>
                 <varRef name="refi" slot="1"/>
                </data>
               </cvUntyped>
              </check>
             </withParam>
             <withParam name="Q{}instanceXML" flags="t" as="element()">
              <varRef line="3223" name="updatedInstanceXML" slot="3"/>
             </withParam>
            </callT>
           </choose>
          </choose>
         </let>
        </forEach>
        <ufCall line="3229" name="Q{http://www.w3.org/2002/xforms}checkRelevantFields" tailCall="false" bSlot="6" eval="4">
         <check card="1" diag="0|0||xforms:checkRelevantFields">
          <cvUntyped to="xs:string">
           <data>
            <slash line="3191" simple="1">
             <varRef name="form-control" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}data-element)" jsTest="return item.name==='data-element'"/>
            </slash>
           </data>
          </cvUntyped>
         </check>
        </ufCall>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="21" binds="22 23 23">
  <template name="Q{}getReferencedInstanceField" flags="os" line="2685" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2686">
    <param name="Q{}refi" slot="0" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|refi">
      <check card="1" diag="8|0|XTTE0590|refi">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="2688" var="field" as="node()*" slot="1" eval="8">
     <choose line="2690">
      <varRef name="refi" slot="0"/>
      <let line="2691" var="instance-map" as="map(xs:string, xs:string)" slot="2" eval="7">
       <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
        <varRef name="refi" slot="0"/>
       </ufCall>
       <let line="2698" var="this-instance" as="element()?" slot="3" eval="9">
        <callT line="2699" name="getInstance" bSlot="1">
         <withParam name="Q{}instance-id" flags="c" as="xs:string">
          <check line="2700" card="1" diag="8|0|XTTE0590|instance-id">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="instance-map" slot="2"/>
            <str val="instance-id"/>
           </ifCall>
          </check>
         </withParam>
        </callT>
        <treat line="2706" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|field">
         <evaluate dxns="">
          <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="instance-map" slot="2"/>
            <str val="xpath"/>
           </ifCall>
          </check>
          <varRef role="cxt" name="this-instance" slot="3"/>
          <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
           <varRef name="this-instance" slot="3"/>
          </check>
          <str role="sa" val="no"/>
          <map role="wp" size="0"/>
         </evaluate>
        </treat>
       </let>
      </let>
      <true/>
      <let line="2711" var="default-instance" as="element()?" slot="4" eval="9">
       <callT line="2712" name="getInstance" bSlot="2">
        <withParam name="Q{}instance-id" flags="c" as="xs:string">
         <str val="saxon-forms-default"/>
        </withParam>
       </callT>
       <varRef line="2716" name="default-instance" slot="4"/>
      </let>
     </choose>
     <varRef line="2721" name="field" slot="1"/>
    </let>
   </sequence>
  </template>
 </co>
 <co id="24" binds="">
  <template name="Q{}action-message" flags="os" line="3650" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3651">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="3655">
     <sequence role="select">
      <valueOf>
       <str val="[action-message] Message reads &#34;"/>
      </valueOf>
      <valueOf>
       <treat line="3653" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|message-value">
        <check card="1" diag="3|0|XTTE0570|message-value">
         <cvUntyped to="xs:string">
          <data>
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="action-map" slot="0"/>
            <str val="value"/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </valueOf>
      <valueOf flags="S">
       <str val="&#34;"/>
      </valueOf>
     </sequence>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="1" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" line="601" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:string" slots="5">
   <arg name="base" as="xs:string"/>
   <arg name="relative" as="xs:string"/>
   <choose role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="606">
    <fn name="starts-with">
     <varRef name="relative" slot="1"/>
     <str val="/"/>
    </fn>
    <varRef line="607" name="relative" slot="1"/>
    <fn line="609" name="starts-with">
     <varRef name="relative" slot="1"/>
     <str val="instance("/>
    </fn>
    <varRef line="610" name="relative" slot="1"/>
    <fn line="612" name="not">
     <varRef name="base" slot="0"/>
    </fn>
    <varRef line="613" name="relative" slot="1"/>
    <fn line="615" name="not">
     <varRef name="relative" slot="1"/>
    </fn>
    <varRef line="616" name="base" slot="0"/>
    <true/>
    <let line="620" var="parentCallCount" as="xs:integer" slot="2" eval="7">
     <choose>
      <fn name="contains">
       <varRef name="relative" slot="1"/>
       <str val="/"/>
      </fn>
      <fn name="count">
       <filter flags="b">
        <fn name="tokenize">
         <varRef name="relative" slot="1"/>
         <str val="/"/>
         <str val=""/>
        </fn>
        <vc op="eq" comp="CCC">
         <dot type="xs:string"/>
         <str val=".."/>
        </vc>
       </filter>
      </fn>
      <fn name="contains">
       <varRef name="relative" slot="1"/>
       <str val=".."/>
      </fn>
      <int val="1"/>
      <true/>
      <int val="0"/>
     </choose>
     <let line="623" var="slashes" as="xs:integer*" slot="3" eval="3">
      <choose>
       <fn name="contains">
        <varRef name="base" slot="0"/>
        <str val="/"/>
       </fn>
       <fn name="index-of">
        <fn name="string-to-codepoints">
         <varRef name="base" slot="0"/>
        </fn>
        <int val="47"/>
       </fn>
       <true/>
       <int val="0"/>
      </choose>
      <choose line="655">
       <compareToInt op="gt" val="0">
        <varRef name="parentCallCount" slot="2"/>
       </compareToInt>
       <fn line="659" name="concat">
        <fn name="substring">
         <varRef name="base" slot="0"/>
         <int val="1"/>
         <choose line="634">
          <and op="and">
           <vc op="ge" onEmpty="0" comp="CAVC">
            <fn name="count">
             <varRef name="slashes" slot="3"/>
            </fn>
            <varRef name="parentCallCount" slot="2"/>
           </vc>
           <compareToInt op="gt" val="0">
            <varRef name="parentCallCount" slot="2"/>
           </compareToInt>
          </and>
          <let line="635" var="vv:v0" as="xs:integer" slot="4" eval="13">
           <arith op="-" calc="i-i">
            <varRef name="parentCallCount" slot="2"/>
            <int val="1"/>
           </arith>
           <check card="1" diag="3|0|XTTE0570|parentSlash">
            <filter flags="p">
             <varRef name="slashes" slot="3"/>
             <arith op="-" calc="i-i">
              <fn name="last"/>
              <varRef name="vv:v0" slot="4"/>
             </arith>
            </filter>
           </check>
          </let>
          <true/>
          <check line="638" card="1" diag="3|0|XTTE0570|parentSlash">
           <lastOf>
            <varRef name="slashes" slot="3"/>
           </lastOf>
          </check>
         </choose>
        </fn>
        <fn name="replace">
         <varRef name="relative" slot="1"/>
         <str val="\.\./"/>
         <str val=""/>
         <str val=""/>
        </fn>
       </fn>
       <true/>
       <fn line="662" name="concat">
        <varRef name="base" slot="0"/>
        <str val="/"/>
        <varRef name="relative" slot="1"/>
       </fn>
      </choose>
     </let>
    </let>
   </choose>
  </function>
 </co>
 <co id="25" binds="">
  <function name="Q{http://saxonica.com/ns/forms-local}current-date" line="103" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:string" slots="0">
   <treat role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="104" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|today">
    <check card="1" diag="3|0|XTTE0570|today">
     <cvUntyped to="xs:string">
      <data>
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getCurrentDate"/>
        <arrayBlock/>
       </ifCall>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </function>
 </co>
 <co id="26" binds="1 2 4 4 27 14 3 6 18">
  <template name="Q{}action-setvalue" flags="os" line="3431" module="saxon-xforms.xsl" slots="10">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3432">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3433" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="3434" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3438" var="refz" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="3440" var="instance-id" as="xs:string" slot="4" eval="7">
      <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
       <varRef name="refz" slot="3"/>
      </ufCall>
      <let line="3453" var="valuez" as="document-node()" slot="5" eval="7">
       <doc line="3455" validation="preserve">
        <choose>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <varRef name="action-map" slot="0"/>
          <str val="@value"/>
         </ifCall>
         <let line="3456" var="contexti" as="node()" slot="6" eval="8">
          <evaluate line="3457" as="node()" dxns="">
           <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="2" eval="6">
            <varRef name="nodeset" slot="2"/>
           </ufCall>
           <varRef role="cxt" name="instanceXML" slot="1"/>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
          <evaluate line="3460" dxns="">
           <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="7">
            <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:impose">
             <check card="1" diag="0|0||xforms:impose">
              <cvUntyped to="xs:string">
               <data>
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="action-map" slot="0"/>
                 <str val="@value"/>
                </ifCall>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </ufCall>
           <varRef role="cxt" name="contexti" slot="6"/>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
         </let>
         <ifCall line="3463" name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:contains">
           <dot flags="a"/>
          </treat>
          <str val="value"/>
         </ifCall>
         <ifCall line="3464" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="action-map" slot="0"/>
          <str val="value"/>
         </ifCall>
         <true/>
         <str val=""/>
        </choose>
       </doc>
       <sequence line="3474">
        <choose>
         <fn name="exists">
          <varRef name="refz" slot="3"/>
         </fn>
         <let line="3476" var="associated-form-control" as="node()?" slot="7" eval="7">
          <check card="?" diag="3|0|XTTE0570|associated-form-control">
           <slash>
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            <fn name="key">
             <str val="Q{http://saxon.sf.net/}kk102"/>
             <varRef name="refz" slot="3"/>
             <dot type="document-node()"/>
            </fn>
           </slash>
          </check>
          <choose line="3478">
           <fn name="exists">
            <varRef name="associated-form-control" slot="7"/>
           </fn>
           <sequence line="3479">
            <applyT mode="Q{}set-field" bSlot="4">
             <varRef role="select" name="associated-form-control" slot="7"/>
             <withParam name="Q{}value" flags="t" as="xs:string">
              <cast line="3480" as="xs:string" emptiable="0">
               <data>
                <varRef name="valuez" slot="5"/>
               </data>
              </cast>
             </withParam>
            </applyT>
            <ifCall line="3482" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="setUpdates"/>
             <arrayBlock>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}put" type="map(*)">
               <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:put">
                <check card="1" diag="0|0||map:put">
                 <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="getUpdates"/>
                  <arrayBlock/>
                 </ifCall>
                </check>
               </treat>
               <varRef name="refz" slot="3"/>
               <cast as="xs:string" emptiable="0">
                <data>
                 <varRef name="valuez" slot="5"/>
                </data>
               </cast>
              </ifCall>
             </arrayBlock>
            </ifCall>
           </sequence>
           <true/>
           <ifCall line="3485" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="setPendingUpdates"/>
            <arrayBlock>
             <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}put" type="map(*)">
              <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:put">
               <check card="1" diag="0|0||map:put">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                 <check card="1" diag="0|0||ixsl:call">
                  <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                 </check>
                 <str val="getPendingUpdates"/>
                 <arrayBlock/>
                </ifCall>
               </check>
              </treat>
              <varRef name="refz" slot="3"/>
              <cast as="xs:string" emptiable="0">
               <data>
                <varRef name="valuez" slot="5"/>
               </data>
              </cast>
             </ifCall>
            </arrayBlock>
           </ifCall>
          </choose>
         </let>
        </choose>
        <choose line="3491">
         <and op="and">
          <fn name="exists">
           <varRef name="refz" slot="3"/>
          </fn>
          <vc op="ne" onEmpty="1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <varRef name="refz" slot="3"/>
           <str val=""/>
          </vc>
         </and>
         <let line="3493" var="pendingUpdates" as="map(xs:string, xs:string)?" slot="8" eval="7">
          <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|pendingUpdates">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="getPendingUpdates"/>
            <arrayBlock/>
           </ifCall>
          </treat>
          <let line="3495" var="updatedInstanceXML" as="element()" slot="9" eval="7">
           <treat line="3496" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
            <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
             <applyT mode="Q{}form-check-initial" bSlot="5">
              <choose role="select" line="3444">
               <and op="and">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <varRef name="instance-id" slot="4"/>
                 <str val="saxon-forms-default"/>
                </vc>
                <fn name="exists">
                 <varRef name="instanceXML" slot="1"/>
                </fn>
               </and>
               <check line="3445" card="1" diag="3|0|XTTE0570|instanceXML2">
                <varRef name="instanceXML" slot="1"/>
               </check>
               <true/>
               <check line="3448" card="1" diag="3|0|XTTE0570|instanceXML2">
                <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="6" eval="6">
                 <varRef name="refz" slot="3"/>
                </ufCall>
               </check>
              </choose>
              <withParam name="Q{}instance-id" as="xs:string">
               <varRef line="3497" name="instance-id" slot="4"/>
              </withParam>
              <withParam name="Q{}pendingUpdates" flags="t" as="map(xs:string, xs:string)?">
               <varRef line="3498" name="pendingUpdates" slot="8"/>
              </withParam>
             </applyT>
            </check>
           </treat>
           <sequence line="3503">
            <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="7" eval="6 6">
             <varRef name="refz" slot="3"/>
             <varRef name="updatedInstanceXML" slot="9"/>
            </ufCall>
            <callT line="3504" name="refreshOutputs-JS" bSlot="8" flags="t"/>
           </sequence>
          </let>
         </let>
        </choose>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="28" binds="">
  <globalVariable name="Q{}default-submission-id" type="xs:string" line="45" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="saxon-forms-default-submission"/>
  </globalVariable>
 </co>
 <co id="19" binds="2 3 4 26 0 8 24 29">
  <template name="Q{}applyActions" flags="os" line="2815" module="saxon-xforms.xsl" slots="11">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2816">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="2817" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="2818" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="2820" var="ref" as="xs:string?" slot="3" eval="7">
     <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|ref">
      <check card="?" diag="3|0|XTTE0570|ref">
       <cvUntyped to="xs:string">
        <data>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="action-map" slot="0"/>
          <str val="@ref"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line="2821" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="2834" var="ref-qualified" as="xs:string?" slot="5" eval="7">
       <choose>
        <fn name="exists">
         <varRef name="ref" slot="3"/>
        </fn>
        <choose>
         <fn name="exists">
          <varRef name="at" slot="4"/>
         </fn>
         <fn name="concat">
          <varRef name="ref" slot="3"/>
          <str val="["/>
          <varRef name="at" slot="4"/>
          <str val="]"/>
         </fn>
         <true/>
         <varRef name="ref" slot="3"/>
        </choose>
       </choose>
       <let line="2838" var="instanceXML2" as="element()" slot="6" eval="7">
        <choose line="2840">
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <ufCall line="2836" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="0" eval="7">
            <check card="1" diag="0|0||xforms:getInstanceId">
             <varRef name="ref" slot="3"/>
            </check>
           </ufCall>
           <str val="saxon-forms-default"/>
          </vc>
          <fn name="exists">
           <varRef name="instanceXML" slot="1"/>
          </fn>
         </and>
         <check line="2841" card="1" diag="3|0|XTTE0570|instanceXML2">
          <varRef name="instanceXML" slot="1"/>
         </check>
         <true/>
         <check line="2844" card="1" diag="3|0|XTTE0570|instanceXML2">
          <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="1" eval="7">
           <check card="1" diag="0|0||xforms:getInstance-JS">
            <varRef name="ref-qualified" slot="5"/>
           </check>
          </ufCall>
         </check>
        </choose>
        <let line="2851" var="context" as="node()?" slot="7" eval="7">
         <choose line="2853">
          <and op="and">
           <and op="and">
            <fn name="exists">
             <varRef name="ref-qualified" slot="5"/>
            </fn>
            <fn name="not">
             <gc op="=" card="1:1" comp="CCC">
              <varRef name="ref-qualified" slot="5"/>
              <str val=""/>
             </gc>
            </fn>
           </and>
           <fn name="exists">
            <varRef name="instanceXML2" slot="6"/>
           </fn>
          </and>
          <treat line="2854" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|context">
           <check card="?" diag="3|0|XTTE0570|context">
            <evaluate dxns="">
             <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="2" eval="7">
              <check card="1" diag="0|0||xforms:impose">
               <varRef name="ref-qualified" slot="5"/>
              </check>
             </ufCall>
             <varRef role="cxt" name="instanceXML2" slot="6"/>
             <str role="sa" val="no"/>
             <map role="wp" size="0"/>
            </evaluate>
           </check>
          </treat>
         </choose>
         <let line="2861" var="ifVar" as="xs:string?" slot="8" eval="7">
          <choose line="563">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <varRef line="2861" name="action-map" slot="0"/>
            <str val="@if"/>
           </ifCall>
           <treat line="564" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
            <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
             <cvUntyped to="xs:string">
              <data>
               <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                <varRef line="2861" name="action-map" slot="0"/>
                <str val="@if"/>
               </ifCall>
              </data>
             </cvUntyped>
            </check>
           </treat>
          </choose>
          <let line="2865" var="ifExecuted" as="xs:boolean" slot="9" eval="7">
           <choose line="2867">
            <and op="and">
             <fn name="exists">
              <varRef name="ifVar" slot="8"/>
             </fn>
             <fn name="exists">
              <varRef name="context" slot="7"/>
             </fn>
            </and>
            <treat line="2868" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|ifExecuted">
             <check card="1" diag="3|0|XTTE0570|ifExecuted">
              <cvUntyped to="xs:boolean">
               <data>
                <evaluate dxns="">
                 <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
                  <varRef name="ifVar" slot="8"/>
                 </check>
                 <varRef role="cxt" name="context" slot="7"/>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <true/>
            <true/>
           </choose>
           <choose line="2876">
            <varRef name="ifExecuted" slot="9"/>
            <let line="2877" var="action-name" as="xs:string" slot="10" eval="7">
             <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|action-name">
              <check card="1" diag="3|0|XTTE0570|action-name">
               <cvUntyped to="xs:string">
                <data>
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="action-map" slot="0"/>
                  <str val="name"/>
                 </ifCall>
                </data>
               </cvUntyped>
              </check>
             </treat>
             <sequence line="2880">
              <choose>
               <vc op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="setvalue"/>
               </vc>
               <callT line="2881" name="action-setvalue" bSlot="3">
                <withParam name="Q{}nodeset" flags="t" as="xs:string">
                 <check line="2882" card="1" diag="8|0|XTTE0590|nodeset">
                  <varRef name="ref" slot="3"/>
                 </check>
                </withParam>
                <withParam name="Q{}instanceXML" flags="t" as="element()">
                 <varRef line="2883" name="instanceXML2" slot="6"/>
                </withParam>
               </callT>
               <vc line="2886" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="insert"/>
               </vc>
               <callT line="2887" name="action-insert" bSlot="4">
                <withParam name="Q{}nodeset" flags="t" as="xs:string">
                 <check line="2888" card="1" diag="8|0|XTTE0590|nodeset">
                  <varRef name="ref-qualified" slot="5"/>
                 </check>
                </withParam>
                <withParam name="Q{}instanceXML" flags="t" as="element()">
                 <varRef line="2889" name="instanceXML2" slot="6"/>
                </withParam>
               </callT>
               <vc line="2892" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="delete"/>
               </vc>
               <callT line="2893" name="action-delete" bSlot="5">
                <withParam name="Q{}nodeset" flags="t" as="xs:string">
                 <check line="2894" card="1" diag="8|0|XTTE0590|nodeset">
                  <varRef name="ref-qualified" slot="5"/>
                 </check>
                </withParam>
                <withParam name="Q{}instanceXML" flags="t" as="element()">
                 <varRef line="2895" name="instanceXML2" slot="6"/>
                </withParam>
               </callT>
               <vc line="2898" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="message"/>
               </vc>
               <callT line="2899" name="action-message" bSlot="6"/>
              </choose>
              <forEach line="2906">
               <literal count="15">
                <str val="setvalue"/>
                <str val="insert"/>
                <str val="delete"/>
                <str val="setindex"/>
                <str val="toggle"/>
                <str val="setfocus"/>
                <str val="dispatch"/>
                <str val="rebuild"/>
                <str val="recalculate"/>
                <str val="revalidate"/>
                <str val="refresh"/>
                <str val="reset"/>
                <str val="load"/>
                <str val="send"/>
                <str val="message"/>
               </literal>
               <choose line="2907">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
                 <varRef name="action-map" slot="0"/>
                 <dot type="xs:string"/>
                </ifCall>
                <callT line="2908" name="applyNestedActions" bSlot="7">
                 <withParam name="Q{}action-name" flags="c" as="xs:string">
                  <dot line="2909" type="xs:string"/>
                 </withParam>
                </callT>
               </choose>
              </forEach>
             </sequence>
            </let>
           </choose>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="5" binds="5">
  <mode name="Q{}insert-node" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="1558" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1559">
     <param name="Q{}insert-node" slot="0" flags="ti" as="node()">
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|insert-node">
       <check card="1" diag="8|0|XTTE0590|insert-node">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="1560" name="Q{}position-relative" slot="1" flags="t" as="xs:string?">
      <str role="select" val="after"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position-relative">
       <check card="?" diag="8|0|XTTE0590|position-relative">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="1563">
      <and op="and">
       <is op="is">
        <dot type="element()"/>
        <varRef name="insert-node" slot="0"/>
       </is>
       <gc op="=" card="1:1" comp="CCC">
        <varRef name="position-relative" slot="1"/>
        <str val="before"/>
       </gc>
      </and>
      <sequence line="1564">
       <message>
        <sequence role="select">
         <valueOf>
          <str val="[insert-node mode] Found! "/>
         </valueOf>
         <valueOf>
          <fn name="serialize">
           <varRef name="insert-node" slot="0"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <copyOf line="1565" flags="vc">
        <varRef name="insert-node" slot="0"/>
       </copyOf>
      </sequence>
     </choose>
     <copy line="1568" flags="cin">
      <sequence role="content">
       <copyOf flags="vc">
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </copyOf>
       <applyT line="1569" mode="Q{}insert-node" bSlot="0">
        <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </applyT>
      </sequence>
     </copy>
     <choose line="1571">
      <and op="and">
       <is op="is">
        <dot type="element()"/>
        <varRef name="insert-node" slot="0"/>
       </is>
       <gc op="=" card="1:1" comp="CCC">
        <varRef name="position-relative" slot="1"/>
        <str val="after"/>
       </gc>
      </and>
      <copyOf line="1572" flags="vc">
       <varRef name="insert-node" slot="0"/>
      </copyOf>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="30" binds="31">
  <function name="Q{http://www.w3.org/2002/xforms}convert-json-to-xml" line="2111" module="saxon-xforms.xsl" eval="7" flags="pU" as="node()" slots="2">
   <arg name="jinstance" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2117" var="result" as="document-node()" slot="1" eval="7">
    <doc line="2119" validation="preserve">
     <applyT mode="Q{}jxml-xml" bSlot="0">
      <doc role="select" line="2114" validation="preserve">
       <fn name="json-to-xml">
        <varRef name="jinstance" slot="0"/>
       </fn>
      </doc>
     </applyT>
    </doc>
    <varRef line="2122" name="result" slot="1"/>
   </let>
  </function>
 </co>
 <co id="32" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}hasClass" line="2433" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:boolean" slots="2">
   <arg name="class" as="attribute(Q{}class)"/>
   <arg name="string" as="xs:string"/>
   <gc role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2436" op="=" card="N:1" comp="CCC">
    <fn name="tokenize">
     <cvUntyped to="xs:string">
      <data>
       <varRef name="class" slot="0"/>
      </data>
     </cvUntyped>
    </fn>
    <varRef line="2438" name="string" slot="1"/>
   </gc>
  </function>
 </co>
 <co id="33" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-instance-id" type="item()*" line="34" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="xforms-jinstance"/>
  </globalParam>
 </co>
 <co id="34" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getIfStatement" line="560" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:string?" slots="1">
   <arg name="map" as="map(*)"/>
   <choose role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="563">
    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
     <varRef name="map" slot="0"/>
     <str val="@if"/>
    </ifCall>
    <treat line="564" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="map" slot="0"/>
         <str val="@if"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </choose>
  </function>
 </co>
 <co id="18" binds="4 35 22 22">
  <template name="Q{}refreshOutputs-JS" flags="os" line="2729" module="saxon-xforms.xsl" slots="5">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2736" var="output-keys" as="item()?" slot="0" eval="8">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="getOutputKeys"/>
     <arrayBlock/>
    </ifCall>
    <forEach line="2738">
     <varRef name="output-keys" slot="0"/>
     <let line="2739" var="this-key" as="xs:string" slot="1" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|this-key">
       <check card="1" diag="3|0|XTTE0570|this-key">
        <cvUntyped to="xs:string">
         <data>
          <dot/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="2740" var="this-output" as="map(*)" slot="2" eval="7">
       <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|this-output">
        <check card="1" diag="3|0|XTTE0570|this-output">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
          <check card="1" diag="0|0||ixsl:call">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
          </check>
          <str val="getOutput"/>
          <arrayBlock>
           <varRef name="this-key" slot="1"/>
          </arrayBlock>
         </ifCall>
        </check>
       </treat>
       <let line="2775" var="value" as="xs:string" slot="3" eval="7">
        <treat line="2776" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|value">
         <check card="1" diag="3|0|XTTE0570|value">
          <cvUntyped to="xs:string">
           <data>
            <evaluate dxns="">
             <ufCall role="xpath" line="2743" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="0" eval="4">
              <choose>
               <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                <varRef name="this-output" slot="2"/>
                <str val="@value"/>
               </ifCall>
               <treat line="2744" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|xpath">
                <check card="1" diag="3|0|XTTE0570|xpath">
                 <cvUntyped to="xs:string">
                  <data>
                   <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                    <varRef name="this-output" slot="2"/>
                    <str val="@value"/>
                   </ifCall>
                  </data>
                 </cvUntyped>
                </check>
               </treat>
               <ifCall line="2746" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                <varRef name="this-output" slot="2"/>
                <str val="@ref"/>
               </ifCall>
               <treat line="2747" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|xpath">
                <check card="1" diag="3|0|XTTE0570|xpath">
                 <cvUntyped to="xs:string">
                  <data>
                   <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                    <varRef name="this-output" slot="2"/>
                    <str val="@ref"/>
                   </ifCall>
                  </data>
                 </cvUntyped>
                </check>
               </treat>
               <true/>
               <str val=""/>
              </choose>
             </ufCall>
             <ufCall role="cxt" line="2759" name="Q{http://www.w3.org/2002/xforms}instance" tailCall="false" bSlot="1" eval="7">
              <check card="1" diag="3|0|XTTE0570|this-instance-id">
               <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                <choose>
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
                  <varRef name="this-output" slot="2"/>
                  <str val="@ref"/>
                 </ifCall>
                 <ufCall line="2761" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="2" eval="7">
                  <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:getInstanceMap">
                   <check card="1" diag="0|0||xforms:getInstanceMap">
                    <cvUntyped to="xs:string">
                     <data>
                      <ifCall line="2760" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                       <varRef name="this-output" slot="2"/>
                       <str val="@ref"/>
                      </ifCall>
                     </data>
                    </cvUntyped>
                   </check>
                  </treat>
                 </ufCall>
                 <true/>
                 <ufCall line="2764" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="3" eval="0">
                  <str val="saxon-forms-default"/>
                 </ufCall>
                </choose>
                <str val="instance-id"/>
               </ifCall>
              </check>
             </ufCall>
             <str role="sa" val="no"/>
             <map role="wp" size="0"/>
            </evaluate>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="2779" var="associated-form-control" as="node()?" slot="4" eval="7">
         <check card="?" diag="3|0|XTTE0570|associated-form-control">
          <slash>
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
           <fn name="key">
            <str val="Q{http://saxon.sf.net/}kk103"/>
            <varRef name="this-key" slot="1"/>
            <dot type="document-node()"/>
           </fn>
          </slash>
         </check>
         <choose line="2782">
          <fn name="exists">
           <varRef name="associated-form-control" slot="4"/>
          </fn>
          <resultDoc line="2783" global="#&#xD;&#xA;#Tue Jul 24 21:04:01 BST 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Tue Jul 24 21:04:01 BST 2018&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
           <fn role="href" name="concat">
            <str val="#"/>
            <varRef name="this-key" slot="1"/>
           </fn>
           <valueOf role="content" line="2784">
            <varRef name="value" slot="3"/>
           </valueOf>
          </resultDoc>
         </choose>
        </let>
       </let>
      </let>
     </let>
    </forEach>
   </let>
  </template>
 </co>
 <co id="20" binds="3">
  <function name="Q{http://www.w3.org/2002/xforms}checkRelevantFields" line="456" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="12">
   <arg name="refElement" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="459" var="pendingUpdatesi" as="map(xs:string, xs:string)?" slot="1" eval="7">
    <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|pendingUpdatesi">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
      <check card="1" diag="0|0||ixsl:call">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
      </check>
      <str val="getPendingUpdates"/>
      <arrayBlock/>
     </ifCall>
    </treat>
    <let line="462" var="updatesi" as="map(xs:string, xs:string)?" slot="2" eval="7">
     <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|updatesi">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getUpdates"/>
       <arrayBlock/>
      </ifCall>
     </treat>
     <let line="465" var="relevantMap" as="map(xs:string, xs:string)" slot="3" eval="7">
      <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|relevantMap">
       <check card="1" diag="3|0|XTTE0570|relevantMap">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="getRelevantMap"/>
         <arrayBlock/>
        </ifCall>
       </check>
      </treat>
      <let line="466" var="mapKeys" as="xs:anyAtomicType*" slot="4" eval="3">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
        <varRef name="relevantMap" slot="3"/>
       </ifCall>
       <sequence line="496">
        <forEach>
         <sequence line="469">
          <forEach>
           <varRef name="mapKeys" slot="4"/>
           <choose line="470">
            <fn name="matches">
             <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
              <varRef name="relevantMap" slot="3"/>
              <dot type="xs:anyAtomicType"/>
             </ifCall>
             <varRef name="refElement" slot="0"/>
             <str val=""/>
            </fn>
            <dot line="471" type="xs:anyAtomicType"/>
           </choose>
          </forEach>
          <forEach line="460">
           <choose>
            <fn name="exists">
             <varRef name="pendingUpdatesi" slot="1"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
             <check card="1" diag="0|0||map:keys">
              <varRef name="pendingUpdatesi" slot="1"/>
             </check>
            </ifCall>
           </choose>
           <let line="477" var="keyi" as="xs:string?" slot="5" eval="7">
            <lastOf>
             <fn name="tokenize">
              <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:tokenize">
               <cvUntyped to="xs:string">
                <dot type="xs:anyAtomicType"/>
               </cvUntyped>
              </treat>
              <str val="/"/>
              <str val=""/>
             </fn>
            </lastOf>
            <let line="479" var="vv:v0" as="xs:string" slot="6" eval="13">
             <check card="1" diag="0|1||fn:matches">
              <varRef name="keyi" slot="5"/>
             </check>
             <forEach line="478">
              <varRef name="mapKeys" slot="4"/>
              <choose line="479">
               <fn name="matches">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="relevantMap" slot="3"/>
                 <dot type="xs:anyAtomicType"/>
                </ifCall>
                <varRef name="vv:v0" slot="6"/>
                <str val=""/>
               </fn>
               <dot line="480" type="xs:anyAtomicType"/>
              </choose>
             </forEach>
            </let>
           </let>
          </forEach>
          <forEach line="463">
           <choose>
            <fn name="exists">
             <varRef name="updatesi" slot="2"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
             <check card="1" diag="0|0||map:keys">
              <varRef name="updatesi" slot="2"/>
             </check>
            </ifCall>
           </choose>
           <let line="486" var="keyi" as="xs:string?" slot="7" eval="7">
            <lastOf>
             <fn name="tokenize">
              <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:tokenize">
               <cvUntyped to="xs:string">
                <dot type="xs:anyAtomicType"/>
               </cvUntyped>
              </treat>
              <str val="/"/>
              <str val=""/>
             </fn>
            </lastOf>
            <let line="488" var="vv:v1" as="xs:string" slot="8" eval="13">
             <check card="1" diag="0|1||fn:matches">
              <varRef name="keyi" slot="7"/>
             </check>
             <forEach line="487">
              <varRef name="mapKeys" slot="4"/>
              <choose line="488">
               <fn name="matches">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="relevantMap" slot="3"/>
                 <dot type="xs:anyAtomicType"/>
                </ifCall>
                <varRef name="vv:v1" slot="8"/>
                <str val=""/>
               </fn>
               <dot line="489" type="xs:anyAtomicType"/>
              </choose>
             </forEach>
            </let>
           </let>
          </forEach>
         </sequence>
         <let line="497" var="keyi" as="xs:anyAtomicType" slot="9" eval="7">
          <dot type="xs:anyAtomicType"/>
          <let line="498" var="context" as="node()*" slot="10" eval="8">
           <slash>
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            <fn name="key">
             <str val="Q{http://saxon.sf.net/}kk102"/>
             <varRef name="keyi" slot="9"/>
             <dot type="document-node()"/>
            </fn>
           </slash>
           <let line="501" var="relevantCheck" as="xs:boolean" slot="11" eval="7">
            <treat line="502" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantCheck">
             <check card="1" diag="3|0|XTTE0570|relevantCheck">
              <cvUntyped to="xs:boolean">
               <data>
                <evaluate dxns="">
                 <fn role="xpath" name="concat">
                  <dot type="xs:anyAtomicType"/>
                  <str val="/"/>
                  <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                   <varRef name="relevantMap" slot="3"/>
                   <dot type="xs:anyAtomicType"/>
                  </ifCall>
                 </fn>
                 <ufCall role="cxt" line="499" name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
                  <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:getInstance-JS">
                   <cvUntyped to="xs:string">
                    <varRef name="keyi" slot="9"/>
                   </cvUntyped>
                  </treat>
                 </ufCall>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <choose line="505">
             <varRef name="relevantCheck" slot="11"/>
             <ifCall line="508" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
              <str val="style.display"/>
              <str val="inline"/>
              <check card="1" diag="0|2||ixsl:set-property">
               <conditionalSort>
                <fn name="exists">
                 <tail start="2">
                  <varRef name="context" slot="10"/>
                 </tail>
                </fn>
                <docOrder intra="1">
                 <slash>
                  <varRef name="context" slot="10"/>
                  <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
                 </slash>
                </docOrder>
               </conditionalSort>
              </check>
             </ifCall>
             <true/>
             <ifCall line="511" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
              <str val="style.display"/>
              <str val="none"/>
              <check card="1" diag="0|2||ixsl:set-property">
               <conditionalSort>
                <fn name="exists">
                 <tail start="2">
                  <varRef name="context" slot="10"/>
                 </tail>
                </fn>
                <docOrder intra="1">
                 <slash>
                  <varRef name="context" slot="10"/>
                  <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
                 </slash>
                </docOrder>
               </conditionalSort>
              </check>
             </ifCall>
            </choose>
           </let>
          </let>
         </let>
        </forEach>
        <ifCall line="516" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="clearPendingUpdates"/>
         <arrayBlock/>
        </ifCall>
        <ifCall line="517" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="clearUpdates"/>
         <arrayBlock/>
        </ifCall>
       </sequence>
      </let>
     </let>
    </let>
   </let>
  </function>
 </co>
 <co id="36" vis="PUBLIC" binds="">
  <globalParam name="Q{}xform-html-id" type="xs:string" line="38" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="xForm"/>
  </globalParam>
 </co>
 <co id="37" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}random" line="93" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:double" slots="0">
   <check role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="94" card="1" diag="3|0|XTTE0570|randomNumber">
    <convert from="xs:anyAtomicType" to="xs:double" flags="p">
     <cvUntyped to="xs:double">
      <data>
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="Math.random"/>
        <arrayBlock/>
       </ifCall>
      </data>
     </cvUntyped>
    </convert>
   </check>
  </function>
 </co>
 <co id="38" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-file" type="xs:string?" line="40" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <empty/>
  </globalParam>
 </co>
 <co id="39" binds="3 35 14 40 4 41 19">
  <template name="Q{}xforms-submit" flags="os" line="3239" module="saxon-xforms.xsl" slots="15">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3240">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="3242" var="submission" as="map(*)" slot="1" eval="7">
     <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|submission">
      <check card="1" diag="3|0|XTTE0570|submission">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getSubmission"/>
        <arrayBlock>
         <fn name="string">
          <slash simple="1">
           <varRef name="form-control" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
          </slash>
         </fn>
        </arrayBlock>
       </ifCall>
      </check>
     </treat>
     <let line="3243" var="actions" as="map(*)?" slot="2" eval="7">
      <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getAction"/>
        <arrayBlock>
         <fn name="string">
          <slash simple="1">
           <varRef name="form-control" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
          </slash>
         </fn>
        </arrayBlock>
       </ifCall>
      </treat>
      <let line="3247" var="refi" as="xs:string?" slot="3" eval="7">
       <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
        <check card="?" diag="3|0|XTTE0570|refi">
         <cvUntyped to="xs:string">
          <data>
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="submission" slot="1"/>
            <str val="@ref"/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line="3249" var="instance-id" as="xs:string" slot="4" eval="7">
        <choose line="3251">
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="submission" slot="1"/>
          <str val="@instance"/>
         </ifCall>
         <treat line="3252" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|instance-id">
          <check card="1" diag="3|0|XTTE0570|instance-id">
           <cvUntyped to="xs:string">
            <data>
             <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
              <varRef name="submission" slot="1"/>
              <str val="@instance"/>
             </ifCall>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <true/>
         <str val="saxon-forms-default"/>
        </choose>
        <let line="3263" var="instanceXML" as="element()" slot="5" eval="7">
         <choose>
          <varRef name="refi" slot="3"/>
          <check card="1" diag="3|0|XTTE0570|instanceXML">
           <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
            <check card="1" diag="0|0||xforms:getInstance-JS">
             <varRef name="refi" slot="3"/>
            </check>
           </ufCall>
          </check>
          <true/>
          <check card="1" diag="3|0|XTTE0570|instanceXML">
           <ufCall name="Q{http://www.w3.org/2002/xforms}instance" tailCall="false" bSlot="1" eval="6">
            <varRef name="instance-id" slot="4"/>
           </ufCall>
          </check>
         </choose>
         <let line="3265" var="updatedInstanceXML" as="element()" slot="6" eval="7">
          <treat line="3266" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
           <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
            <applyT mode="Q{}form-check-initial" bSlot="2">
             <varRef role="select" name="instanceXML" slot="5"/>
             <withParam name="Q{}instance-id" as="xs:string">
              <varRef line="3267" name="instance-id" slot="4"/>
             </withParam>
            </applyT>
           </check>
          </treat>
          <let line="3271" var="required-fieldsi" as="element()*" slot="7" eval="8">
           <filter flags="b">
            <slash simple="1">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
             <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <fn name="exists">
             <axis name="attribute" nodeTest="attribute(Q{}data-required)" jsTest="return item.name==='data-required'"/>
            </fn>
           </filter>
           <let line="3273" var="required-fields-check" as="element()*" slot="8" eval="3">
            <ufCall name="Q{http://www.w3.org/2002/xforms}check-required-fields" tailCall="false" bSlot="3" eval="6">
             <varRef name="updatedInstanceXML" slot="6"/>
            </ufCall>
            <choose line="3277">
             <fn name="empty">
              <varRef name="required-fields-check" slot="8"/>
             </fn>
             <let line="3278" var="requestBodyXML" as="element()" slot="9" eval="7">
              <choose line="3280">
               <varRef name="refi" slot="3"/>
               <treat line="3281" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|requestBodyXML">
                <check card="1" diag="3|0|XTTE0570|requestBodyXML">
                 <evaluate dxns="">
                  <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="4" eval="7">
                   <check card="1" diag="0|0||xforms:impose">
                    <varRef name="refi" slot="3"/>
                   </check>
                  </ufCall>
                  <varRef role="cxt" name="instanceXML" slot="5"/>
                  <str role="sa" val="no"/>
                  <map role="wp" size="0"/>
                 </evaluate>
                </check>
               </treat>
               <true/>
               <varRef line="3284" name="instanceXML" slot="5"/>
              </choose>
              <let line="3298" var="method" as="xs:string" slot="10" eval="7">
               <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|method">
                <check card="1" diag="3|0|XTTE0570|method">
                 <cvUntyped to="xs:string">
                  <data>
                   <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                    <varRef name="submission" slot="1"/>
                    <str val="@method"/>
                   </ifCall>
                  </data>
                 </cvUntyped>
                </check>
               </treat>
               <let line="3300" var="serialization" as="xs:string?" slot="11" eval="7">
                <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|serialization">
                 <check card="?" diag="3|0|XTTE0570|serialization">
                  <cvUntyped to="xs:string">
                   <data>
                    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                     <varRef name="submission" slot="1"/>
                     <str val="@serialization"/>
                    </ifCall>
                   </data>
                  </cvUntyped>
                 </check>
                </treat>
                <let line="3302" var="query-parameters" as="xs:string?" slot="12" eval="7">
                 <choose line="3303">
                  <and op="and">
                   <fn name="exists">
                    <varRef name="serialization" slot="11"/>
                   </fn>
                   <gc op="=" card="1:1" comp="CCC">
                    <varRef name="serialization" slot="11"/>
                    <str val="application/x-www-form-urlencoded"/>
                   </gc>
                  </and>
                  <fn line="3311" name="string-join">
                   <forEach line="3305">
                    <slash simple="1">
                     <varRef name="requestBodyXML" slot="9"/>
                     <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                    </slash>
                    <fn line="3306" name="concat">
                     <fn name="name">
                      <dot type="element()"/>
                     </fn>
                     <str val="="/>
                     <fn name="string">
                      <dot type="element()"/>
                     </fn>
                    </fn>
                   </forEach>
                   <str val="&amp;"/>
                  </fn>
                 </choose>
                 <let line="3315" var="href-base" as="xs:string" slot="13" eval="7">
                  <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|href-base">
                   <check card="1" diag="3|0|XTTE0570|href-base">
                    <cvUntyped to="xs:string">
                     <data>
                      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                       <varRef name="submission" slot="1"/>
                       <str val="@resource"/>
                      </ifCall>
                     </data>
                    </cvUntyped>
                   </check>
                  </treat>
                  <sequence line="3346">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}schedule-action" type="item()*">
                    <int val="0"/>
                    <empty/>
                    <callT name="HTTPsubmit" bSlot="5">
                     <withParam name="Q{}instance-id" flags="c" as="xs:string">
                      <varRef line="3347" name="instance-id" slot="4"/>
                     </withParam>
                     <withParam name="Q{}targetref" flags="c" as="xs:string?">
                      <treat line="3348" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|targetref">
                       <check card="?" diag="8|0|XTTE0590|targetref">
                        <cvUntyped to="xs:string">
                         <data>
                          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                           <varRef name="submission" slot="1"/>
                           <str val="@targetref"/>
                          </ifCall>
                         </data>
                        </cvUntyped>
                       </check>
                      </treat>
                     </withParam>
                     <withParam name="Q{}replace" flags="c" as="xs:string?">
                      <treat line="3349" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|replace">
                       <check card="?" diag="8|0|XTTE0590|replace">
                        <cvUntyped to="xs:string">
                         <data>
                          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                           <varRef name="submission" slot="1"/>
                           <str val="@replace"/>
                          </ifCall>
                         </data>
                        </cvUntyped>
                       </check>
                      </treat>
                     </withParam>
                    </callT>
                    <ifCall line="3333" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                     <sequence>
                      <choose>
                       <vc op="ne" onEmpty="1" comp="CCC">
                        <fn name="upper-case">
                         <varRef name="method" slot="10"/>
                        </fn>
                        <str val="GET"/>
                       </vc>
                       <ifCall line="3334" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                        <str val="body"/>
                        <doc line="3294" validation="preserve">
                         <doc flags="l">
                          <varRef name="requestBodyXML" slot="9"/>
                         </doc>
                        </doc>
                       </ifCall>
                      </choose>
                      <ifCall line="3336" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                       <str val="method"/>
                       <varRef name="method" slot="10"/>
                      </ifCall>
                      <ifCall line="3337" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                       <str val="href"/>
                       <choose line="3319">
                        <fn name="exists">
                         <varRef name="query-parameters" slot="12"/>
                        </fn>
                        <fn line="3320" name="concat">
                         <varRef name="href-base" slot="13"/>
                         <str val="?"/>
                         <varRef name="query-parameters" slot="12"/>
                        </fn>
                        <true/>
                        <varRef line="3323" name="href-base" slot="13"/>
                       </choose>
                      </ifCall>
                      <ifCall line="3338" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                       <str val="media-type"/>
                       <treat line="3328" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|mediatype">
                        <check card="1" diag="3|0|XTTE0570|mediatype">
                         <cvUntyped to="xs:string">
                          <data>
                           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                            <varRef name="submission" slot="1"/>
                            <str val="@mediatype"/>
                           </ifCall>
                          </data>
                         </cvUntyped>
                        </check>
                       </treat>
                      </ifCall>
                     </sequence>
                     <map size="2">
                      <str val="duplicates"/>
                      <str val="reject"/>
                      <str val="duplicates-error-code"/>
                      <str val="XTDE3365"/>
                     </map>
                    </ifCall>
                   </ifCall>
                   <forEach line="3353">
                    <varRef name="actions" slot="2"/>
                    <let line="3354" var="action-map" as="map(*)" slot="14" eval="7">
                     <dot type="map(*)"/>
                     <choose line="3357">
                      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
                       <varRef name="action-map" slot="14"/>
                       <str val="@event"/>
                      </ifCall>
                      <choose line="3358">
                       <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                        <data>
                         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                          <varRef name="action-map" slot="14"/>
                          <str val="@event"/>
                         </ifCall>
                        </data>
                        <str val="xforms-submit-done"/>
                       </gc>
                       <callT line="3359" name="applyActions" bSlot="6" flags="t">
                        <withParam name="Q{}action-map" flags="t" as="item()">
                         <varRef line="3360" name="action-map" slot="14"/>
                        </withParam>
                        <withParam name="Q{}nodeset" flags="t" as="xs:string">
                         <check line="3361" card="1" diag="8|0|XTTE0590|nodeset">
                          <varRef name="refi" slot="3"/>
                         </check>
                        </withParam>
                        <withParam name="Q{}instanceXML" flags="t" as="element()">
                         <varRef line="3362" name="instanceXML" slot="5"/>
                        </withParam>
                       </callT>
                      </choose>
                     </choose>
                    </let>
                   </forEach>
                  </sequence>
                 </let>
                </let>
               </let>
              </let>
             </let>
             <true/>
             <ifCall line="3375" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="alert"/>
              <arrayBlock>
               <fn name="serialize">
                <doc line="3370" flags="t" validation="preserve">
                 <forEach>
                  <varRef name="required-fields-check" slot="8"/>
                  <valueOf line="3372" flags="l">
                   <fn name="concat">
                    <str val="Value error see: "/>
                    <fn name="serialize">
                     <slash line="3371" simple="1">
                      <dot type="element()"/>
                      <axis line="3372" name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
                     </slash>
                    </fn>
                    <str val="&#xA;"/>
                   </fn>
                  </valueOf>
                 </forEach>
                </doc>
               </fn>
              </arrayBlock>
             </ifCall>
            </choose>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="7" binds="3 42 38">
  <template name="Q{}xforms-rebuild" flags="os" line="3162" module="saxon-xforms.xsl" slots="2">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3163" var="instanceDocs" as="map(xs:anyAtomicType, element()?)" slot="0" eval="8">
    <let line="3164" var="instance-keys" as="item()?" slot="1" eval="8">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
      <check card="1" diag="0|0||ixsl:call">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
      </check>
      <str val="getInstanceKeys"/>
      <arrayBlock/>
     </ifCall>
     <ifCall line="3166" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
      <forEach>
       <varRef name="instance-keys" slot="1"/>
       <ifCall line="3168" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <atomSing diag="0|0||map:entry">
         <dot/>
        </atomSing>
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="8">
         <fn line="3167" name="concat">
          <str val="instance('"/>
          <atomSing card="?" diag="0|1||fn:concat">
           <dot/>
          </atomSing>
          <str val="')/"/>
         </fn>
        </ufCall>
       </ifCall>
      </forEach>
      <map size="2">
       <str val="duplicates"/>
       <str val="reject"/>
       <str val="duplicates-error-code"/>
       <str val="XTDE3365"/>
      </map>
     </ifCall>
    </let>
    <callT line="3173" name="xformsjs-main" bSlot="1" flags="t">
     <withParam name="Q{}xforms-file" flags="c" as="xs:string?">
      <gVarRef line="3174" name="Q{}xforms-file" bSlot="2"/>
     </withParam>
     <withParam name="Q{}instance-docs" flags="c" as="map(*)">
      <varRef line="3175" name="instanceDocs" slot="0"/>
     </withParam>
    </callT>
   </let>
  </template>
 </co>
 <co id="27" binds="">
  <mode name="Q{}set-field" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="1" flags="s" line="2413" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:textarea" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='textarea'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2414">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <ifCall line="2416" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:textarea"/>
      <str val="value"/>
     </ifCall>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="1" flags="s" line="2405" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:select" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='select'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2406">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <forEach line="2408">
      <filter flags="b">
       <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='option';"/>
       <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="value" slot="0"/>
        </data>
        <attVal name="Q{}value" chk="0"/>
       </gc>
      </filter>
      <ifCall line="2409" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
       <str val="selected"/>
       <true/>
       <dot type="element(Q{}option)"/>
      </ifCall>
     </forEach>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="1" flags="s" line="2384" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:input" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='input'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2385">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <forEach line="2388">
      <dot type="*:input"/>
      <choose line="2390">
       <and op="and">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
        </fn>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}type" chk="0"/>
         <str val="checkbox"/>
        </gc>
       </and>
       <ifCall line="2391" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
        <str val="checked"/>
        <choose>
         <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="value" slot="0"/>
          </data>
          <str val="true"/>
         </gc>
         <check card="?" diag="0|1||ixsl:set-property">
          <varRef name="value" slot="0"/>
         </check>
         <true/>
         <str val=""/>
        </choose>
        <dot type="*:input"/>
       </ifCall>
       <true/>
       <ifCall line="2394" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
        <str val="value"/>
        <check card="?" diag="0|1||ixsl:set-property">
         <varRef name="value" slot="0"/>
        </check>
        <dot type="*:input"/>
       </ifCall>
      </choose>
     </forEach>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="43" binds="">
  <globalVariable name="Q{}xforms-actions" type="xs:string+" line="64" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&gt;=1;};">
   <literal count="15">
    <str val="setvalue"/>
    <str val="insert"/>
    <str val="delete"/>
    <str val="setindex"/>
    <str val="toggle"/>
    <str val="setfocus"/>
    <str val="dispatch"/>
    <str val="rebuild"/>
    <str val="recalculate"/>
    <str val="revalidate"/>
    <str val="refresh"/>
    <str val="reset"/>
    <str val="load"/>
    <str val="send"/>
    <str val="message"/>
   </literal>
  </globalVariable>
 </co>
 <co id="44" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}foo" line="68" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:boolean" slots="1">
   <arg name="num" as="xs:integer"/>
   <compareToInt role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="71" op="lt" val="5">
    <varRef name="num" slot="0"/>
   </compareToInt>
  </function>
 </co>
 <co id="45" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-cache-id" type="item()*" line="35" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="xforms-cache"/>
  </globalParam>
 </co>
 <co id="4" binds="46">
  <function name="Q{http://www.w3.org/2002/xforms}impose" line="19" module="xforms-function-library.xsl" eval="8" flags="pU" as="xs:string" slots="3">
   <arg name="input" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="33" var="vv:v0" as="xs:anyAtomicType*" slot="1" eval="4">
    <data>
     <gVarRef name="Q{}xform-functions" bSlot="0"/>
    </data>
    <let line="49" var="parts2" as="xs:string*" slot="2" eval="8">
     <analyzeString line="54">
      <fn role="select" line="30" name="string-join">
       <analyzeString>
        <varRef role="select" name="input" slot="0"/>
        <str role="regex" val="\i\c*\("/>
        <str role="flags" val=""/>
        <choose role="matching" line="33">
         <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <varRef name="vv:v0" slot="1"/>
          <fn name="substring-before">
           <dot type="xs:string"/>
           <str val="("/>
          </fn>
         </gc>
         <fn line="34" name="concat">
          <str val="xforms:"/>
          <dot type="xs:string"/>
         </fn>
         <true/>
         <dot line="37" type="xs:string"/>
        </choose>
        <dot role="nonMatching" line="42" type="xs:string"/>
       </analyzeString>
      </fn>
      <str role="regex" val="(^\s*|[^\i\c\]])/\i\c*(/)"/>
      <str role="flags" val=""/>
      <sequence role="matching" line="56">
       <fn name="regex-group">
        <int val="1"/>
       </fn>
       <fn line="57" name="regex-group">
        <int val="2"/>
       </fn>
      </sequence>
      <dot role="nonMatching" line="60" type="xs:string"/>
     </analyzeString>
     <fn line="65" name="string-join">
      <varRef name="parts2" slot="2"/>
     </fn>
    </let>
   </let>
  </function>
 </co>
 <co id="46" binds="">
  <globalVariable name="Q{}xform-functions" type="item()+" line="17" module="xforms-function-library.xsl" visibility="PRIVATE" jsAcceptor="return val;" jsCardCheck="function c(n) {return n&gt;=1;};">
   <sequence ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="17">
    <literal count="5">
     <str val="instance"/>
     <str val="index"/>
     <str val="avg"/>
     <str val="foo"/>
     <str val="current-date"/>
    </literal>
    <slash simple="1">
     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
      <dot flags="a"/>
     </treat>
     <axis name="child" nodeTest="element(Q{}random)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='random';"/>
    </slash>
   </sequence>
  </globalVariable>
 </co>
 <co id="40" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}check-required-fields" line="681" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="3">
   <arg name="instanceXML" as="element()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="684" var="required-fieldsi" as="element()*" slot="1" eval="8">
    <filter flags="b">
     <slash simple="1">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
      <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </slash>
     <fn name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-required)" jsTest="return item.name==='data-required'"/>
     </fn>
    </filter>
    <forEach line="686">
     <varRef name="required-fieldsi" slot="1"/>
     <let line="688" var="resulti" as="document-node()" slot="2" eval="7">
      <doc line="691" validation="preserve">
       <evaluate dxns="">
        <fn role="xpath" name="concat">
         <str val="boolean(normalize-space("/>
         <attVal name="Q{}data-ref" chk="0"/>
         <str val="))"/>
         <str val="="/>
         <attVal name="Q{}data-ref" chk="0"/>
         <str val="/"/>
         <attVal name="Q{}data-required" chk="0"/>
        </fn>
        <varRef role="cxt" name="instanceXML" slot="0"/>
        <str role="sa" val="no"/>
        <map role="wp" size="0"/>
       </evaluate>
      </doc>
      <choose line="697">
       <vc op="eq" onEmpty="0" comp="CCC">
        <cast as="xs:string" emptiable="0">
         <data>
          <varRef name="resulti" slot="2"/>
         </data>
        </cast>
        <str val="false"/>
       </vc>
       <dot type="element()"/>
      </choose>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id="47" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}index" line="75" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:integer" slots="2">
   <arg name="repeatID" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="77" var="element" as="node()*" slot="1" eval="8">
    <slash>
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
     <fn name="key">
      <str val="Q{http://saxon.sf.net/}kk103"/>
      <varRef name="repeatID" slot="0"/>
      <dot type="document-node()"/>
     </fn>
    </slash>
    <choose line="79">
     <fn name="empty">
      <varRef name="element" slot="1"/>
     </fn>
     <int val="0"/>
     <fn line="83" name="exists">
      <conditionalSort>
       <fn name="exists">
        <tail start="2">
         <varRef name="element" slot="1"/>
        </tail>
       </fn>
       <docOrder intra="1">
        <slash>
         <varRef name="element" slot="1"/>
         <axis name="attribute" nodeTest="attribute(Q{}data-count)" jsTest="return item.name==='data-count'"/>
        </slash>
       </docOrder>
      </conditionalSort>
     </fn>
     <check line="84" card="1" diag="5|0|XTTE0780|xforms:index">
      <cast as="xs:integer" emptiable="1">
       <atomSing card="?" diag="2|0||cast as">
        <conditionalSort>
         <fn name="exists">
          <tail start="2">
           <varRef name="element" slot="1"/>
          </tail>
         </fn>
         <docOrder intra="1">
          <slash>
           <varRef name="element" slot="1"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-count)" jsTest="return item.name==='data-count'"/>
          </slash>
         </docOrder>
        </conditionalSort>
       </atomSing>
      </cast>
     </check>
     <true/>
     <int val="0"/>
    </choose>
   </let>
  </function>
 </co>
 <co id="9" binds="9">
  <mode name="Q{}delete-node" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="1" flags="s" line="1584" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1585">
     <param name="Q{}delete-node" slot="0" flags="ti" as="node()">
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|delete-node">
       <check card="1" diag="8|0|XTTE0590|delete-node">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <choose line="1588">
      <is op="is">
       <dot type="element()"/>
       <varRef name="delete-node" slot="0"/>
      </is>
      <message line="1589">
       <sequence role="select">
        <valueOf>
         <str val="[delete-node mode] Found! "/>
        </valueOf>
        <valueOf>
         <fn name="serialize">
          <varRef name="delete-node" slot="0"/>
         </fn>
        </valueOf>
       </sequence>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
      <true/>
      <copy line="1602" flags="cin">
       <sequence role="content">
        <copyOf flags="vc">
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        </copyOf>
        <applyT line="1603" mode="Q{}delete-node" bSlot="0">
         <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        </applyT>
       </sequence>
      </copy>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="13" binds="">
  <mode name="Q{}get-field" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="0" flags="s" line="2377" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:textarea" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='textarea'"/>
    <ifCall role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2380" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
     <dot type="*:textarea"/>
     <str val="value"/>
    </ifCall>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="2372" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:select" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='select'"/>
    <ifCall role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2374" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
     <check card="?" diag="0|0||ixsl:get">
      <filter flags="b">
       <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='option';"/>
       <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
          <dot type="element(Q{}option)"/>
          <str val="selected"/>
         </ifCall>
        </data>
        <true/>
       </gc>
      </filter>
     </check>
     <str val="value"/>
    </ifCall>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="0" flags="s" line="2358" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:input" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='input'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2362">
     <and op="and">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
      </fn>
      <gc op="=" card="1:1" comp="CCC">
       <attVal name="Q{}type" chk="0"/>
       <str val="checkbox"/>
      </gc>
     </and>
     <ifCall line="2363" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:input"/>
      <str val="checked"/>
     </ifCall>
     <true/>
     <ifCall line="2366" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:input"/>
      <str val="value"/>
     </ifCall>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="11" binds="42 36 48 11 49 50 21 51 11 11 49 50 21 4 51 11 11 11 49 50 21 51 49 50 51 11 11 11 49 50 21 11 49 50 21 4 4 11 11">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="0" flags="s" line="835" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="836" name="xformsjs-main" bSlot="0" flags="t">
     <withParam name="Q{}xforms-doc" flags="c" as="document-node()">
      <dot line="837" type="document-node()"/>
     </withParam>
     <withParam name="Q{}xFormsId" flags="c" as="xs:string">
      <gVarRef line="838" name="Q{}xform-html-id" bSlot="1"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="17" rank="2" minImp="0" slots="1" flags="s" line="1750" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2002/xforms}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2002/xforms'"/>
     <gc ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1750" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <literal count="15">
       <str val="setvalue"/>
       <str val="insert"/>
       <str val="delete"/>
       <str val="setindex"/>
       <str val="toggle"/>
       <str val="setfocus"/>
       <str val="dispatch"/>
       <str val="rebuild"/>
       <str val="recalculate"/>
       <str val="revalidate"/>
       <str val="refresh"/>
       <str val="reset"/>
       <str val="load"/>
       <str val="send"/>
       <str val="message"/>
      </literal>
      <fn name="local-name">
       <dot type="Q{http://www.w3.org/2002/xforms}*"/>
      </fn>
     </gc>
    </p.withPredicate>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1760" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1761" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1762" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1774">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1775" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="1" minImp="0" slots="0" flags="s" line="1257" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="s" line="826" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="15" rank="1" minImp="0" slots="2" flags="s" line="1524" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}submit)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='submit';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1525">
     <param name="Q{}submissions" slot="0" flags="t" as="map(xs:string, map(*))">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, map(*))" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <let line="1527" var="innerbody" as="document-node()" slot="1" eval="7">
      <doc line="1528" validation="preserve">
       <applyT bSlot="3">
        <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
       </applyT>
      </doc>
      <choose line="1532">
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}appearance" chk="0"/>
        <str val="minimal"/>
       </gc>
       <elem line="1534" name="a" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
        <copyOf flags="vc">
         <varRef name="innerbody" slot="1"/>
        </copyOf>
       </elem>
       <true/>
       <elem line="1538" name="button" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
        <sequence>
         <att name="type" flags="l">
          <str val="button"/>
         </att>
         <copyOf line="1539" flags="vc">
          <filter flags="b">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
           <vc op="ne" comp="CCC">
            <fn name="local-name">
             <dot type="attribute()"/>
            </fn>
            <str val="submission"/>
           </vc>
          </filter>
         </copyOf>
         <choose line="1540">
          <and op="and">
           <fn name="exists">
            <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
           </fn>
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <varRef name="submissions" slot="0"/>
            <atomSing diag="0|1||map:contains">
             <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
            </atomSing>
           </ifCall>
          </and>
          <att line="1541" name="data-submit" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}submission" chk="0"/>
           </convert>
          </att>
         </choose>
         <copyOf line="1543" flags="vc">
          <varRef name="innerbody" slot="1"/>
         </copyOf>
        </sequence>
       </elem>
      </choose>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="6" flags="s" line="1267" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}select1)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='select1';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1268">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1271" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element()"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="1277" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="1278" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="4">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="1279" type="element()"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="1284" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="1285" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="5">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1286" type="element()"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="1287" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="1292" var="instanceField" as="node()?" slot="4" eval="7">
         <treat line="1293" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
          <check card="?" diag="3|0|XTTE0570|instanceField">
           <callT name="getReferencedInstanceField" bSlot="6">
            <withParam name="Q{}refi" flags="c" as="xs:string">
             <varRef line="1294" name="refi" slot="3"/>
            </withParam>
           </callT>
          </check>
         </treat>
         <let line="1299" var="actions" as="map(*)*" slot="5" eval="8">
          <treat line="1300" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
           <callT name="setActions" bSlot="7">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1301" type="element()"/>
            </withParam>
            <withParam name="Q{}nodeset" flags="t" as="xs:string">
             <varRef line="1302" name="refi" slot="3"/>
            </withParam>
           </callT>
          </treat>
          <sequence line="1306">
           <choose>
            <fn name="exists">
             <varRef name="actions" slot="5"/>
            </fn>
            <ifCall line="1307" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="addAction"/>
             <arrayBlock>
              <varRef name="myid" slot="1"/>
              <varRef name="actions" slot="5"/>
             </arrayBlock>
            </ifCall>
           </choose>
           <applyT line="1324" bSlot="8">
            <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
           </applyT>
           <elem line="1327" name="span" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
            <sequence>
             <att name="style" flags="l">
              <str val="display:inline"/>
             </att>
             <elem line="1329" name="select" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
              <sequence>
               <copyOf flags="vc">
                <filter flags="b">
                 <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                 <vc op="ne" comp="CCC">
                  <fn name="local-name">
                   <dot type="attribute()"/>
                  </fn>
                  <str val="ref"/>
                 </vc>
                </filter>
               </copyOf>
               <att line="1331" name="data-ref" flags="l">
                <varRef name="refi" slot="3"/>
               </att>
               <att line="1332" name="data-element" flags="l">
                <lastOf line="1322">
                 <fn name="tokenize">
                  <varRef name="refi" slot="3"/>
                  <str val="/"/>
                  <str val=""/>
                 </fn>
                </lastOf>
               </att>
               <choose line="1334">
                <and op="and">
                 <fn name="exists">
                  <varRef name="bindingi" slot="2"/>
                 </fn>
                 <fn name="exists">
                  <slash simple="1">
                   <varRef name="bindingi" slot="2"/>
                   <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                  </slash>
                 </fn>
                </and>
                <att line="1335" name="data-constraint" flags="l">
                 <convert from="xs:untypedAtomic" to="xs:string">
                  <data>
                   <slash simple="1">
                    <varRef name="bindingi" slot="2"/>
                    <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                   </slash>
                  </data>
                 </convert>
                </att>
               </choose>
               <choose line="1338">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <fn name="local-name">
                  <dot type="element()"/>
                 </fn>
                 <str val="select"/>
                </vc>
                <sequence line="1341">
                 <att name="multiple" flags="l">
                  <str val="true"/>
                 </att>
                 <att name="size" flags="l">
                  <convert from="xs:integer" to="xs:string">
                   <fn name="count">
                    <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                   </fn>
                  </convert>
                 </att>
                </sequence>
               </choose>
               <choose line="1344">
                <fn name="exists">
                 <varRef name="actions" slot="5"/>
                </fn>
                <att line="1345" name="data-action" flags="l">
                 <varRef name="myid" slot="1"/>
                </att>
               </choose>
               <applyT line="1348" bSlot="9">
                <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                <withParam name="Q{}selectedValue" as="xs:string">
                 <choose line="1313">
                  <fn name="exists">
                   <varRef name="instanceField" slot="4"/>
                  </fn>
                  <cvUntyped line="1314" to="xs:string">
                   <cast as="xs:untypedAtomic" emptiable="0">
                    <fn name="string">
                     <convert from="xs:anyAtomicType" to="xs:string">
                      <data>
                       <varRef name="instanceField" slot="4"/>
                      </data>
                     </convert>
                    </fn>
                   </cast>
                  </cvUntyped>
                  <true/>
                  <str val=""/>
                 </choose>
                </withParam>
               </applyT>
              </sequence>
             </elem>
            </sequence>
           </elem>
          </sequence>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1750" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}unload)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='unload';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1760" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1761" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1762" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1774">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1775" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="12" rank="1" minImp="0" slots="1" flags="s" line="1403" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1404">
     <param name="Q{}selectedValue" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|selectedValue">
       <check card="1" diag="8|0|XTTE0590|selectedValue">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <elem line="1406" name="option" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
      <sequence>
       <att name="value" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='value';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </att>
       <choose line="1407">
        <gc op="=" card="1:1" comp="CCC">
         <varRef name="selectedValue" slot="0"/>
         <cast as="xs:string" emptiable="1">
          <atomSing card="?" diag="2|0||cast as">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='value';"/>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </slash>
          </atomSing>
         </cast>
        </gc>
        <att line="1408" name="selected" flags="l">
         <varRef name="selectedValue" slot="0"/>
        </att>
       </choose>
       <valueOf line="1411" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1750" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}show)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='show';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1760" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1761" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1762" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1774">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1775" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="5" rank="1" minImp="0" slots="11" flags="s" line="993" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='input';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="994">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="997" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="1003" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="1004" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="10">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="1005" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="1010" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="1011" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="11">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1012" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="1013" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="1018" var="instanceField" as="node()?" slot="4" eval="7">
         <treat line="1019" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
          <check card="?" diag="3|0|XTTE0570|instanceField">
           <callT name="getReferencedInstanceField" bSlot="12">
            <withParam name="Q{}refi" flags="c" as="xs:string">
             <varRef line="1020" name="refi" slot="3"/>
            </withParam>
           </callT>
          </check>
         </treat>
         <let line="1026" var="relevantVar" as="xs:boolean" slot="5" eval="7">
          <choose line="1028">
           <and op="and">
            <and op="and">
             <fn name="exists">
              <varRef name="bindingi" slot="2"/>
             </fn>
             <fn name="exists">
              <slash simple="1">
               <varRef name="bindingi" slot="2"/>
               <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
              </slash>
             </fn>
            </and>
            <fn name="exists">
             <varRef name="instanceField" slot="4"/>
            </fn>
           </and>
           <treat line="1029" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantVar">
            <check card="1" diag="3|0|XTTE0570|relevantVar">
             <cvUntyped to="xs:boolean">
              <data>
               <evaluate dxns="">
                <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="13" eval="4">
                 <check card="1" diag="0|0||xforms:impose">
                  <cvUntyped to="xs:string">
                   <data>
                    <slash simple="1">
                     <varRef name="bindingi" slot="2"/>
                     <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                    </slash>
                   </data>
                  </cvUntyped>
                 </check>
                </ufCall>
                <varRef role="cxt" name="instanceField" slot="4"/>
                <str role="sa" val="no"/>
                <map role="wp" size="0"/>
               </evaluate>
              </data>
             </cvUntyped>
            </check>
           </treat>
           <true/>
           <true/>
          </choose>
          <let line="1038" var="actions" as="map(*)*" slot="6" eval="8">
           <treat line="1039" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
            <callT name="setActions" bSlot="14">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1040" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string">
              <varRef line="1041" name="refi" slot="3"/>
             </withParam>
            </callT>
           </treat>
           <sequence line="1045">
            <choose>
             <fn name="exists">
              <varRef name="actions" slot="6"/>
             </fn>
             <ifCall line="1046" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="addAction"/>
              <arrayBlock>
               <varRef name="myid" slot="1"/>
               <varRef name="actions" slot="6"/>
              </arrayBlock>
             </ifCall>
            </choose>
            <elem line="1052" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
             <let var="class" as="xs:string?" slot="7" eval="7">
              <choose line="1053">
               <fn name="exists">
                <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
               </fn>
               <cvUntyped line="1054" to="xs:string">
                <cast as="xs:untypedAtomic" emptiable="0">
                 <fn name="string">
                  <convert from="xs:untypedAtomic" to="xs:string">
                   <attVal name="Q{}class" chk="0"/>
                  </convert>
                 </fn>
                </cast>
               </cvUntyped>
              </choose>
              <let line="1057" var="class-mod" as="xs:string?" slot="8" eval="7">
               <choose line="1059">
                <fn name="exists">
                 <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
                </fn>
                <cvUntyped line="1060" to="xs:string">
                 <cast as="xs:untypedAtomic" emptiable="0">
                  <fn name="string-join">
                   <sequence>
                    <varRef name="class" slot="7"/>
                    <str val="incremental"/>
                   </sequence>
                   <str val=" "/>
                  </fn>
                 </cast>
                </cvUntyped>
                <true/>
                <varRef line="1063" name="class" slot="7"/>
               </choose>
               <sequence line="1067">
                <choose>
                 <fn name="exists">
                  <varRef name="class-mod" slot="8"/>
                 </fn>
                 <att line="1068" name="class" flags="l">
                  <varRef name="class-mod" slot="8"/>
                 </att>
                </choose>
                <elem line="1072" name="span" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
                 <sequence>
                  <att name="style" flags="l">
                   <choose>
                    <varRef name="relevantVar" slot="5"/>
                    <str val="display:inline"/>
                    <true/>
                    <str val="display:none"/>
                   </choose>
                  </att>
                  <applyT line="1074" bSlot="15">
                   <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
                  </applyT>
                  <let line="1076" var="hints" as="text()*" slot="9" eval="3">
                   <slash>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
                    <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
                   </slash>
                   <elem line="1081" name="input" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
                    <sequence>
                     <choose>
                      <fn name="exists">
                       <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
                      </fn>
                      <att line="1082" name="class" flags="l">
                       <str val="incremental"/>
                      </att>
                     </choose>
                     <att line="1085" name="data-ref" flags="l">
                      <varRef name="refi" slot="3"/>
                     </att>
                     <att line="1086" name="data-element" flags="l">
                      <lastOf line="1078">
                       <fn name="tokenize">
                        <varRef name="refi" slot="3"/>
                        <str val="/"/>
                        <str val=""/>
                       </fn>
                      </lastOf>
                     </att>
                     <choose line="1088">
                      <and op="and">
                       <fn name="exists">
                        <varRef name="bindingi" slot="2"/>
                       </fn>
                       <fn name="exists">
                        <slash simple="1">
                         <varRef name="bindingi" slot="2"/>
                         <axis name="attribute" nodeTest="attribute(Q{}required)" jsTest="return item.name==='required'"/>
                        </slash>
                       </fn>
                      </and>
                      <att line="1089" name="data-required" flags="l">
                       <convert from="xs:untypedAtomic" to="xs:string">
                        <data>
                         <slash simple="1">
                          <varRef name="bindingi" slot="2"/>
                          <axis name="attribute" nodeTest="attribute(Q{}required)" jsTest="return item.name==='required'"/>
                         </slash>
                        </data>
                       </convert>
                      </att>
                     </choose>
                     <choose line="1091">
                      <and op="and">
                       <fn name="exists">
                        <varRef name="bindingi" slot="2"/>
                       </fn>
                       <fn name="exists">
                        <slash simple="1">
                         <varRef name="bindingi" slot="2"/>
                         <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                        </slash>
                       </fn>
                      </and>
                      <att line="1092" name="data-constraint" flags="l">
                       <convert from="xs:untypedAtomic" to="xs:string">
                        <data>
                         <slash simple="1">
                          <varRef name="bindingi" slot="2"/>
                          <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                         </slash>
                        </data>
                       </convert>
                      </att>
                     </choose>
                     <choose line="1094">
                      <fn name="exists">
                       <varRef name="actions" slot="6"/>
                      </fn>
                      <att line="1095" name="data-action" flags="l">
                       <varRef name="myid" slot="1"/>
                      </att>
                     </choose>
                     <choose line="1098">
                      <and op="and">
                       <fn name="exists">
                        <varRef name="bindingi" slot="2"/>
                       </fn>
                       <fn name="exists">
                        <slash simple="1">
                         <varRef name="bindingi" slot="2"/>
                         <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                        </slash>
                       </fn>
                      </and>
                      <att line="1099" name="data-relevant" flags="l">
                       <convert from="xs:untypedAtomic" to="xs:string">
                        <data>
                         <slash simple="1">
                          <varRef name="bindingi" slot="2"/>
                          <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                         </slash>
                        </data>
                       </convert>
                      </att>
                     </choose>
                     <let line="1102" var="input-value" as="xs:string" slot="10" eval="7">
                      <choose line="1104">
                       <fn name="exists">
                        <varRef name="instanceField" slot="4"/>
                       </fn>
                       <cvUntyped line="1105" to="xs:string">
                        <cast as="xs:untypedAtomic" emptiable="0">
                         <fn name="string">
                          <convert from="xs:anyAtomicType" to="xs:string">
                           <data>
                            <varRef name="instanceField" slot="4"/>
                           </data>
                          </convert>
                         </fn>
                        </cast>
                       </cvUntyped>
                       <true/>
                       <str val=""/>
                      </choose>
                      <sequence line="1119">
                       <choose>
                        <choose>
                         <fn name="exists">
                          <varRef name="bindingi" slot="2"/>
                         </fn>
                         <vc op="eq" comp="EQC">
                          <cast as="xs:QName" emptiable="1">
                           <data>
                            <slash simple="1">
                             <varRef name="bindingi" slot="2"/>
                             <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                            </slash>
                           </data>
                          </cast>
                          <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="date"/>
                         </vc>
                         <true/>
                         <false/>
                        </choose>
                        <sequence line="1120">
                         <att name="data-type" flags="l">
                          <str val="date"/>
                         </att>
                         <att line="1122" name="type" flags="l">
                          <str val="date"/>
                         </att>
                         <att line="1124" name="value" flags="l">
                          <varRef name="input-value" slot="10"/>
                         </att>
                        </sequence>
                        <choose line="1131">
                         <fn name="exists">
                          <varRef name="bindingi" slot="2"/>
                         </fn>
                         <vc op="eq" comp="EQC">
                          <cast as="xs:QName" emptiable="1">
                           <data>
                            <slash simple="1">
                             <varRef name="bindingi" slot="2"/>
                             <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                            </slash>
                           </data>
                          </cast>
                          <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="time"/>
                         </vc>
                         <true/>
                         <false/>
                        </choose>
                        <sequence line="1132">
                         <att name="data-type" flags="l">
                          <str val="time"/>
                         </att>
                         <att line="1134" name="type" flags="l">
                          <str val="time"/>
                         </att>
                         <att line="1137" name="value" flags="l">
                          <varRef name="input-value" slot="10"/>
                         </att>
                        </sequence>
                        <choose line="1144">
                         <fn name="exists">
                          <varRef name="bindingi" slot="2"/>
                         </fn>
                         <vc op="eq" comp="EQC">
                          <cast as="xs:QName" emptiable="1">
                           <data>
                            <slash simple="1">
                             <varRef name="bindingi" slot="2"/>
                             <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                            </slash>
                           </data>
                          </cast>
                          <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="boolean"/>
                         </vc>
                         <true/>
                         <false/>
                        </choose>
                        <sequence line="1145">
                         <att name="data-type" flags="l">
                          <str val="checkbox"/>
                         </att>
                         <att line="1147" name="type" flags="l">
                          <str val="checkbox"/>
                         </att>
                         <choose line="1152">
                          <fn name="exists">
                           <varRef name="instanceField" slot="4"/>
                          </fn>
                          <choose line="1153">
                           <and op="and">
                            <varRef name="input-value" slot="10"/>
                            <cast as="xs:boolean" emptiable="0">
                             <varRef name="input-value" slot="10"/>
                            </cast>
                           </and>
                           <att line="1154" name="checked" flags="l">
                            <varRef name="input-value" slot="10"/>
                           </att>
                          </choose>
                         </choose>
                        </sequence>
                        <true/>
                        <sequence line="1160">
                         <choose>
                          <varRef name="relevantVar" slot="5"/>
                          <att line="1161" name="type" flags="l">
                           <str val="text"/>
                          </att>
                         </choose>
                         <att line="1163" name="value" flags="l">
                          <varRef name="input-value" slot="10"/>
                         </att>
                        </sequence>
                       </choose>
                       <choose line="1167">
                        <fn name="exists">
                         <varRef name="hints" slot="9"/>
                        </fn>
                        <att line="1168" name="title" flags="l">
                         <fn name="string-join">
                          <convert from="xs:untypedAtomic" to="xs:string">
                           <data>
                            <mergeAdj>
                             <varRef name="hints" slot="9"/>
                            </mergeAdj>
                           </data>
                          </convert>
                          <str val=" "/>
                         </fn>
                        </att>
                       </choose>
                       <choose line="1170">
                        <fn name="exists">
                         <axis name="attribute" nodeTest="attribute(Q{}size)" jsTest="return item.name==='size'"/>
                        </fn>
                        <att line="1171" name="size" flags="l">
                         <convert from="xs:untypedAtomic" to="xs:string">
                          <attVal name="Q{}size" chk="0"/>
                         </convert>
                        </att>
                       </choose>
                      </sequence>
                     </let>
                    </sequence>
                   </elem>
                  </let>
                 </sequence>
                </elem>
               </sequence>
              </let>
             </let>
            </elem>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="s" line="816" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
    <applyT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="817" flags="t" bSlot="16">
     <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="s" line="852" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='html';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="854" name="html" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
     <sequence>
      <copyOf flags="vc">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </copyOf>
      <elem line="856" name="head" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
       <sequence>
        <copyOf flags="vc">
         <union op="|">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <slash>
           <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
         </union>
        </copyOf>
        <elem line="857" name="meta" nsuri="" flags="l">
         <sequence>
          <att name="http-equiv" flags="l">
           <str val="Content-Type"/>
          </att>
          <att name="content" flags="l">
           <str val="text/html;charset=utf-8"/>
          </att>
         </sequence>
        </elem>
        <forEach line="859">
         <union op="|">
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
         </union>
         <elem line="861" name="meta" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
          <copyOf flags="vc">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </copyOf>
         </elem>
        </forEach>
        <copyOf line="866" flags="vc">
         <axis name="child" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
        </copyOf>
       </sequence>
      </elem>
      <elem line="869" name="body" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
       <applyT bSlot="17">
        <slash role="select">
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='body';"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </applyT>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="2.0" seq="6" rank="3" minImp="0" slots="6" flags="s" line="1189" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}textarea)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='textarea';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1190">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1196" var="bindingi" as="node()?" slot="1" eval="7">
      <treat line="1197" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
       <check card="?" diag="3|0|XTTE0570|bindingi">
        <callT name="getBinding" bSlot="18">
         <withParam name="Q{}this" flags="c" as="element()">
          <dot line="1198" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
         </withParam>
        </callT>
       </check>
      </treat>
      <let line="1203" var="refi" as="xs:string" slot="2" eval="7">
       <treat line="1204" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
        <check card="1" diag="3|0|XTTE0570|refi">
         <cvUntyped to="xs:string">
          <data>
           <callT name="getDataRef" bSlot="19">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1205" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
            </withParam>
            <withParam name="Q{}bindingi" flags="c" as="node()?">
             <varRef line="1206" name="bindingi" slot="1"/>
            </withParam>
           </callT>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line="1211" var="instanceField" as="node()?" slot="3" eval="7">
        <treat line="1212" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
         <check card="?" diag="3|0|XTTE0570|instanceField">
          <callT name="getReferencedInstanceField" bSlot="20">
           <withParam name="Q{}refi" flags="c" as="xs:string">
            <varRef line="1213" name="refi" slot="2"/>
           </withParam>
          </callT>
         </check>
        </treat>
        <let line="1218" var="actions" as="map(*)*" slot="4" eval="8">
         <treat line="1219" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
          <callT name="setActions" bSlot="21">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1220" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
           </withParam>
           <withParam name="Q{}nodeset" flags="t" as="xs:string">
            <varRef line="1221" name="refi" slot="2"/>
           </withParam>
          </callT>
         </treat>
         <sequence line="1225">
          <choose>
           <fn name="exists">
            <varRef name="actions" slot="4"/>
           </fn>
           <ifCall line="1226" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="addAction"/>
            <arrayBlock>
             <choose line="1193">
              <fn name="exists">
               <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
              </fn>
              <check card="1" diag="3|0|XTTE0570|myid">
               <cvUntyped to="xs:string">
                <attVal name="Q{}id" chk="0"/>
               </cvUntyped>
              </check>
              <true/>
              <fn name="concat">
               <fn name="generate-id">
                <dot type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
               </fn>
               <str val="-"/>
               <varRef name="position" slot="0"/>
              </fn>
             </choose>
             <varRef name="actions" slot="4"/>
            </arrayBlock>
           </ifCall>
          </choose>
          <let line="1231" var="hints" as="text()*" slot="5" eval="3">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </slash>
           <elem line="1234" name="textarea" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
            <sequence>
             <copyOf flags="vc">
              <filter flags="b">
               <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
               <vc op="ne" comp="CCC">
                <fn name="local-name">
                 <dot type="attribute()"/>
                </fn>
                <str val="ref"/>
               </vc>
              </filter>
             </copyOf>
             <att line="1235" name="data-element" flags="l">
              <lastOf line="1229">
               <fn name="tokenize">
                <varRef name="refi" slot="2"/>
                <str val="/"/>
                <str val=""/>
               </fn>
              </lastOf>
             </att>
             <att line="1236" name="data-ref" flags="l">
              <varRef name="refi" slot="2"/>
             </att>
             <choose line="1238">
              <fn name="exists">
               <varRef name="instanceField" slot="3"/>
              </fn>
              <valueOf line="1239" flags="l">
               <convert from="xs:anyAtomicType" to="xs:string">
                <data>
                 <varRef name="instanceField" slot="3"/>
                </data>
               </convert>
              </valueOf>
              <true/>
              <sequence line="1241">
               <valueOf flags="Sl">
                <str val=""/>
               </valueOf>
               <valueOf flags="l">
                <str val="  "/>
               </valueOf>
              </sequence>
             </choose>
             <choose line="1244">
              <fn name="exists">
               <varRef name="hints" slot="5"/>
              </fn>
              <att line="1245" name="title" flags="l">
               <fn name="string-join">
                <convert from="xs:untypedAtomic" to="xs:string">
                 <data>
                  <mergeAdj>
                   <varRef name="hints" slot="5"/>
                  </mergeAdj>
                 </data>
                </convert>
                <str val=" "/>
               </fn>
              </att>
             </choose>
            </sequence>
           </elem>
          </let>
         </sequence>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="16" rank="1" minImp="0" slots="6" flags="s" line="1676" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}trigger)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='trigger';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1677">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1680" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="1683" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="1684" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="22">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="1685" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="1690" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="1691" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="23">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1692" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="1693" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="1698" var="actions" as="map(*)*" slot="4" eval="8">
         <treat line="1699" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
          <callT name="setActions" bSlot="24">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1700" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
           </withParam>
           <withParam name="Q{}nodeset" flags="t" as="xs:string">
            <varRef line="1701" name="refi" slot="3"/>
           </withParam>
          </callT>
         </treat>
         <sequence line="1705">
          <choose>
           <fn name="exists">
            <varRef name="actions" slot="4"/>
           </fn>
           <ifCall line="1706" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="addAction"/>
            <arrayBlock>
             <varRef name="myid" slot="1"/>
             <varRef name="actions" slot="4"/>
            </arrayBlock>
           </ifCall>
          </choose>
          <let line="1709" var="innerbody" as="document-node()" slot="5" eval="7">
           <doc line="1711" validation="preserve">
            <choose>
             <fn name="exists">
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
             </fn>
             <applyT line="1712" bSlot="25">
              <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
             </applyT>
             <true/>
             <valueOf line="1714" flags="l">
              <str val=" "/>
             </valueOf>
            </choose>
           </doc>
           <elem line="1718" name="span" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
            <sequence>
             <att name="style" flags="l">
              <str val="display:'inline'"/>
             </att>
             <compElem line="1729" flags="l">
              <choose role="name" line="1721">
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}appearance" chk="0"/>
                <str val="minimal"/>
               </gc>
               <str val="a"/>
               <true/>
               <str val="button"/>
              </choose>
              <sequence role="content" line="1730">
               <choose>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}appearance" chk="0"/>
                 <str val="minimal"/>
                </gc>
                <att line="1731" name="type" flags="l">
                 <str val="button"/>
                </att>
               </choose>
               <att line="1734" name="data-ref" flags="l">
                <varRef name="refi" slot="3"/>
               </att>
               <att line="1735" name="data-action" flags="l">
                <varRef name="myid" slot="1"/>
               </att>
               <copyOf line="1736" flags="vc">
                <varRef name="innerbody" slot="5"/>
               </copyOf>
              </sequence>
             </compElem>
            </sequence>
           </elem>
          </let>
         </sequence>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="13" rank="1" minImp="0" slots="1" flags="s" line="1421" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}group)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='group';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1423" var="refi" as="xs:string?" slot="0" eval="7">
     <choose line="1425">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
      </fn>
      <cvUntyped to="xs:string">
       <attVal name="Q{}nodeset" chk="0"/>
      </cvUntyped>
      <fn line="1426" name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
      </fn>
      <cvUntyped line="1426" to="xs:string">
       <attVal name="Q{}ref" chk="0"/>
      </cvUntyped>
     </choose>
     <elem line="1432" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
      <sequence>
       <choose>
        <fn name="exists">
         <varRef name="refi" slot="0"/>
        </fn>
        <att line="1433" name="data-group-ref" flags="l">
         <varRef name="refi" slot="0"/>
        </att>
       </choose>
       <choose line="1435">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
        </fn>
        <att line="1436" name="id" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}id" chk="0"/>
         </convert>
        </att>
       </choose>
       <applyT line="1438" bSlot="26">
        <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <withParam name="Q{}nodeset" flags="t" as="xs:string?">
         <choose line="1439">
          <fn name="exists">
           <varRef name="refi" slot="0"/>
          </fn>
          <varRef name="refi" slot="0"/>
          <true/>
          <str val=""/>
         </choose>
        </withParam>
       </applyT>
      </sequence>
     </elem>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1750" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='script';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1760" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1761" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1762" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1774">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1775" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="6" flags="s" line="1267" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='select';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1268">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1271" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element()"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="1277" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="1278" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="4">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="1279" type="element()"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="1284" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="1285" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="5">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1286" type="element()"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="1287" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="1292" var="instanceField" as="node()?" slot="4" eval="7">
         <treat line="1293" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
          <check card="?" diag="3|0|XTTE0570|instanceField">
           <callT name="getReferencedInstanceField" bSlot="6">
            <withParam name="Q{}refi" flags="c" as="xs:string">
             <varRef line="1294" name="refi" slot="3"/>
            </withParam>
           </callT>
          </check>
         </treat>
         <let line="1299" var="actions" as="map(*)*" slot="5" eval="8">
          <treat line="1300" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
           <callT name="setActions" bSlot="7">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1301" type="element()"/>
            </withParam>
            <withParam name="Q{}nodeset" flags="t" as="xs:string">
             <varRef line="1302" name="refi" slot="3"/>
            </withParam>
           </callT>
          </treat>
          <sequence line="1306">
           <choose>
            <fn name="exists">
             <varRef name="actions" slot="5"/>
            </fn>
            <ifCall line="1307" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="addAction"/>
             <arrayBlock>
              <varRef name="myid" slot="1"/>
              <varRef name="actions" slot="5"/>
             </arrayBlock>
            </ifCall>
           </choose>
           <applyT line="1324" bSlot="8">
            <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
           </applyT>
           <elem line="1327" name="span" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
            <sequence>
             <att name="style" flags="l">
              <str val="display:inline"/>
             </att>
             <elem line="1329" name="select" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
              <sequence>
               <copyOf flags="vc">
                <filter flags="b">
                 <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                 <vc op="ne" comp="CCC">
                  <fn name="local-name">
                   <dot type="attribute()"/>
                  </fn>
                  <str val="ref"/>
                 </vc>
                </filter>
               </copyOf>
               <att line="1331" name="data-ref" flags="l">
                <varRef name="refi" slot="3"/>
               </att>
               <att line="1332" name="data-element" flags="l">
                <lastOf line="1322">
                 <fn name="tokenize">
                  <varRef name="refi" slot="3"/>
                  <str val="/"/>
                  <str val=""/>
                 </fn>
                </lastOf>
               </att>
               <choose line="1334">
                <and op="and">
                 <fn name="exists">
                  <varRef name="bindingi" slot="2"/>
                 </fn>
                 <fn name="exists">
                  <slash simple="1">
                   <varRef name="bindingi" slot="2"/>
                   <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                  </slash>
                 </fn>
                </and>
                <att line="1335" name="data-constraint" flags="l">
                 <convert from="xs:untypedAtomic" to="xs:string">
                  <data>
                   <slash simple="1">
                    <varRef name="bindingi" slot="2"/>
                    <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                   </slash>
                  </data>
                 </convert>
                </att>
               </choose>
               <choose line="1338">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <fn name="local-name">
                  <dot type="element()"/>
                 </fn>
                 <str val="select"/>
                </vc>
                <sequence line="1341">
                 <att name="multiple" flags="l">
                  <str val="true"/>
                 </att>
                 <att name="size" flags="l">
                  <convert from="xs:integer" to="xs:string">
                   <fn name="count">
                    <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                   </fn>
                  </convert>
                 </att>
                </sequence>
               </choose>
               <choose line="1344">
                <fn name="exists">
                 <varRef name="actions" slot="5"/>
                </fn>
                <att line="1345" name="data-action" flags="l">
                 <varRef name="myid" slot="1"/>
                </att>
               </choose>
               <applyT line="1348" bSlot="9">
                <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                <withParam name="Q{}selectedValue" as="xs:string">
                 <choose line="1313">
                  <fn name="exists">
                   <varRef name="instanceField" slot="4"/>
                  </fn>
                  <cvUntyped line="1314" to="xs:string">
                   <cast as="xs:untypedAtomic" emptiable="0">
                    <fn name="string">
                     <convert from="xs:anyAtomicType" to="xs:string">
                      <data>
                       <varRef name="instanceField" slot="4"/>
                      </data>
                     </convert>
                    </fn>
                   </cast>
                  </cvUntyped>
                  <true/>
                  <str val=""/>
                 </choose>
                </withParam>
               </applyT>
              </sequence>
             </elem>
            </sequence>
           </elem>
          </sequence>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1750" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='action';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1760" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1761" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1762" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1774">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1775" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="1" minImp="0" slots="0" flags="s" line="1385" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1388" name="label" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
     <choose>
      <fn name="exists">
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </fn>
      <applyT line="1389" bSlot="27">
       <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </applyT>
      <true/>
      <valueOf flags="l">
       <str val=" "/>
      </valueOf>
     </choose>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="14" rank="1" minImp="0" slots="6" flags="s" line="1453" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}repeat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='repeat';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1454">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1463" var="bindingi" as="node()?" slot="1" eval="7">
      <treat line="1464" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
       <check card="?" diag="3|0|XTTE0570|bindingi">
        <callT name="getBinding" bSlot="28">
         <withParam name="Q{}this" flags="c" as="element()">
          <dot line="1465" type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
         </withParam>
        </callT>
       </check>
      </treat>
      <let line="1470" var="refi" as="xs:string" slot="2" eval="7">
       <treat line="1471" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
        <check card="1" diag="3|0|XTTE0570|refi">
         <cvUntyped to="xs:string">
          <data>
           <callT name="getDataRef" bSlot="29">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1472" type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
            </withParam>
            <withParam name="Q{}bindingi" flags="c" as="node()?">
             <varRef line="1473" name="bindingi" slot="1"/>
            </withParam>
           </callT>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line="1479" var="selectedRepeatVar" as="element()*" slot="3" eval="8">
        <treat line="1481" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|selectedRepeatVar">
         <callT name="getReferencedInstanceField" bSlot="30">
          <withParam name="Q{}refi" flags="c" as="xs:string">
           <varRef line="1482" name="refi" slot="2"/>
          </withParam>
         </callT>
        </treat>
        <choose line="1497">
         <fn name="exists">
          <varRef name="selectedRepeatVar" slot="3"/>
         </fn>
         <elem line="1499" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
          <sequence>
           <att name="data-repeatable-context" flags="l">
            <varRef name="refi" slot="2"/>
           </att>
           <att line="1500" name="data-count" flags="l">
            <convert from="xs:integer" to="xs:string">
             <fn name="count">
              <varRef name="selectedRepeatVar" slot="3"/>
             </fn>
            </convert>
           </att>
           <att line="1501" name="id" flags="l">
            <choose line="1457">
             <fn name="exists">
              <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
             </fn>
             <check card="1" diag="3|0|XTTE0570|myid">
              <cvUntyped to="xs:string">
               <attVal name="Q{}id" chk="0"/>
              </cvUntyped>
             </check>
             <true/>
             <fn name="concat">
              <fn name="generate-id">
               <dot type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
              </fn>
              <str val="-"/>
              <varRef name="position" slot="0"/>
             </fn>
            </choose>
           </att>
           <let line="1502" var="xf-repeat" as="element(Q{http://www.w3.org/2002/xforms}repeat)" slot="4" eval="7">
            <dot type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
            <let line="1505" var="vv:v0" as="element()*" slot="5" eval="4">
             <slash simple="1">
              <varRef name="xf-repeat" slot="4"/>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <forEach line="1503">
              <varRef name="selectedRepeatVar" slot="3"/>
              <elem line="1504" name="div" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
               <sequence>
                <att name="data-repeat-item" flags="l">
                 <str val="true"/>
                </att>
                <applyT line="1505" bSlot="31">
                 <varRef role="select" name="vv:v0" slot="5"/>
                 <withParam name="Q{}position" as="xs:integer">
                  <fn line="1507" name="position"/>
                 </withParam>
                 <withParam name="Q{}nodeset" flags="t" as="xs:string">
                  <fn line="1506" name="concat">
                   <varRef name="refi" slot="2"/>
                   <str val="["/>
                   <fn name="position"/>
                   <str val="]"/>
                  </fn>
                 </withParam>
                </applyT>
               </sequence>
              </elem>
             </forEach>
            </let>
           </let>
          </sequence>
         </elem>
        </choose>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="s" line="852" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/1999/xhtml}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='html';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="854" name="html" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
     <sequence>
      <copyOf flags="vc">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </copyOf>
      <elem line="856" name="head" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
       <sequence>
        <copyOf flags="vc">
         <union op="|">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <slash>
           <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
         </union>
        </copyOf>
        <elem line="857" name="meta" nsuri="" flags="l">
         <sequence>
          <att name="http-equiv" flags="l">
           <str val="Content-Type"/>
          </att>
          <att name="content" flags="l">
           <str val="text/html;charset=utf-8"/>
          </att>
         </sequence>
        </elem>
        <forEach line="859">
         <union op="|">
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
         </union>
         <elem line="861" name="meta" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
          <copyOf flags="vc">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </copyOf>
         </elem>
        </forEach>
        <copyOf line="866" flags="vc">
         <axis name="child" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
        </copyOf>
       </sequence>
      </elem>
      <elem line="869" name="body" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
       <applyT bSlot="17">
        <slash role="select">
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='body';"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </applyT>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="4" rank="1" minImp="0" slots="9" flags="s" line="883" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}output)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='output';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="884">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="887" var="myid" as="xs:string" slot="1" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}output)"/>
        </fn>
        <str val="-"/>
        <varRef name="position" slot="0"/>
       </fn>
      </choose>
      <let line="891" var="bindingi" as="node()?" slot="2" eval="7">
       <treat line="892" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
        <check card="?" diag="3|0|XTTE0570|bindingi">
         <callT name="getBinding" bSlot="32">
          <withParam name="Q{}this" flags="c" as="element()">
           <dot line="893" type="element(Q{http://www.w3.org/2002/xforms}output)"/>
          </withParam>
         </callT>
        </check>
       </treat>
       <let line="898" var="refi" as="xs:string" slot="3" eval="7">
        <treat line="899" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="1" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <callT name="getDataRef" bSlot="33">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="900" type="element(Q{http://www.w3.org/2002/xforms}output)"/>
             </withParam>
             <withParam name="Q{}bindingi" flags="c" as="node()?">
              <varRef line="901" name="bindingi" slot="2"/>
             </withParam>
            </callT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="906" var="instanceField" as="node()?" slot="4" eval="7">
         <treat line="907" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
          <check card="?" diag="3|0|XTTE0570|instanceField">
           <callT name="getReferencedInstanceField" bSlot="34">
            <withParam name="Q{}refi" flags="c" as="xs:string">
             <varRef line="908" name="refi" slot="3"/>
            </withParam>
           </callT>
          </check>
         </treat>
         <let line="912" var="valueExecuted" as="xs:string" slot="5" eval="7">
          <choose line="914">
           <fn name="exists">
            <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
           </fn>
           <evaluate line="915" as="xs:string" dxns="">
            <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="35" eval="7">
             <check card="1" diag="0|0||xforms:impose">
              <cvUntyped to="xs:string">
               <attVal name="Q{}value" chk="0"/>
              </cvUntyped>
             </check>
            </ufCall>
            <varRef role="cxt" name="instanceField" slot="4"/>
            <str role="sa" val="no"/>
            <map role="wp" size="0"/>
           </evaluate>
           <true/>
           <cvUntyped line="918" to="xs:string">
            <cast as="xs:untypedAtomic" emptiable="0">
             <fn name="string">
              <convert from="xs:anyAtomicType" to="xs:string">
               <data>
                <varRef name="instanceField" slot="4"/>
               </data>
              </convert>
             </fn>
            </cast>
           </cvUntyped>
          </choose>
          <let line="924" var="relevantVar" as="xs:boolean" slot="6" eval="7">
           <choose line="926">
            <and op="and">
             <and op="and">
              <fn name="exists">
               <varRef name="bindingi" slot="2"/>
              </fn>
              <fn name="exists">
               <slash simple="1">
                <varRef name="bindingi" slot="2"/>
                <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
               </slash>
              </fn>
             </and>
             <fn name="exists">
              <varRef name="instanceField" slot="4"/>
             </fn>
            </and>
            <treat line="927" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantVar">
             <check card="1" diag="3|0|XTTE0570|relevantVar">
              <cvUntyped to="xs:boolean">
               <data>
                <evaluate dxns="">
                 <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="36" eval="4">
                  <check card="1" diag="0|0||xforms:impose">
                   <cvUntyped to="xs:string">
                    <data>
                     <slash simple="1">
                      <varRef name="bindingi" slot="2"/>
                      <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                     </slash>
                    </data>
                   </cvUntyped>
                  </check>
                 </ufCall>
                 <varRef role="cxt" name="instanceField" slot="4"/>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <true/>
            <true/>
           </choose>
           <sequence line="939">
            <elem name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
             <let var="class" as="xs:string?" slot="7" eval="7">
              <choose line="940">
               <fn name="exists">
                <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
               </fn>
               <cvUntyped line="941" to="xs:string">
                <cast as="xs:untypedAtomic" emptiable="0">
                 <fn name="string">
                  <convert from="xs:untypedAtomic" to="xs:string">
                   <attVal name="Q{}class" chk="0"/>
                  </convert>
                 </fn>
                </cast>
               </cvUntyped>
              </choose>
              <let line="944" var="class-mod" as="xs:string?" slot="8" eval="7">
               <choose line="946">
                <fn name="exists">
                 <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
                </fn>
                <cvUntyped line="947" to="xs:string">
                 <cast as="xs:untypedAtomic" emptiable="0">
                  <fn name="string-join">
                   <sequence>
                    <varRef name="class" slot="7"/>
                    <str val="incremental"/>
                   </sequence>
                   <str val=" "/>
                  </fn>
                 </cast>
                </cvUntyped>
                <true/>
                <varRef line="950" name="class" slot="7"/>
               </choose>
               <sequence line="954">
                <choose>
                 <fn name="exists">
                  <varRef name="class-mod" slot="8"/>
                 </fn>
                 <att line="955" name="class" flags="l">
                  <varRef name="class-mod" slot="8"/>
                 </att>
                </choose>
                <applyT line="958" bSlot="37">
                 <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
                </applyT>
                <elem line="961" name="span" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev r">
                 <sequence>
                  <att name="id" flags="l">
                   <varRef name="myid" slot="1"/>
                  </att>
                  <att line="962" name="style" flags="l">
                   <choose>
                    <varRef name="relevantVar" slot="6"/>
                    <str val="display:inline"/>
                    <true/>
                    <str val="display:none"/>
                   </choose>
                  </att>
                  <att line="963" name="data-ref" flags="l">
                   <varRef name="refi" slot="3"/>
                  </att>
                  <varRef line="965" name="valueExecuted" slot="5"/>
                 </sequence>
                </elem>
               </sequence>
              </let>
             </let>
            </elem>
            <ifCall line="982" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="addOutput"/>
             <arrayBlock>
              <varRef name="myid" slot="1"/>
              <ifCall line="972" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
               <sequence>
                <choose>
                 <varRef name="refi" slot="3"/>
                 <ifCall line="973" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                  <str val="@ref"/>
                  <varRef name="refi" slot="3"/>
                 </ifCall>
                </choose>
                <choose line="976">
                 <fn name="exists">
                  <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
                 </fn>
                 <ifCall line="977" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                  <str val="@value"/>
                  <cast as="xs:string" emptiable="1">
                   <attVal name="Q{}value" chk="0"/>
                  </cast>
                 </ifCall>
                </choose>
               </sequence>
               <map size="2">
                <str val="duplicates"/>
                <str val="reject"/>
                <str val="duplicates-error-code"/>
                <str val="XTDE3365"/>
               </map>
              </ifCall>
             </arrayBlock>
            </ifCall>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1750" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}hide)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hide';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1760" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1761" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1762" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1774">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1775" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="9" rank="0" minImp="0" slots="0" flags="s" line="1364" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1366" flags="cin">
     <applyT role="content" bSlot="38">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="2" minImp="0" slots="0" flags="s" line="1375" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===3;"/>
     <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1375" name="ancestor" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="9" rank="0" minImp="0" slots="0" flags="s" line="1364" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
    <copy role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1366" flags="cin">
     <applyT role="content" bSlot="38">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="50" binds="1">
  <template name="Q{}getDataRef" flags="os" line="2637" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2638">
    <param name="Q{}this" slot="0" flags="r" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="2639" name="Q{}nodeset" slot="1" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="2640" name="Q{}bindingi" slot="2" as="node()?">
     <empty role="select"/>
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|bindingi">
      <check card="?" diag="8|0|XTTE0590|bindingi">
       <supplied slot="2"/>
      </check>
     </treat>
    </param>
    <let line="2648" var="this-ref" as="xs:string?" slot="3" eval="7">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
       </slash>
      </fn>
      <fn name="normalize-space">
       <cast as="xs:string" emptiable="1">
        <data>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
         </slash>
        </data>
       </cast>
      </fn>
      <fn name="exists">
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
       </slash>
      </fn>
      <fn name="normalize-space">
       <cast as="xs:string" emptiable="1">
        <data>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </slash>
        </data>
       </cast>
      </fn>
     </choose>
     <choose line="2652">
      <fn name="exists">
       <varRef name="bindingi" slot="2"/>
      </fn>
      <cvUntyped line="2663" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <choose>
           <fn name="exists">
            <slash simple="1">
             <varRef name="bindingi" slot="2"/>
             <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
            </slash>
           </fn>
           <data>
            <slash simple="1">
             <varRef name="bindingi" slot="2"/>
             <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
            </slash>
           </data>
           <true/>
           <data>
            <slash simple="1">
             <varRef name="bindingi" slot="2"/>
             <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
            </slash>
           </data>
          </choose>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </cvUntyped>
      <fn line="2665" name="exists">
       <varRef name="this-ref" slot="3"/>
      </fn>
      <ufCall line="2666" name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
       <varRef name="nodeset" slot="1"/>
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <varRef name="this-ref" slot="3"/>
       </check>
      </ufCall>
      <true/>
      <cvUntyped line="2669" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <varRef name="nodeset" slot="1"/>
       </cast>
      </cvUntyped>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id="52" binds="">
  <mode name="Q{}xforms-action" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="3" rank="0" minImp="0" slots="1" flags="s" line="1952" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}reset)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='reset';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1953">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <elem line="1955" name="reset" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
      <sequence>
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </fn>
        <elem line="1958" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1959" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1962" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}ref" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1967">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </fn>
        <elem line="1970" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1971" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1974" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}nodeset" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1980">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </fn>
        <elem line="1982" name="position" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}position" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1985">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </fn>
        <elem line="1987" name="at" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}at" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1990">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </fn>
        <elem line="1992" name="if" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}if" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1995">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </fn>
        <elem line="1997" name="while" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}while" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="2000">
        <fn name="exists">
         <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
        </fn>
        <elem line="2002" name="event" nsuri="" flags="l">
         <valueOf flags="l">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </valueOf>
        </elem>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="0" minImp="0" slots="1" flags="s" line="1888" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}setvalue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='setvalue';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1889">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <elem line="1892" name="setvalue" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
      <sequence>
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
        </fn>
        <att line="1894" name="value" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <cast as="xs:untypedAtomic" emptiable="0">
           <fn name="string">
            <convert from="xs:untypedAtomic" to="xs:string">
             <attVal name="Q{}value" chk="0"/>
            </convert>
           </fn>
          </cast>
         </convert>
        </att>
       </choose>
       <choose line="1897">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </fn>
        <elem line="1900" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1901" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1904" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}ref" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1909">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </fn>
        <elem line="1912" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1913" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1916" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}nodeset" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1922">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </fn>
        <elem line="1924" name="position" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}position" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1927">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </fn>
        <elem line="1929" name="at" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}at" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1932">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </fn>
        <elem line="1934" name="if" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}if" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1937">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </fn>
        <elem line="1939" name="while" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}while" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1943">
        <fn name="exists">
         <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
        </fn>
        <elem line="1945" name="value" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <dot type="element(Q{http://www.w3.org/2002/xforms}setvalue)"/>
           </data>
          </convert>
         </valueOf>
        </elem>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="1" flags="s" line="1786" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}insert)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='insert';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1787">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <elem line="1789" name="insert" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
      <sequence>
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </fn>
        <elem line="1792" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1793" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1796" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}ref" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1801">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </fn>
        <elem line="1804" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1805" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1808" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}nodeset" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1814">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </fn>
        <elem line="1816" name="position" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}position" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1819">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </fn>
        <elem line="1821" name="at" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}at" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1824">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </fn>
        <elem line="1826" name="if" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}if" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1829">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </fn>
        <elem line="1831" name="while" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}while" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="1" flags="s" line="1837" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}delete)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='delete';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1838">
     <param name="Q{}nodeset" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <elem line="1840" name="delete" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
      <sequence>
       <choose>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </fn>
        <elem line="1843" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1844" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1847" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}ref" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1852">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </fn>
        <elem line="1855" name="ref" nsuri="" flags="l">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}nodeset" chk="0"/>
           <str val="."/>
          </gc>
          <valueOf line="1856" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="nodeset" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <true/>
          <valueOf line="1859" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}nodeset" chk="0"/>
           </convert>
          </valueOf>
         </choose>
        </elem>
       </choose>
       <choose line="1865">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </fn>
        <elem line="1867" name="position" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}position" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1870">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </fn>
        <elem line="1872" name="at" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}at" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1875">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </fn>
        <elem line="1877" name="if" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}if" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
       <choose line="1880">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </fn>
        <elem line="1882" name="while" nsuri="" flags="l">
         <valueOf flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}while" chk="0"/>
          </convert>
         </valueOf>
        </elem>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="29" binds="19">
  <template name="Q{}applyNestedActions" flags="os" line="2924" module="saxon-xforms.xsl" slots="2">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2925">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="2926" name="Q{}action-name" slot="1" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|action-name">
      <check card="1" diag="8|0|XTTE0590|action-name">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <choose line="2928">
     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
      <varRef name="action-map" slot="0"/>
      <varRef name="action-name" slot="1"/>
     </ifCall>
     <forEach line="2933">
      <ifCall line="2929" name="Q{http://www.w3.org/2005/xpath-functions/array}flatten" type="item()*">
       <treat as="array(map(*))" jsTest="function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isArray(item) &amp;&amp; SaxonJS.U.ForArray(item.value).every(function(seq){return c(seq.length) &amp;&amp; SaxonJS.U.ForArray(seq).every(v)});" diag="3|0|XTTE0570|actionsArray">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}find" type="function(*)">
         <varRef name="action-map" slot="0"/>
         <varRef name="action-name" slot="1"/>
        </ifCall>
       </treat>
      </ifCall>
      <callT line="2934" name="applyActions" bSlot="0"/>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="6" binds="22">
  <function name="Q{http://www.w3.org/2002/xforms}setInstance-JS" line="2530" module="saxon-xforms.xsl" eval="7" flags="pU" as="empty-sequence()" slots="2">
   <arg name="ref" as="xs:string"/>
   <arg name="updatedInstance" as="element()"/>
   <check role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2538" card="°" diag="5|0|XTTE0780|xforms:setInstance-JS">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="setInstance"/>
     <arrayBlock>
      <check line="2536" card="1" diag="3|0|XTTE0570|this-instance-id">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
         <varRef name="ref" slot="0"/>
        </ufCall>
        <str val="instance-id"/>
       </ifCall>
      </check>
      <varRef name="updatedInstance" slot="1"/>
     </arrayBlock>
    </ifCall>
   </check>
  </function>
 </co>
 <co id="3" binds="35 22">
  <function name="Q{http://www.w3.org/2002/xforms}getInstance-JS" line="2505" module="saxon-xforms.xsl" eval="7" flags="pU" as="element()?" slots="1">
   <arg name="ref" as="xs:string"/>
   <tailCallLoop role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2509">
    <choose>
     <fn name="not">
      <varRef name="ref" slot="0"/>
     </fn>
     <empty/>
     <true/>
     <ufCall line="2515" name="Q{http://www.w3.org/2002/xforms}instance" tailCall="foreign" bSlot="0" eval="7">
      <check line="2513" card="1" diag="3|0|XTTE0570|this-instance-id">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="1" eval="6">
         <varRef name="ref" slot="0"/>
        </ufCall>
        <str val="instance-id"/>
       </ifCall>
      </check>
     </ufCall>
    </choose>
   </tailCallLoop>
  </function>
 </co>
 <co id="22" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getInstanceMap" line="2468" module="saxon-xforms.xsl" eval="8" flags="pU" as="map(xs:string, xs:string)" slots="3">
   <arg name="nodeset" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2489" var="vv:v0" as="map(xs:string, xs:string)+" slot="1" eval="4">
    <sequence>
     <map size="1">
      <str val="instance-id"/>
      <str val="saxon-forms-default"/>
     </map>
     <ifCall line="2490" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
      <str val="xpath"/>
      <fn name="normalize-space">
       <varRef name="nodeset" slot="0"/>
      </fn>
     </ifCall>
    </sequence>
    <ifCall line="2473" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
     <analyzeString>
      <fn role="select" name="normalize-space">
       <varRef name="nodeset" slot="0"/>
      </fn>
      <str role="regex" val="^instance\s*\(\s*'(.*)'\s*\)\s*(/\s*(.*)|)$"/>
      <str role="flags" val=""/>
      <let role="matching" line="2475" var="xpath" as="xs:string" slot="2" eval="7">
       <choose line="2477">
        <fn name="regex-group">
         <int val="2"/>
        </fn>
        <fn line="2478" name="regex-group">
         <int val="3"/>
        </fn>
        <true/>
        <str val=""/>
       </choose>
       <sequence line="2485">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
         <str val="instance-id"/>
         <fn name="regex-group">
          <int val="1"/>
         </fn>
        </ifCall>
        <ifCall line="2486" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
         <str val="xpath"/>
         <varRef name="xpath" slot="2"/>
        </ifCall>
       </sequence>
      </let>
      <varRef role="nonMatching" line="2489" name="vv:v0" slot="1"/>
     </analyzeString>
     <map size="2">
      <str val="duplicates"/>
      <str val="reject"/>
      <str val="duplicates-error-code"/>
      <str val="XTDE3365"/>
     </map>
    </ifCall>
   </let>
  </function>
 </co>
 <co id="2" binds="22">
  <function name="Q{http://www.w3.org/2002/xforms}getInstanceId" line="2455" module="saxon-xforms.xsl" eval="8" flags="pU" as="xs:string" slots="1">
   <arg name="nodeset" as="xs:string"/>
   <cvUntyped role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2458" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="string">
      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
       <ufCall line="2457" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
        <varRef name="nodeset" slot="0"/>
       </ufCall>
       <str val="instance-id"/>
      </ifCall>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="53" binds="">
  <globalVariable name="Q{}debugMode" type="xs:boolean" line="42" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <false/>
  </globalVariable>
 </co>
 <co id="54" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getWhileStatement" line="579" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:string?" slots="3">
   <arg name="map" as="map(*)"/>
   <choose role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="582">
    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
     <varRef name="map" slot="0"/>
     <str val="@while"/>
    </ifCall>
    <treat line="583" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getWhileStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getWhileStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="map" slot="0"/>
         <str val="@while"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
    <true/>
    <treat line="586" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getWhileStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getWhileStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:get">
          <check card="1" diag="0|0||map:get">
           <let var="vv:LHS107500617" as="map(*)" slot="1" eval="1">
            <varRef name="map" slot="0"/>
            <for var="vv:STAR145730292" as="xs:anyAtomicType" slot="2">
             <ifCall role="in" name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
              <varRef name="vv:LHS107500617" slot="1"/>
             </ifCall>
             <ifCall role="return" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
              <varRef name="vv:LHS107500617" slot="1"/>
              <varRef name="vv:STAR145730292" slot="2"/>
             </ifCall>
            </for>
           </let>
          </check>
         </treat>
         <str val="@while"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </choose>
  </function>
 </co>
 <co id="55" binds="3 14 2 19">
  <template name="Q{}DOMActivate" flags="os" line="3388" module="saxon-xforms.xsl" slots="6">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3389">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="3391" var="actions" as="map(*)?" slot="1" eval="7">
     <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getAction"/>
       <arrayBlock>
        <fn name="string">
         <slash simple="1">
          <varRef name="form-control" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
         </slash>
        </fn>
       </arrayBlock>
      </ifCall>
     </treat>
     <let line="3393" var="refi" as="attribute(Q{}data-ref)?" slot="2" eval="8">
      <slash simple="1">
       <varRef name="form-control" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
      </slash>
      <let line="3396" var="instanceXML" as="element()?" slot="3" eval="7">
       <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
        <check card="1" diag="0|0||xforms:getInstance-JS">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="refi" slot="2"/>
          </data>
         </cvUntyped>
        </check>
       </ufCall>
       <let line="3398" var="updatedInstanceXML" as="element()?" slot="4" eval="7">
        <choose line="3399">
         <fn name="exists">
          <varRef name="instanceXML" slot="3"/>
         </fn>
         <treat line="3400" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
          <check card="?" diag="3|0|XTTE0570|updatedInstanceXML">
           <applyT mode="Q{}form-check-initial" bSlot="1">
            <varRef role="select" name="instanceXML" slot="3"/>
            <withParam name="Q{}instance-id" as="xs:string">
             <ufCall line="3394" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="2" eval="7">
              <check card="1" diag="0|0||xforms:getInstanceId">
               <cvUntyped to="xs:string">
                <data>
                 <varRef name="refi" slot="2"/>
                </data>
               </cvUntyped>
              </check>
             </ufCall>
            </withParam>
           </applyT>
          </check>
         </treat>
        </choose>
        <forEach line="3406">
         <varRef name="actions" slot="1"/>
         <let line="3407" var="action-map" as="map(*)" slot="5" eval="7">
          <dot type="map(*)"/>
          <choose line="3410">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <varRef name="action-map" slot="5"/>
            <str val="@event"/>
           </ifCall>
           <choose line="3411">
            <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <varRef name="action-map" slot="5"/>
               <str val="@event"/>
              </ifCall>
             </data>
             <str val="DOMActivate"/>
            </gc>
            <callT line="3412" name="applyActions" bSlot="3" flags="t">
             <withParam name="Q{}action-map" flags="t" as="item()">
              <varRef line="3413" name="action-map" slot="5"/>
             </withParam>
             <withParam name="Q{}instanceXML" flags="t" as="element()?">
              <varRef line="3414" name="updatedInstanceXML" slot="4"/>
             </withParam>
            </callT>
           </choose>
          </choose>
         </let>
        </forEach>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="51" binds="11">
  <template name="Q{}setActions" flags="os" line="2800" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2801">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <applyT line="2803" flags="t" bSlot="0">
     <union role="select" op="|">
      <union op="|">
       <union op="|">
        <union op="|">
         <union op="|">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='action';"/>
          </slash>
          <filter flags="b">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="child" nodeTest="Q{http://www.w3.org/2002/xforms}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2002/xforms'"/>
           </slash>
           <gc op="=" card="N:1" comp="CCC">
            <literal count="15">
             <str val="setvalue"/>
             <str val="insert"/>
             <str val="delete"/>
             <str val="setindex"/>
             <str val="toggle"/>
             <str val="setfocus"/>
             <str val="dispatch"/>
             <str val="rebuild"/>
             <str val="recalculate"/>
             <str val="revalidate"/>
             <str val="refresh"/>
             <str val="reset"/>
             <str val="load"/>
             <str val="send"/>
             <str val="message"/>
            </literal>
            <fn name="local-name">
             <dot type="Q{http://www.w3.org/2002/xforms}*"/>
            </fn>
           </gc>
          </filter>
         </union>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}show)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='show';"/>
         </slash>
        </union>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hide)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hide';"/>
        </slash>
       </union>
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='script';"/>
       </slash>
      </union>
      <slash simple="1">
       <varRef name="this" slot="0"/>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}unload)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='unload';"/>
      </slash>
     </union>
    </applyT>
   </sequence>
  </template>
 </co>
 <co id="56" binds="">
  <template name="Q{}serverError" flags="os" line="805" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="806">
    <param name="Q{}responseMap" slot="0" flags="i" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|responseMap">
      <check card="1" diag="8|0|XTTE0590|responseMap">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="807">
     <sequence role="select">
      <valueOf>
       <str val="Server side error HTTP response - "/>
      </valueOf>
      <valueOf>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="responseMap" slot="0"/>
          <str val="status"/>
         </ifCall>
        </atomSing>
        <str val=" "/>
        <atomSing card="?" diag="0|2||fn:concat">
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="responseMap" slot="0"/>
          <str val="message"/>
         </ifCall>
        </atomSing>
       </fn>
      </valueOf>
     </sequence>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="57" binds="58">
  <function name="Q{http://www.w3.org/2002/xforms}convert-xml-to-jxml" line="2034" module="saxon-xforms.xsl" eval="7" flags="pU" as="node()" slots="2">
   <arg name="xinstance" as="node()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2036" var="rep-xml" as="document-node()" slot="1" eval="7">
    <doc line="2038" validation="preserve">
     <elem name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl">
      <applyT mode="Q{}json-xml" bSlot="0">
       <varRef role="select" name="xinstance" slot="0"/>
      </applyT>
     </elem>
    </doc>
    <varRef line="2041" name="rep-xml" slot="1"/>
   </let>
  </function>
 </co>
 <co id="48" binds="10">
  <template name="Q{}setAction" flags="os" line="2946" module="saxon-xforms.xsl" slots="2">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2947">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="2948" name="Q{}nodeset" slot="1" flags="t">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <ifCall line="2951" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
     <sequence>
      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
       <str val="name"/>
       <fn name="local-name">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
         <dot flags="a"/>
        </treat>
       </fn>
      </ifCall>
      <choose line="2953">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
        </slash>
       </fn>
       <ifCall line="2954" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@value"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="2956">
       <and op="and">
        <fn name="empty">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
         </slash>
        </fn>
        <fn name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
         </slash>
        </fn>
       </and>
       <ifCall line="2957" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="value"/>
        <fn name="string">
         <dot flags="a"/>
        </fn>
       </ifCall>
      </choose>
      <ifCall line="2960" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
       <str val="@ref"/>
       <choose line="2962">
        <fn name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </slash>
        </fn>
        <fn line="2963" name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </slash>
        </fn>
        <fn line="2965" name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
         </slash>
        </fn>
        <fn line="2966" name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
         </slash>
        </fn>
        <true/>
        <str val=""/>
       </choose>
      </ifCall>
      <choose line="2979">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
        </slash>
       </fn>
       <ifCall line="2980" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@position"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="2982">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
        </slash>
       </fn>
       <ifCall line="2983" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@at"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="2987">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
        </slash>
       </fn>
       <ifCall line="2988" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@if"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="2992">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
        </slash>
       </fn>
       <ifCall line="2993" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@while"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <choose line="2996">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
        </slash>
       </fn>
       <ifCall line="2997" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@event"/>
        <fn name="string">
         <check card="?" diag="0|0||fn:string">
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
          </slash>
         </check>
        </fn>
       </ifCall>
      </choose>
      <choose line="2999">
       <fn name="exists">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
        </slash>
       </fn>
       <ifCall line="3000" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <str val="@submission"/>
        <fn name="string">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
         </slash>
        </fn>
       </ifCall>
      </choose>
      <treat line="3003" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="18|0|XTTE3375|">
       <forEachGroup algorithm="by">
        <slash role="select" simple="1">
         <varRef name="this" slot="0"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <fn role="key" name="local-name">
         <dot type="element()"/>
        </fn>
        <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
        <applyT role="content" line="3004" mode="Q{}xforms-action-map" bSlot="0">
         <dot role="select" type="element()"/>
        </applyT>
       </forEachGroup>
      </treat>
     </sequence>
     <map size="2">
      <str val="duplicates"/>
      <str val="reject"/>
      <str val="duplicates-error-code"/>
      <str val="XTDE3365"/>
     </map>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id="59" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}check-constraints-on-fields" line="703" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="4">
   <arg name="updatedInstanceXML" as="document-node()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="706" var="constraint-fieldsi" as="element()*" slot="1" eval="8">
    <filter flags="b">
     <slash simple="1">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
      <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </slash>
     <fn name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-constraint)" jsTest="return item.name==='data-constraint'"/>
     </fn>
    </filter>
    <forEach line="710">
     <varRef name="constraint-fieldsi" slot="1"/>
     <let line="711" var="contexti" as="node()" slot="2" eval="7">
      <treat line="712" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|contexti">
       <check card="1" diag="3|0|XTTE0570|contexti">
        <evaluate dxns="">
         <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
          <cvUntyped to="xs:string">
           <attVal name="Q{}data-ref" chk="0"/>
          </cvUntyped>
         </check>
         <varRef role="cxt" name="updatedInstanceXML" slot="0"/>
         <str role="sa" val="no"/>
         <map role="wp" size="0"/>
        </evaluate>
       </check>
      </treat>
      <let line="715" var="resulti" as="xs:boolean" slot="3" eval="7">
       <treat line="718" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|resulti">
        <check card="1" diag="3|0|XTTE0570|resulti">
         <cvUntyped to="xs:boolean">
          <data>
           <evaluate dxns="">
            <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
             <cvUntyped to="xs:string">
              <attVal name="Q{}data-constraint" chk="0"/>
             </cvUntyped>
            </check>
            <varRef role="cxt" name="contexti" slot="2"/>
            <str role="sa" val="no"/>
            <map role="wp" size="0"/>
           </evaluate>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <choose line="726">
        <fn name="not">
         <varRef name="resulti" slot="3"/>
        </fn>
        <dot type="element()"/>
       </choose>
      </let>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id="60" binds="17 17">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onchange" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="s" line="535" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="536" name="xforms-value-changed" bSlot="0" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="537" type="element(Q{}input)"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="s" line="545" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='select';"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="546" name="xforms-value-changed" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="547" type="element(Q{}select)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="42" binds="36 45 45 61 11">
  <template name="Q{}xformsjs-main" flags="os" line="80" module="saxon-xforms.xsl" slots="16">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="435" var="vv:v1" as="item()" slot="5" eval="13">
    <check card="1" diag="0|0||ixsl:call">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
    </check>
    <let line="405" var="vv:v0" as="item()" slot="6" eval="13">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <sequence line="81">
      <param name="Q{}xforms-doc" slot="0" as="document-node()?">
       <empty role="select"/>
       <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|xforms-doc">
        <check card="?" diag="8|0|XTTE0590|xforms-doc">
         <supplied slot="0"/>
        </check>
       </treat>
      </param>
      <param line="82" name="Q{}xforms-file" slot="1" as="xs:string?">
       <empty role="select"/>
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xforms-file">
        <check card="?" diag="8|0|XTTE0590|xforms-file">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="1"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <param line="91" name="Q{}instance-xml" slot="2" as="document-node()*">
       <empty role="select"/>
       <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|instance-xml">
        <supplied slot="2"/>
       </treat>
      </param>
      <param line="92" name="Q{}instance-docs" slot="3" as="map(*)?">
       <empty role="select"/>
       <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|instance-docs">
        <check card="?" diag="8|0|XTTE0590|instance-docs">
         <supplied slot="3"/>
        </check>
       </treat>
      </param>
      <param line="94" name="Q{}xFormsId" slot="4" as="xs:string">
       <gVarRef role="select" name="Q{}xform-html-id" bSlot="0"/>
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xFormsId">
        <check card="1" diag="8|0|XTTE0590|xFormsId">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="4"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <let line="102" var="xforms-doci" as="document-node()?" slot="7" eval="7">
       <choose>
        <fn name="empty">
         <varRef name="xforms-doc" slot="0"/>
        </fn>
        <fn name="doc">
         <varRef name="xforms-file" slot="1"/>
        </fn>
        <true/>
        <varRef name="xforms-doc" slot="0"/>
       </choose>
       <let line="106" var="xforms-instances" as="map(xs:string, element())" slot="8" eval="7">
        <choose line="108">
         <fn name="empty">
          <varRef name="instance-docs" slot="3"/>
         </fn>
         <treat line="111" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|xforms-instances">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
           <choose>
            <fn name="empty">
             <varRef name="instance-xml" slot="2"/>
            </fn>
            <forEach line="112">
             <slash>
              <slash>
               <slash simple="1">
                <varRef name="xforms-doci" slot="7"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
              </slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
             </slash>
             <ifCall line="119" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
              <check card="1" diag="0|0||map:entry">
               <cast as="xs:string" emptiable="1">
                <choose>
                 <fn name="exists">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </fn>
                 <attVal name="Q{}id" chk="0"/>
                 <true/>
                 <str val="saxon-forms-default"/>
                </choose>
               </cast>
              </check>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </ifCall>
            </forEach>
            <true/>
            <ifCall line="129" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
             <check card="1" diag="0|0||map:entry">
              <cast as="xs:string" emptiable="1">
               <choose>
                <fn name="exists">
                 <slash>
                  <conditionalSort>
                   <fn name="exists">
                    <tail start="2">
                     <varRef name="instance-xml" slot="2"/>
                    </tail>
                   </fn>
                   <docOrder intra="0">
                    <slash>
                     <varRef name="instance-xml" slot="2"/>
                     <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                    </slash>
                   </docOrder>
                  </conditionalSort>
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </slash>
                </fn>
                <atomSing card="?" diag="2|0||cast as">
                 <slash>
                  <conditionalSort>
                   <fn name="exists">
                    <tail start="2">
                     <varRef name="instance-xml" slot="2"/>
                    </tail>
                   </fn>
                   <docOrder intra="0">
                    <slash>
                     <varRef name="instance-xml" slot="2"/>
                     <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                    </slash>
                   </docOrder>
                  </conditionalSort>
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </slash>
                </atomSing>
                <true/>
                <str val="saxon-forms-default"/>
               </choose>
              </cast>
             </check>
             <conditionalSort>
              <fn name="exists">
               <tail start="2">
                <varRef name="instance-xml" slot="2"/>
               </tail>
              </fn>
              <docOrder intra="0">
               <slash>
                <varRef name="instance-xml" slot="2"/>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
              </docOrder>
             </conditionalSort>
            </ifCall>
           </choose>
           <map size="2">
            <str val="duplicates"/>
            <str val="reject"/>
            <str val="duplicates-error-code"/>
            <str val="XTDE3365"/>
           </map>
          </ifCall>
         </treat>
         <true/>
         <treat line="135" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|xforms-instances">
          <check card="1" diag="3|0|XTTE0570|xforms-instances">
           <varRef name="instance-docs" slot="3"/>
          </check>
         </treat>
        </choose>
        <let line="141" var="default-instance" as="element()" slot="9" eval="7">
         <choose line="143">
          <fn name="empty">
           <varRef name="instance-docs" slot="3"/>
          </fn>
          <choose line="145">
           <fn name="exists">
            <filter flags="b">
             <slash>
              <slash>
               <slash simple="1">
                <varRef name="xforms-doci" slot="7"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
              </slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
             </slash>
             <fn name="empty">
              <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
             </fn>
            </filter>
           </fn>
           <check line="146" card="1" diag="3|0|XTTE0570|default-instance">
            <slash>
             <slash>
              <slash>
               <slash simple="1">
                <varRef name="xforms-doci" slot="7"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
              </slash>
              <first>
               <filter flags="b">
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
                <fn name="empty">
                 <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                </fn>
               </filter>
              </first>
             </slash>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
           </check>
           <true/>
           <check line="149" card="1" diag="3|0|XTTE0570|default-instance">
            <slash>
             <slash>
              <slash>
               <slash simple="1">
                <varRef name="xforms-doci" slot="7"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
              </slash>
              <first>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
              </first>
             </slash>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
           </check>
          </choose>
          <true/>
          <treat line="155" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|default-instance">
           <check card="1" diag="3|0|XTTE0570|default-instance">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="getDefaultInstance"/>
             <arrayBlock/>
            </ifCall>
           </check>
          </treat>
         </choose>
         <let line="161" var="bindings" as="map(xs:string, element(Q{http://www.w3.org/2002/xforms}bind))" slot="10" eval="8">
          <ifCall line="163" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
           <forEach>
            <slash>
             <slash>
              <slash simple="1">
               <varRef name="xforms-doci" slot="7"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
              </slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
             </slash>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}bind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='bind';"/>
            </slash>
            <ifCall line="170" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
             <check card="1" diag="0|0||map:entry">
              <cast as="xs:string" emptiable="1">
               <choose>
                <fn name="exists">
                 <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                </fn>
                <attVal name="Q{}id" chk="0"/>
                <true/>
                <attVal name="Q{}nodeset" chk="0"/>
               </choose>
              </cast>
             </check>
             <dot type="element(Q{http://www.w3.org/2002/xforms}bind)"/>
            </ifCall>
           </forEach>
           <map size="2">
            <str val="duplicates"/>
            <str val="reject"/>
            <str val="duplicates-error-code"/>
            <str val="XTDE3365"/>
           </map>
          </ifCall>
          <let line="186" var="RelevantBindings" as="map(xs:string, xs:string)" slot="11" eval="7">
           <treat line="188" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|RelevantBindings">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
             <forEach>
              <ifCall line="184" name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
               <varRef name="bindings" slot="10"/>
              </ifCall>
              <let line="189" var="bindingNode" as="element(Q{http://www.w3.org/2002/xforms}bind)" slot="12" eval="7">
               <check card="1" diag="3|0|XTTE0570|bindingNode">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="bindings" slot="10"/>
                 <cast as="xs:string" emptiable="0">
                  <dot type="xs:anyAtomicType"/>
                 </cast>
                </ifCall>
               </check>
               <choose line="191">
                <fn name="exists">
                 <filter flags="b">
                  <varRef name="bindingNode" slot="12"/>
                  <fn name="exists">
                   <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                  </fn>
                 </filter>
                </fn>
                <ifCall line="193" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                 <check line="192" card="1" diag="3|0|XTTE0570|keyi">
                  <cast as="xs:string" emptiable="1">
                   <data>
                    <slash simple="1">
                     <varRef name="bindingNode" slot="12"/>
                     <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
                    </slash>
                   </data>
                  </cast>
                 </check>
                 <cast as="xs:string" emptiable="1">
                  <data>
                   <slash simple="1">
                    <varRef name="bindingNode" slot="12"/>
                    <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                   </slash>
                  </data>
                 </cast>
                </ifCall>
               </choose>
              </let>
             </forEach>
             <map size="2">
              <str val="duplicates"/>
              <str val="reject"/>
              <str val="duplicates-error-code"/>
              <str val="XTDE3365"/>
             </map>
            </ifCall>
           </treat>
           <sequence line="205">
            <choose>
             <gc op="=" card="M:N" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
              <data>
               <slash>
                <slash simple="1">
                 <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                 <axis name="descendant" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
                </slash>
                <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
               </slash>
              </data>
              <data>
               <gVarRef name="Q{}xforms-cache-id" bSlot="1"/>
              </data>
             </gc>
             <sequence line="206">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="setXFormsDoc"/>
               <arrayBlock>
                <varRef name="xforms-doc" slot="0"/>
               </arrayBlock>
              </ifCall>
              <ifCall line="207" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="setXFormsID"/>
               <arrayBlock>
                <varRef name="xFormsId" slot="4"/>
               </arrayBlock>
              </ifCall>
              <ifCall line="208" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="setRelevantMap"/>
               <arrayBlock>
                <varRef name="RelevantBindings" slot="11"/>
               </arrayBlock>
              </ifCall>
             </sequence>
             <true/>
             <sequence line="219">
              <forEach>
               <slash simple="1">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                <axis name="descendant" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
               </slash>
               <resultDoc line="228" global="#&#xD;&#xA;#Tue Jul 24 21:04:01 BST 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Tue Jul 24 21:04:01 BST 2018&#xD;&#xA;">
                <str role="href" val="?."/>
                <elem role="content" line="229" name="script" nsuri="" namespaces="xd rdf xhtml js in fn map array ev r">
                 <sequence>
                  <att name="type" flags="l">
                   <str val="text/javascript"/>
                  </att>
                  <att name="id" flags="l">
                   <fn name="string-join">
                    <convert from="xs:anyAtomicType" to="xs:string">
                     <data>
                      <mergeAdj>
                       <gVarRef name="Q{}xforms-cache-id" bSlot="2"/>
                      </mergeAdj>
                     </data>
                    </convert>
                    <str val=" "/>
                   </fn>
                  </att>
                  <valueOf flags="l">
                   <str val="                &#xA;                            var XFormsDoc = null;&#xA;                            var defaultInstanceDoc = null;&#xA;                            &#xA;                            // MD 2018: OND's suggestion for multiple instances&#xA;                            var instanceDocs = {};&#xA;                            &#xA;                            var pendingUpdatesMap = null;&#xA;                            var updatesMap = null;&#xA;                            var XFormsID = '"/>
                  </valueOf>
                  <valueOf line="238" flags="l">
                   <varRef name="xFormsId" slot="4"/>
                  </valueOf>
                  <valueOf flags="l">
                   <str val="';&#xA;                            var actions = {};&#xA;                            var submissions = {};&#xA;                            var outputs = {};&#xA;                            var relevantMap = {};&#xA;                            &#xA;                            var getCurrentDate = function(){&#xA;                                var today = new Date();&#xA;                                var dd = today.getDate();&#xA;                                var mm = today.getMonth()+1; //January is 0!&#xA;                                var yyyy = today.getFullYear();&#xA;                            &#xA;                                if(dd &lt; 10) {&#xA;                                    dd = '0' + dd;&#xA;                                } &#xA;                            &#xA;                                if(mm &lt; 10) {&#xA;                                    mm = '0' + mm;&#xA;                                } &#xA;                            &#xA;                                today = yyyy + '-' + mm + '-' + dd;&#xA;                                return today;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setXFormsDoc = function(doc) {&#xA;                                XFormsDoc = doc;&#xA;                            }&#xA;                            &#xA;                            var getXFormsDoc = function() {&#xA;                                return XFormsDoc;&#xA;                            }&#xA;                            var setXFormsID = function(id) {&#xA;                                XFormsID = id;&#xA;                            }&#xA;                            &#xA;                            var getXFormsID = function() {&#xA;                                return XFormsID;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setInstance = function(name, value) {&#xA;                                instanceDocs[name] = value;&#xA;                            } &#xA;                            &#xA;                            var getInstance = function(name) {&#xA;                                return instanceDocs[name];&#xA;                            }&#xA;                            &#xA;                            &#xA;                            //[OND] Maybe we can just set the key-&gt; value without having to copy the entire instanceDocs object.&#xA;                            var updateInstance = function(instanceDocs, key, value){&#xA;                                instanceDocs[key] = value;&#xA;                                return instanceDocs;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setDefaultInstance = function(doc) {&#xA;                                defaultInstanceDoc = doc;&#xA;                            }&#xA;                            &#xA;                            var getDefaultInstance = function() {&#xA;                                return defaultInstanceDoc;&#xA;                            }&#xA;                            &#xA;                           &#xA;                            var getInstanceKeys = function() {&#xA;                                return Object.keys(instanceDocs);&#xA;                            }&#xA;                            &#xA;                            var setPendingUpdates = function(map1) {&#xA;                                pendingUpdatesMap = map1;&#xA;                            }&#xA;                            &#xA;                            var clearPendingUpdates = function() {&#xA;                                pendingUpdatesMap = null;&#xA;                            }&#xA;                            &#xA;                            var getPendingUpdates = function() {&#xA;                                return pendingUpdatesMap;&#xA;                            }&#xA;                            &#xA;                            var setUpdates = function(map1) {&#xA;                                updatesMap = map1;&#xA;                            }&#xA;                            &#xA;                            var clearUpdates = function() {&#xA;                                updatesMap = null;&#xA;                            }&#xA;                            &#xA;                            var getUpdates = function() {&#xA;                                return updatesMap;&#xA;                            }&#xA;                            &#xA;                            var addAction = function(name, value){&#xA;                                actions[name] = value;&#xA;                            }&#xA;&#xA;                            var getAction = function(name){&#xA;                                return actions[name];&#xA;                            }&#xA;                            &#xA;                            var updateAction = function(actioni, key, value){&#xA;                                actioni[key] = value;&#xA;                                return actioni;&#xA;                            }&#xA;                            &#xA;                            var addSubmission = function(name, value){&#xA;                                submissions[name] = value;&#xA;                            }&#xA;                            &#xA;                            var getSubmission = function(name){&#xA;                                return submissions[name];&#xA;                            }     &#xA;                            &#xA;                            var addOutput = function(name, value){&#xA;                                outputs[name] = value;&#xA;                            }&#xA;                            &#xA;                            var getOutput = function(name){&#xA;                                return outputs[name];&#xA;                            }&#xA;                            &#xA;                            var getOutputKeys = function() {&#xA;                                return Object.keys(outputs);&#xA;                            }&#xA;                            &#xA;                            var setRelevantMap = function(map1) {&#xA;                                relevantMap = map1;                            &#xA;                            }&#xA;                            &#xA;                            var getRelevantMap = function() {&#xA;                                return relevantMap;&#xA;                            }&#xA;                            &#xA;  &#xA;                            var startTime = function(name) {&#xA;                                console.time(name);&#xA;                            }&#xA;                            &#xA;                            var endTime = function(name) {&#xA;                                console.timeEnd(name);&#xA;                            }&#xA;                            &#xA;                        "/>
                  </valueOf>
                 </sequence>
                </elem>
               </resultDoc>
              </forEach>
              <ifCall line="386" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="setXFormsDoc"/>
               <arrayBlock>
                <varRef name="xforms-doc" slot="0"/>
               </arrayBlock>
              </ifCall>
              <ifCall line="387" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="setDefaultInstance"/>
               <arrayBlock>
                <varRef name="default-instance" slot="9"/>
               </arrayBlock>
              </ifCall>
              <ifCall line="388" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="setRelevantMap"/>
               <arrayBlock>
                <varRef name="RelevantBindings" slot="11"/>
               </arrayBlock>
              </ifCall>
              <ifCall line="393" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="setPendingUpdates"/>
               <arrayBlock>
                <treat line="390" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||pendingInstanceUpdates">
                 <map size="0"/>
                </treat>
               </arrayBlock>
              </ifCall>
              <ifCall line="394" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="setUpdates"/>
               <arrayBlock>
                <treat line="391" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||instanceUpdates">
                 <map size="0"/>
                </treat>
               </arrayBlock>
              </ifCall>
             </sequence>
            </choose>
            <forEach line="403">
             <treat line="401" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|instanceKeys">
              <cvUntyped to="xs:string">
               <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
                <varRef name="xforms-instances" slot="8"/>
               </ifCall>
              </cvUntyped>
             </treat>
             <ifCall line="405" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <varRef name="vv:v0" slot="6"/>
              <str val="setInstance"/>
              <arrayBlock>
               <dot type="xs:string"/>
               <check line="404" card="1" diag="3|0|XTTE0570|instance">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="xforms-instances" slot="8"/>
                 <dot type="xs:string"/>
                </ifCall>
               </check>
              </arrayBlock>
             </ifCall>
            </forEach>
            <let line="410" var="submissions" as="map(xs:string, map(*))" slot="13" eval="8">
             <ifCall line="412" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
              <forEach>
               <slash>
                <slash>
                 <slash simple="1">
                  <varRef name="xforms-doci" slot="7"/>
                  <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                 </slash>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
                </slash>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}submission)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='submission';"/>
               </slash>
               <let line="416" var="map-key" as="xs:string" slot="14" eval="7">
                <choose>
                 <fn name="exists">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </fn>
                 <check card="1" diag="3|0|XTTE0570|map-key">
                  <cast as="xs:string" emptiable="1">
                   <attVal name="Q{}id" chk="0"/>
                  </cast>
                 </check>
                 <true/>
                 <str val="saxon-forms-default-submission"/>
                </choose>
                <let line="417" var="map-value" as="map(*)" slot="15" eval="7">
                 <treat line="418" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|map-value">
                  <check card="1" diag="3|0|XTTE0570|map-value">
                   <callT name="setSubmission" bSlot="3">
                    <withParam name="Q{}this" flags="c" as="element()">
                     <dot line="419" type="element(Q{http://www.w3.org/2002/xforms}submission)"/>
                    </withParam>
                    <withParam name="Q{}submission-id" flags="c" as="xs:string">
                     <varRef line="420" name="map-key" slot="14"/>
                    </withParam>
                   </callT>
                  </check>
                 </treat>
                 <ifCall line="423" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                  <varRef name="map-key" slot="14"/>
                  <varRef name="map-value" slot="15"/>
                 </ifCall>
                </let>
               </let>
              </forEach>
              <map size="2">
               <str val="duplicates"/>
               <str val="reject"/>
               <str val="duplicates-error-code"/>
               <str val="XTDE3365"/>
              </map>
             </ifCall>
             <sequence line="432">
              <forEach>
               <treat line="430" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|submissionKeys">
                <cvUntyped to="xs:string">
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
                  <varRef name="submissions" slot="13"/>
                 </ifCall>
                </cvUntyped>
               </treat>
               <ifCall line="435" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                <varRef name="vv:v1" slot="5"/>
                <str val="addSubmission"/>
                <arrayBlock>
                 <dot type="xs:string"/>
                 <check line="433" card="1" diag="3|0|XTTE0570|submission">
                  <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                   <varRef name="submissions" slot="13"/>
                   <dot type="xs:string"/>
                  </ifCall>
                 </check>
                </arrayBlock>
               </ifCall>
              </forEach>
              <resultDoc line="442" global="#&#xD;&#xA;#Tue Jul 24 21:04:01 BST 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Tue Jul 24 21:04:01 BST 2018&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
               <fn role="href" name="concat">
                <str val="#"/>
                <varRef name="xFormsId" slot="4"/>
               </fn>
               <applyT role="content" line="443" bSlot="4">
                <slash role="select" simple="1">
                 <varRef name="xforms-doci" slot="7"/>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                </slash>
                <withParam name="Q{}instances" flags="t" as="map(xs:string, element())">
                 <varRef line="444" name="xforms-instances" slot="8"/>
                </withParam>
                <withParam name="Q{}bindings" flags="t" as="map(xs:string, node())">
                 <varRef line="445" name="bindings" slot="10"/>
                </withParam>
                <withParam name="Q{}submissions" flags="t" as="map(xs:string, map(*))">
                 <varRef line="446" name="submissions" slot="13"/>
                </withParam>
                <withParam name="Q{}nodeset" flags="t" as="xs:string">
                 <str val=""/>
                </withParam>
               </applyT>
              </resultDoc>
             </sequence>
            </let>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </let>
     </sequence>
    </let>
   </let>
  </template>
 </co>
 <co id="41" binds="56 6 7">
  <template name="Q{}HTTPsubmit" cxt="map(*)" jsTest="return SaxonJS.U.isMap(item)" flags="s" line="755" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="761">
    <param name="Q{}instance-id" slot="0" as="xs:string">
     <str role="select" val="saxon-forms-default"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
      <check card="1" diag="8|0|XTTE0590|instance-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="762" name="Q{}targetref" slot="1" as="xs:string?">
     <empty role="select"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|targetref">
      <check card="?" diag="8|0|XTTE0590|targetref">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="763" name="Q{}replace" slot="2" as="xs:string?">
     <empty role="select"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|replace">
      <check card="?" diag="8|0|XTTE0590|replace">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="767" var="responseXML" as="document-node()" slot="3" eval="7">
     <treat as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="3|0|XTTE0570|responseXML">
      <check card="1" diag="3|0|XTTE0570|responseXML">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <dot type="map(*)"/>
        <str val="body"/>
       </ifCall>
      </check>
     </treat>
     <choose line="770">
      <fn name="empty">
       <varRef name="responseXML" slot="3"/>
      </fn>
      <callT line="771" name="serverError" bSlot="0" flags="t">
       <withParam name="Q{}responseMap" flags="c" as="map(*)">
        <dot line="772" type="map(*)"/>
       </withParam>
      </callT>
      <gc line="784" op="=" card="1:1" comp="CCC">
       <varRef name="replace" slot="2"/>
       <str val="instance"/>
      </gc>
      <sequence line="785">
       <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="1" eval="8 4">
        <fn line="765" name="concat">
         <str val="instance('"/>
         <varRef name="instance-id" slot="0"/>
         <str val="')/"/>
        </fn>
        <check card="1" diag="0|1||xforms:setInstance-JS">
         <slash simple="1">
          <varRef name="responseXML" slot="3"/>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
        </check>
       </ufCall>
       <callT line="787" name="xforms-rebuild" bSlot="2" flags="t"/>
      </sequence>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id="35" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}instance" line="111" module="xforms-function-library.xsl" eval="7" flags="pU" as="element()?" slots="1">
   <arg name="instance-id" as="xs:string"/>
   <treat role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="113" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="5|0|XTTE0780|xforms:instance">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="getInstance"/>
     <arrayBlock>
      <varRef name="instance-id" slot="0"/>
     </arrayBlock>
    </ifCall>
   </treat>
  </function>
 </co>
 <co id="62" binds="55 39">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onclick" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="1" rank="0" minImp="0" slots="0" flags="s" line="1659" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <fn ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1659" name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
     </fn>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1661" name="DOMActivate" bSlot="0" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="1662" type="element(Q{}button)"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="738" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <fn ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="738" name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
     </fn>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="740" name="xforms-submit" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="741" type="element(Q{}button)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="61" binds="49 50 51 10">
  <template name="Q{}setSubmission" flags="os" line="3020" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3021">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3022" name="Q{}submission-id" slot="1" flags="i" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|submission-id">
      <check card="1" diag="8|0|XTTE0590|submission-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3025" var="bindingi" as="node()?" slot="2" eval="7">
     <treat line="3026" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
      <check card="?" diag="3|0|XTTE0570|bindingi">
       <callT name="getBinding" bSlot="0">
        <withParam name="Q{}this" flags="c" as="element()">
         <varRef line="3027" name="this" slot="0"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <let line="3032" var="refi" as="xs:string" slot="3" eval="7">
      <treat line="3033" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
       <check card="1" diag="3|0|XTTE0570|refi">
        <cvUntyped to="xs:string">
         <data>
          <callT name="getDataRef" bSlot="1">
           <withParam name="Q{}this" flags="c" as="element()">
            <varRef line="3034" name="this" slot="0"/>
           </withParam>
           <withParam name="Q{}bindingi" flags="c" as="node()?">
            <varRef line="3035" name="bindingi" slot="2"/>
           </withParam>
          </callT>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3040" var="actions" as="map(*)*" slot="4" eval="8">
       <treat line="3041" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
        <callT name="setActions" bSlot="2">
         <withParam name="Q{}this" flags="c" as="element()">
          <treat line="3042" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
           <dot flags="a"/>
          </treat>
         </withParam>
         <withParam name="Q{}nodeset" flags="t" as="xs:string">
          <varRef line="3043" name="refi" slot="3"/>
         </withParam>
        </callT>
       </treat>
       <sequence line="3047">
        <choose>
         <fn name="exists">
          <varRef name="actions" slot="4"/>
         </fn>
         <ifCall line="3048" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
          <check card="1" diag="0|0||ixsl:call">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
          </check>
          <str val="addAction"/>
          <arrayBlock>
           <varRef name="submission-id" slot="1"/>
           <varRef name="actions" slot="4"/>
          </arrayBlock>
         </ifCall>
        </choose>
        <ifCall line="3053" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
         <sequence>
          <choose>
           <fn name="exists">
            <varRef name="refi" slot="3"/>
           </fn>
           <ifCall line="3054" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@ref"/>
            <varRef name="refi" slot="3"/>
           </ifCall>
          </choose>
          <choose line="3057">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}resource)" jsTest="return item.name==='resource'"/>
            </slash>
           </fn>
           <ifCall line="3058" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@resource"/>
            <cast as="xs:string" emptiable="1">
             <data>
              <slash simple="1">
               <varRef name="this" slot="0"/>
               <axis name="attribute" nodeTest="attribute(Q{}resource)" jsTest="return item.name==='resource'"/>
              </slash>
             </data>
            </cast>
           </ifCall>
          </choose>
          <choose line="3060">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}mode)" jsTest="return item.name==='mode'"/>
            </slash>
           </fn>
           <ifCall line="3061" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@mode"/>
            <cast as="xs:string" emptiable="1">
             <data>
              <slash simple="1">
               <varRef name="this" slot="0"/>
               <axis name="attribute" nodeTest="attribute(Q{}mode)" jsTest="return item.name==='mode'"/>
              </slash>
             </data>
            </cast>
           </ifCall>
          </choose>
          <ifCall line="3064" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@method"/>
           <choose line="3066">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}method)" jsTest="return item.name==='method'"/>
             </slash>
            </fn>
            <fn line="3067" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}method)" jsTest="return item.name==='method'"/>
             </slash>
            </fn>
            <true/>
            <str val="POST"/>
           </choose>
          </ifCall>
          <choose line="3076">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}validate)" jsTest="return item.name==='validate'"/>
            </slash>
           </fn>
           <ifCall line="3077" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@validate"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}validate)" jsTest="return item.name==='validate'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3079">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
            </slash>
           </fn>
           <ifCall line="3080" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@relevant"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3082">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}serialization)" jsTest="return item.name==='serialization'"/>
            </slash>
           </fn>
           <ifCall line="3083" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@serialization"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}serialization)" jsTest="return item.name==='serialization'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3085">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}version)" jsTest="return item.name==='version'"/>
            </slash>
           </fn>
           <ifCall line="3086" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@version"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}version)" jsTest="return item.name==='version'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3088">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}indent)" jsTest="return item.name==='indent'"/>
            </slash>
           </fn>
           <ifCall line="3089" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@indent"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}indent)" jsTest="return item.name==='indent'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <ifCall line="3093" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@mediatype"/>
           <choose line="3095">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}mediatype)" jsTest="return item.name==='mediatype'"/>
             </slash>
            </fn>
            <fn line="3096" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}mediatype)" jsTest="return item.name==='mediatype'"/>
             </slash>
            </fn>
            <true/>
            <str val="text/plain"/>
           </choose>
          </ifCall>
          <choose line="3106">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}encoding)" jsTest="return item.name==='encoding'"/>
            </slash>
           </fn>
           <ifCall line="3107" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@encoding"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}encoding)" jsTest="return item.name==='encoding'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3109">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}omit-xml-declaration)" jsTest="return item.name==='omit-xml-declaration'"/>
            </slash>
           </fn>
           <ifCall line="3110" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@omit-xml-declaration"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}omit-xml-declaration)" jsTest="return item.name==='omit-xml-declaration'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3112">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}standalone)" jsTest="return item.name==='standalone'"/>
            </slash>
           </fn>
           <ifCall line="3113" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@standalone"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}standalone)" jsTest="return item.name==='standalone'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3115">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}cdata-section-elements)" jsTest="return item.name==='cdata-section-elements'"/>
            </slash>
           </fn>
           <ifCall line="3116" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@cdata-section-elements"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}cdata-section-elements)" jsTest="return item.name==='cdata-section-elements'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <ifCall line="3119" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@replace"/>
           <choose line="3121">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}replace)" jsTest="return item.name==='replace'"/>
             </slash>
            </fn>
            <fn line="3122" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}replace)" jsTest="return item.name==='replace'"/>
             </slash>
            </fn>
            <true/>
            <str val="all"/>
           </choose>
          </ifCall>
          <choose line="3133">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}instance)" jsTest="return item.name==='instance'"/>
            </slash>
           </fn>
           <ifCall line="3134" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@instance"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}instance)" jsTest="return item.name==='instance'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3136">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}targetref)" jsTest="return item.name==='targetref'"/>
            </slash>
           </fn>
           <ifCall line="3137" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@targetref"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}targetref)" jsTest="return item.name==='targetref'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3139">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}separator)" jsTest="return item.name==='separator'"/>
            </slash>
           </fn>
           <ifCall line="3140" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@separator"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}separator)" jsTest="return item.name==='separator'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3142">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}includenamespaceprefixes)" jsTest="return item.name==='includenamespaceprefixes'"/>
            </slash>
           </fn>
           <ifCall line="3143" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@includenamespaceprefixes"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}includenamespaceprefixes)" jsTest="return item.name==='includenamespaceprefixes'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <treat line="3146" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="18|0|XTTE3375|">
           <forEachGroup algorithm="by">
            <slash role="select" simple="1">
             <varRef name="this" slot="0"/>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <fn role="key" name="local-name">
             <dot type="element()"/>
            </fn>
            <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
            <applyT role="content" line="3147" mode="Q{}xforms-action-map" bSlot="3">
             <dot role="select" type="element()"/>
            </applyT>
           </forEachGroup>
          </treat>
         </sequence>
         <map size="2">
          <str val="duplicates"/>
          <str val="reject"/>
          <str val="duplicates-error-code"/>
          <str val="XTDE3365"/>
         </map>
        </ifCall>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="63" binds="32 17">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onkeyup" onNo="TC" flags="W" patternSlots="1">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="524" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
     <and ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="524" op="and">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
      </fn>
      <ufCall name="Q{http://www.w3.org/2002/xforms}hasClass" tailCall="false" bSlot="0">
       <check card="1" diag="0|0||xforms:hasClass">
        <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
       </check>
       <str val="incremental"/>
      </ufCall>
     </and>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="526" name="xforms-value-changed" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="527" type="element(Q{}input)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="49" binds="64">
  <template name="Q{}getBinding" flags="os" line="2576" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2577">
    <param name="Q{}this" slot="0" flags="r" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="2578" name="Q{}bindings" slot="1" flags="t" as="map(xs:string, node())">
     <map role="select" size="0"/>
     <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
      <check card="1" diag="8|0|XTTE0590|bindings">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <let line="2580" var="ref-binding" as="xs:string" slot="2" eval="7">
     <treat line="2581" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|ref-binding">
      <check card="1" diag="3|0|XTTE0570|ref-binding">
       <cvUntyped to="xs:string">
        <data>
         <callT name="getBindingRef" bSlot="0">
          <withParam name="Q{}this" flags="c" as="element()">
           <treat line="2582" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
            <dot flags="a"/>
           </treat>
          </withParam>
         </callT>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line="2586" var="binding" as="element()?" slot="3" eval="7">
      <choose line="2591">
       <fn name="empty">
        <varRef name="ref-binding" slot="2"/>
       </fn>
       <empty/>
       <true/>
       <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|binding">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="bindings" slot="1"/>
         <varRef name="ref-binding" slot="2"/>
        </ifCall>
       </treat>
      </choose>
      <choose line="2595">
       <fn name="exists">
        <varRef name="binding" slot="3"/>
       </fn>
       <varRef line="2597" name="binding" slot="3"/>
      </choose>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="65" binds="">
  <globalVariable name="Q{}default-instance-id" type="xs:string" line="44" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="saxon-forms-default"/>
  </globalVariable>
 </co>
 <co id="64" binds="">
  <template name="Q{}getBindingRef" flags="os" line="2608" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2609">
    <param name="Q{}this" slot="0" flags="r" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <choose line="2616">
     <fn name="exists">
      <slash simple="1">
       <varRef name="this" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}bind)" jsTest="return item.name==='bind'"/>
      </slash>
     </fn>
     <valueOf line="2617">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}bind)" jsTest="return item.name==='bind'"/>
        </slash>
       </data>
      </convert>
     </valueOf>
     <fn line="2620" name="exists">
      <slash simple="1">
       <varRef name="this" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
      </slash>
     </fn>
     <valueOf line="2621">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </slash>
       </data>
      </convert>
     </valueOf>
     <true/>
     <valueOf line="2624" flags="S">
      <str val=""/>
     </valueOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="66" binds="">
  <globalVariable name="Q{}debugTiming" type="xs:boolean" line="43" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <false/>
  </globalVariable>
 </co>
 <co id="31" binds="31 31 31">
  <mode name="Q{}jxml-xml" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="2" flags="s" line="2163" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:array" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='array'"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2164" var="keyVar" as="attribute(Q{}key)?" slot="0" eval="8">
     <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     <let line="2167" var="vv:v0" as="xs:string" slot="1" eval="13">
      <fn name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <varRef name="keyVar" slot="0"/>
        </data>
       </convert>
      </fn>
      <forEach line="2166">
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       <compElem line="2167">
        <varRef role="name" name="vv:v0" slot="1"/>
        <applyT role="content" line="2168" mode="Q{}jxml-xml" bSlot="0">
         <dot role="select" type="element()"/>
        </applyT>
       </compElem>
      </forEach>
     </let>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="2149" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:number" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='number'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2151">
     <fn name="starts-with">
      <cvUntyped to="xs:string">
       <attVal name="Q{}key" chk="0"/>
      </cvUntyped>
      <str val="@"/>
     </fn>
     <compAtt line="2152">
      <fn role="name" name="substring">
       <cvUntyped to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </cvUntyped>
       <int val="2"/>
      </fn>
      <fn role="select" name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <mergeAdj>
          <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </compAtt>
     <true/>
     <compElem line="2155">
      <fn role="name" name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </convert>
      </fn>
      <valueOf role="content" line="2156" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </compElem>
    </choose>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="2149" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:string" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='string'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2151">
     <fn name="starts-with">
      <cvUntyped to="xs:string">
       <attVal name="Q{}key" chk="0"/>
      </cvUntyped>
      <str val="@"/>
     </fn>
     <compAtt line="2152">
      <fn role="name" name="substring">
       <cvUntyped to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </cvUntyped>
       <int val="2"/>
      </fn>
      <fn role="select" name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <mergeAdj>
          <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </compAtt>
     <true/>
     <compElem line="2155">
      <fn role="name" name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </convert>
      </fn>
      <valueOf role="content" line="2156" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </compElem>
    </choose>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="0" flags="s" line="2125" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:map" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='map'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2127">
     <fn name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     </fn>
     <applyT line="2129" mode="Q{}jxml-xml" flags="t" bSlot="1">
      <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </applyT>
     <fn line="2134" name="starts-with">
      <cvUntyped to="xs:string">
       <attVal name="Q{}key" chk="0"/>
      </cvUntyped>
      <str val="@"/>
     </fn>
     <compAtt line="2135">
      <fn role="name" name="substring">
       <cvUntyped to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </cvUntyped>
       <int val="2"/>
      </fn>
      <convert role="select" from="xs:untypedAtomic" to="xs:string">
       <data>
        <dot type="*:map"/>
       </data>
      </convert>
     </compAtt>
     <true/>
     <compElem line="2138">
      <fn role="name" name="string">
       <convert from="xs:untypedAtomic" to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </convert>
      </fn>
      <applyT role="content" line="2139" mode="Q{}jxml-xml" bSlot="2">
       <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </applyT>
     </compElem>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="23" binds="">
  <template name="Q{}getInstance" flags="os" as="element()?" line="2551" module="saxon-xforms.xsl" slots="2">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2552">
    <param name="Q{}instance-id" slot="0" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
      <check card="1" diag="8|0|XTTE0590|instance-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="2553" name="Q{}instances" slot="1" flags="ti" as="map(xs:string, element())">
     <treat role="conversion" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|instances">
      <check card="1" diag="8|0|XTTE0590|instances">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <choose line="2557">
     <varRef name="instance-id" slot="0"/>
     <ifCall line="2558" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
      <varRef name="instances" slot="1"/>
      <varRef name="instance-id" slot="0"/>
     </ifCall>
     <true/>
     <copyOf line="2562" flags="vc">
      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
       <varRef name="instances" slot="1"/>
       <str val="saxon-forms-default"/>
      </ifCall>
     </copyOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="58" binds="58 58 58">
  <mode name="Q{}json-xml" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="2045" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2050">
     <fn name="exists">
      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </fn>
     <forEachGroup line="2051" algorithm="by">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </sequence>
      <fn role="key" name="local-name">
       <dot type="node()"/>
      </fn>
      <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
      <choose role="content" line="2053">
       <fn name="exists">
        <tail start="2">
         <currentGroup/>
        </tail>
       </fn>
       <elem line="2056" name="array" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
        <sequence>
         <att name="key" flags="l">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <currentGroupingKey/>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <forEach line="2057">
          <currentGroup/>
          <elem line="2060" name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl">
           <applyT mode="Q{}json-xml" bSlot="0">
            <dot role="select"/>
           </applyT>
          </elem>
         </forEach>
        </sequence>
       </elem>
       <filter line="2067" flags="b">
        <currentGroup/>
        <fn name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|12|XPTY0020|">
           <dot/>
          </treat>
          <axis name="self" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         </slash>
        </fn>
       </filter>
       <elem line="2072" name="string" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
        <sequence>
         <att name="key" flags="l">
          <fn name="concat">
           <str val="@"/>
           <check card="?" diag="0|1||fn:concat">
            <currentGroupingKey/>
           </check>
          </fn>
         </att>
         <valueOf line="2073" flags="l">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <dot type="node()"/>
           </data>
          </convert>
         </valueOf>
        </sequence>
       </elem>
       <fn line="2078" name="exists">
        <slash>
         <currentGroup/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </fn>
       <elem line="2081" name="map" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
        <sequence>
         <att name="key" flags="l">
          <fn name="string-join">
           <convert from="xs:anyAtomicType" to="xs:string">
            <currentGroupingKey/>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <applyT line="2082" mode="Q{}json-xml" bSlot="1">
          <currentGroup role="select"/>
         </applyT>
        </sequence>
       </elem>
       <true/>
       <applyT line="2087" mode="Q{}json-xml" bSlot="2">
        <currentGroup role="select"/>
       </applyT>
      </choose>
     </forEachGroup>
     <fn line="2093" name="matches">
      <cvUntyped to="xs:string">
       <data>
        <dot type="element()"/>
       </data>
      </cvUntyped>
      <str val="^[0-9]+$"/>
      <str val=""/>
     </fn>
     <elem line="2095" name="number" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
      <sequence>
       <att name="key" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </att>
       <valueOf line="2096" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <mergeAdj>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </mergeAdj>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
     <true/>
     <elem line="2101" name="string" nsuri="http://www.w3.org/2005/xpath-functions" flags="d">
      <sequence>
       <att name="key" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </att>
       <valueOf line="2102" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <mergeAdj>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </mergeAdj>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </choose>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{http://saxon.sf.net/}kk101" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1618" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <data ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1618">
   <axis name="child" nodeTest="element(Q{}data-action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='data-action';"/>
  </data>
 </key>
 <key name="Q{http://saxon.sf.net/}kk102" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2245" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <attVal ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="-1" name="Q{}data-ref" chk="0"/>
 </key>
 <key name="Q{http://saxon.sf.net/}kk103" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2779" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <attVal ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events r=http://ns.datacraft.co.uk/recipe rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="-1" name="Q{}id" chk="0"/>
 </key>
 <output>
  <property name="indent" value="no"/>
  <property name="doctype-system" value="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"/>
  <property name="encoding" value="utf-8"/>
  <property name="doctype-public" value="-//W3C//DTD XHTML 1.0 Transitional//EN"/>
  <property name="omit-xml-declaration" value="no"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="html"/>
 </output>
 <decimalFormat/>
</package>
<?Σ 74194459?>
