<?xml version="1.0" encoding="utf-8"?>
<package xmlns='http://ns.saxonica.com/xslt/export' xmlns:fn='http://www.w3.org/2005/xpath-functions' xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:vv='http://saxon.sf.net/generated-variable' xmlns:java-type='http://saxon.sf.net/java-type' when='2021-04-11T09:29:38.341464+01:00' id='0' version='30' packageVersion='1' saxonVersion='9.9.1.7' target='JS' targetVersion='1' relocatable='true' implicit='true'>
 <co id='0' binds='1'>
  <template name='Q{}action-output' flags='os' line='3682' module='saxon-xforms.xsl' slots='3'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3683'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <let line='3686' var='Q{}instanceXML' as='element()' slot='1' eval='16'>
     <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
      <check card='1' diag='3|0|XTTE0570|instanceXML'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
        <check card='1' diag='0|0||ixsl:call'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
        <str val='getInstance'/>
        <arrayBlock>
         <treat line='3685' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|instance-id'>
          <check card='1' diag='3|0|XTTE0570|instance-id'>
           <cvUntyped to='xs:string' diag='3|0|XTTE0570|instance-id'>
            <data>
             <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
              <varRef name='Q{}action-map' slot='0'/>
              <str val='instance-context'/>
             </ifCall>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </arrayBlock>
       </ifCall>
      </check>
     </treat>
     <let line='3688' var='Q{}ref' as='xs:string?' slot='2' eval='7'>
      <choose line='3690'>
       <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
        <varRef name='Q{}action-map' slot='0'/>
        <str val='@value'/>
       </ifCall>
       <treat line='3691' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|ref'>
        <check card='?' diag='3|0|XTTE0570|ref'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|ref'>
          <data>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
            <varRef name='Q{}action-map' slot='0'/>
            <str val='@value'/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <ifCall line='3693' name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
        <varRef name='Q{}action-map' slot='0'/>
        <str val='@ref'/>
       </ifCall>
       <treat line='3694' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|ref'>
        <check card='?' diag='3|0|XTTE0570|ref'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|ref'>
          <data>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
            <varRef name='Q{}action-map' slot='0'/>
            <str val='@ref'/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </choose>
      <choose line='3700'>
       <fn name='exists'>
        <varRef name='Q{}ref' slot='2'/>
       </fn>
       <evaluate line='3701' as='xs:string' dxns=''>
        <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='0' eval='16'>
         <check card='1' diag='0|0||xforms:impose'>
          <varRef name='Q{}ref' slot='2'/>
         </check>
        </ufCall>
        <varRef role='cxt' name='Q{}instanceXML' slot='1'/>
        <varRef role='nsCxt' name='Q{}instanceXML' slot='1'/>
        <str role='sa' val='no'/>
        <map role='options' size='0'/>
        <map role='wp' size='0'/>
       </evaluate>
      </choose>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='2' binds='3 1 1 1 4 5 1'>
  <template name='Q{}action-insert' flags='os' line='3452' module='saxon-xforms.xsl' slots='14'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3453'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <let line='3455' var='Q{}instance-context' as='xs:string' slot='1' eval='16'>
     <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|instance-context'>
      <check card='1' diag='3|0|XTTE0570|instance-context'>
       <cvUntyped to='xs:string' diag='3|0|XTTE0570|instance-context'>
        <data>
         <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
          <varRef name='Q{}action-map' slot='0'/>
          <str val='instance-context'/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line='3457' var='Q{}ref' as='item()*' slot='2' eval='3'>
      <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
       <varRef name='Q{}action-map' slot='0'/>
       <str val='@ref'/>
      </ifCall>
      <let line='3458' var='Q{}at' as='xs:string?' slot='3' eval='7'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|at'>
        <check card='?' diag='3|0|XTTE0570|at'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|at'>
          <data>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
            <varRef name='Q{}action-map' slot='0'/>
            <str val='@at'/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line='3459' var='Q{}position' as='xs:string?' slot='4' eval='7'>
        <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|position'>
         <check card='?' diag='3|0|XTTE0570|position'>
          <cvUntyped to='xs:string' diag='3|0|XTTE0570|position'>
           <data>
            <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
             <varRef name='Q{}action-map' slot='0'/>
             <str val='@position'/>
            </ifCall>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line='3460' var='Q{}origin-ref' as='xs:string?' slot='5' eval='7'>
         <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|origin-ref'>
          <check card='?' diag='3|0|XTTE0570|origin-ref'>
           <cvUntyped to='xs:string' diag='3|0|XTTE0570|origin-ref'>
            <data>
             <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
              <varRef name='Q{}action-map' slot='0'/>
              <str val='@origin'/>
             </ifCall>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line='3474' var='Q{}instanceXML2' as='element()' slot='6' eval='16'>
          <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML2'>
           <check card='1' diag='3|0|XTTE0570|instanceXML2'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
             <check card='1' diag='0|0||ixsl:call'>
              <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
             </check>
             <str val='getInstance'/>
             <arrayBlock>
              <varRef name='Q{}instance-context' slot='1'/>
             </arrayBlock>
            </ifCall>
           </check>
          </treat>
          <let line='3485' var='Q{}instanceXML-origin' as='element()' slot='7' eval='16'>
           <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML-origin'>
            <check card='1' diag='3|0|XTTE0570|instanceXML-origin'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='getInstance'/>
              <arrayBlock>
               <ufCall line='3484' name='Q{http://www.w3.org/2002/xforms}getInstanceId' tailCall='false' bSlot='0' eval='16'>
                <check card='1' diag='0|0||xforms:getInstanceId'>
                 <varRef name='Q{}origin-ref' slot='5'/>
                </check>
               </ufCall>
              </arrayBlock>
             </ifCall>
            </check>
           </treat>
           <let line='3487' var='Q{}origin-node' as='node()?' slot='8' eval='7'>
            <treat line='3488' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|origin-node'>
             <check card='?' diag='3|0|XTTE0570|origin-node'>
              <evaluate dxns=''>
               <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='16'>
                <check card='1' diag='0|0||xforms:impose'>
                 <varRef name='Q{}origin-ref' slot='5'/>
                </check>
               </ufCall>
               <varRef role='cxt' name='Q{}instanceXML-origin' slot='7'/>
               <varRef role='nsCxt' name='Q{}instanceXML-origin' slot='7'/>
               <str role='sa' val='no'/>
               <map role='options' size='0'/>
               <map role='wp' size='0'/>
              </evaluate>
             </check>
            </treat>
            <let line='3491' var='Q{}insert-node-location' as='node()?' slot='9' eval='7'>
             <treat line='3492' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|insert-node-location'>
              <check card='?' diag='3|0|XTTE0570|insert-node-location'>
               <evaluate dxns=''>
                <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='2' eval='16'>
                 <check card='1' diag='0|0||xforms:impose'>
                  <choose line='3472'>
                   <and op='and'>
                    <fn name='exists'>
                     <varRef name='Q{}ref' slot='2'/>
                    </fn>
                    <gc op='!=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                     <data>
                      <varRef name='Q{}ref' slot='2'/>
                     </data>
                     <str val=''/>
                    </gc>
                   </and>
                   <choose>
                    <fn name='exists'>
                     <varRef name='Q{}at' slot='3'/>
                    </fn>
                    <fn name='concat'>
                     <atomSing card='?' diag='0|0||fn:concat'>
                      <varRef name='Q{}ref' slot='2'/>
                     </atomSing>
                     <str val='['/>
                     <varRef name='Q{}at' slot='3'/>
                     <str val=']'/>
                    </fn>
                    <true/>
                    <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|ref-qualified'>
                     <check card='?' diag='3|0|XTTE0570|ref-qualified'>
                      <cvUntyped to='xs:string' diag='3|0|XTTE0570|ref-qualified'>
                       <data>
                        <varRef name='Q{}ref' slot='2'/>
                       </data>
                      </cvUntyped>
                     </check>
                    </treat>
                   </choose>
                  </choose>
                 </check>
                </ufCall>
                <varRef role='cxt' name='Q{}instanceXML2' slot='6'/>
                <varRef role='nsCxt' name='Q{}instanceXML2' slot='6'/>
                <str role='sa' val='no'/>
                <map role='options' size='0'/>
                <map role='wp' size='0'/>
               </evaluate>
              </check>
             </treat>
             <let line='3495' var='Q{}context-node' as='node()' slot='10' eval='16'>
              <treat line='3496' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|context-node'>
               <check card='1' diag='3|0|XTTE0570|context-node'>
                <evaluate dxns=''>
                 <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='3' eval='16'>
                  <treat line='3461' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|context'>
                   <check line='3496' card='1' diag='0|0||xforms:impose'>
                    <check line='3461' card='?' diag='3|0|XTTE0570|context'>
                     <cvUntyped to='xs:string' diag='3|0|XTTE0570|context'>
                      <data>
                       <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                        <varRef name='Q{}action-map' slot='0'/>
                        <str val='@context'/>
                       </ifCall>
                      </data>
                     </cvUntyped>
                    </check>
                   </check>
                  </treat>
                 </ufCall>
                 <varRef role='cxt' name='Q{}instanceXML2' slot='6'/>
                 <varRef role='nsCxt' name='Q{}instanceXML2' slot='6'/>
                 <str role='sa' val='no'/>
                 <map role='options' size='0'/>
                 <map role='wp' size='0'/>
                </evaluate>
               </check>
              </treat>
              <let line='3513' var='Q{}instance-with-insert' as='element()' slot='11' eval='16'>
               <treat line='3514' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instance-with-insert'>
                <check card='1' diag='3|0|XTTE0570|instance-with-insert'>
                 <applyT mode='Q{}insert-node' bSlot='4'>
                  <varRef role='select' name='Q{}instanceXML2' slot='6'/>
                  <withParam name='Q{}insert-node-location' flags='t' as='node()?'>
                   <choose line='3515'>
                    <fn name='exists'>
                     <varRef name='Q{}insert-node-location' slot='9'/>
                    </fn>
                    <varRef name='Q{}insert-node-location' slot='9'/>
                    <true/>
                    <varRef name='Q{}context-node' slot='10'/>
                   </choose>
                  </withParam>
                  <withParam name='Q{}node-to-insert' flags='t' as='node()?'>
                   <choose line='3502'>
                    <fn name='exists'>
                     <varRef name='Q{}origin-node' slot='8'/>
                    </fn>
                    <copyOf line='3503' flags='vc'>
                     <varRef name='Q{}origin-node' slot='8'/>
                    </copyOf>
                    <true/>
                    <copyOf line='3506' flags='vc'>
                     <varRef name='Q{}insert-node-location' slot='9'/>
                    </copyOf>
                   </choose>
                  </withParam>
                  <withParam name='Q{}position-relative' flags='t' as='xs:string?'>
                   <choose line='3517'>
                    <fn name='exists'>
                     <varRef name='Q{}insert-node-location' slot='9'/>
                    </fn>
                    <varRef name='Q{}position' slot='4'/>
                    <true/>
                    <str val='child'/>
                   </choose>
                  </withParam>
                 </applyT>
                </check>
               </treat>
               <sequence line='3523'>
                <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
                 <check card='1' diag='0|0||ixsl:call'>
                  <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
                 </check>
                 <str val='setInstance'/>
                 <arrayBlock>
                  <varRef name='Q{}instance-context' slot='1'/>
                  <varRef name='Q{}instance-with-insert' slot='11'/>
                 </arrayBlock>
                </ifCall>
                <choose line='3527'>
                 <fn name='matches'>
                  <varRef name='Q{}at' slot='3'/>
                  <str val='index\s*\('/>
                  <str val=''/>
                 </fn>
                 <let line='3528' var='Q{}repeat-id' as='xs:string?' slot='12' eval='7'>
                  <ufCall name='Q{http://www.w3.org/2002/xforms}getRepeatID' tailCall='false' bSlot='5' eval='16'>
                   <check card='1' diag='0|0||xforms:getRepeatID'>
                    <varRef name='Q{}at' slot='3'/>
                   </check>
                  </ufCall>
                  <let line='3529' var='Q{}at-position' as='xs:integer' slot='13' eval='16'>
                   <treat line='3530' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='3|0|XTTE0570|at-position'>
                    <check card='1' diag='3|0|XTTE0570|at-position'>
                     <cvUntyped to='xs:integer' diag='3|0|XTTE0570|at-position'>
                      <data>
                       <evaluate dxns=''>
                        <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='6' eval='16'>
                         <check card='1' diag='0|0||xforms:impose'>
                          <varRef name='Q{}at' slot='3'/>
                         </check>
                        </ufCall>
                        <empty role='cxt'/>
                        <str role='sa' val='no'/>
                        <map role='options' size='0'/>
                        <map role='wp' size='0'/>
                       </evaluate>
                      </data>
                     </cvUntyped>
                    </check>
                   </treat>
                   <choose line='3535'>
                    <fn name='exists'>
                     <varRef name='Q{}repeat-id' slot='12'/>
                    </fn>
                    <choose line='3537'>
                     <vc op='eq' onEmpty='0' comp='CCC'>
                      <varRef name='Q{}position' slot='4'/>
                      <str val='before'/>
                     </vc>
                     <ifCall line='3538' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
                      <check card='1' diag='0|0||ixsl:call'>
                       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
                      </check>
                      <str val='setRepeatIndex'/>
                      <arrayBlock>
                       <varRef name='Q{}repeat-id' slot='12'/>
                       <varRef name='Q{}at-position' slot='13'/>
                      </arrayBlock>
                     </ifCall>
                     <true/>
                     <ifCall line='3541' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
                      <check card='1' diag='0|0||ixsl:call'>
                       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
                      </check>
                      <str val='setRepeatIndex'/>
                      <arrayBlock>
                       <varRef name='Q{}repeat-id' slot='12'/>
                       <arith op='+' calc='i+i'>
                        <varRef name='Q{}at-position' slot='13'/>
                        <int val='1'/>
                       </arith>
                      </arrayBlock>
                     </ifCall>
                    </choose>
                   </choose>
                  </let>
                 </let>
                </choose>
                <choose line='3548'>
                 <vc op='eq' onEmpty='0' comp='CCC'>
                  <treat line='3456' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|handler-status'>
                   <check card='1' diag='3|0|XTTE0570|handler-status'>
                    <cvUntyped to='xs:string' diag='3|0|XTTE0570|handler-status'>
                     <data>
                      <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                       <varRef name='Q{}action-map' slot='0'/>
                       <str val='handler-status'/>
                      </ifCall>
                     </data>
                    </cvUntyped>
                   </check>
                  </treat>
                  <str val='inner'/>
                 </vc>
                 <ifCall line='3549' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
                  <check card='1' diag='0|0||ixsl:call'>
                   <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
                  </check>
                  <str val='setDeferredUpdateFlags'/>
                  <array size='1'>
                   <literal count='4'>
                    <str val='rebuild'/>
                    <str val='recalculate'/>
                    <str val='revalidate'/>
                    <str val='refresh'/>
                   </literal>
                  </array>
                 </ifCall>
                </choose>
               </sequence>
              </let>
             </let>
            </let>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='6' binds='1 7'>
  <template name='Q{}action-delete' flags='os' line='3560' module='saxon-xforms.xsl' slots='8'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3561'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <let line='3563' var='Q{}instance-context' as='xs:string' slot='1' eval='16'>
     <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|instance-context'>
      <check card='1' diag='3|0|XTTE0570|instance-context'>
       <cvUntyped to='xs:string' diag='3|0|XTTE0570|instance-context'>
        <data>
         <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
          <varRef name='Q{}action-map' slot='0'/>
          <str val='instance-context'/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line='3565' var='Q{}ref' as='item()*' slot='2' eval='4'>
      <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
       <varRef name='Q{}action-map' slot='0'/>
       <str val='@ref'/>
      </ifCall>
      <let line='3566' var='Q{}at' as='xs:string?' slot='3' eval='7'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|at'>
        <check card='?' diag='3|0|XTTE0570|at'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|at'>
          <data>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
            <varRef name='Q{}action-map' slot='0'/>
            <str val='@at'/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line='3576' var='Q{}ref-qualified' as='xs:string?' slot='4' eval='7'>
        <choose>
         <fn name='exists'>
          <varRef name='Q{}ref' slot='2'/>
         </fn>
         <choose>
          <fn name='exists'>
           <varRef name='Q{}at' slot='3'/>
          </fn>
          <fn name='concat'>
           <atomSing card='?' diag='0|0||fn:concat'>
            <varRef name='Q{}ref' slot='2'/>
           </atomSing>
           <str val='['/>
           <varRef name='Q{}at' slot='3'/>
           <str val=']'/>
          </fn>
          <true/>
          <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|ref-qualified'>
           <check card='?' diag='3|0|XTTE0570|ref-qualified'>
            <cvUntyped to='xs:string' diag='3|0|XTTE0570|ref-qualified'>
             <data>
              <varRef name='Q{}ref' slot='2'/>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </choose>
        </choose>
        <let line='3578' var='Q{}instanceXML2' as='element()' slot='5' eval='16'>
         <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML2'>
          <check card='1' diag='3|0|XTTE0570|instanceXML2'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
            <check card='1' diag='0|0||ixsl:call'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
            </check>
            <str val='getInstance'/>
            <arrayBlock>
             <varRef name='Q{}instance-context' slot='1'/>
            </arrayBlock>
           </ifCall>
          </check>
         </treat>
         <let line='3580' var='Q{}delete-node' as='node()*' slot='6' eval='8'>
          <choose line='3582'>
           <and op='and'>
            <fn name='exists'>
             <varRef name='Q{}ref-qualified' slot='4'/>
            </fn>
            <vc op='ne' onEmpty='1' comp='CCC'>
             <varRef name='Q{}ref-qualified' slot='4'/>
             <str val=''/>
            </vc>
           </and>
           <treat line='3583' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|delete-node'>
            <evaluate dxns=''>
             <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='0' eval='16'>
              <check card='1' diag='0|0||xforms:impose'>
               <varRef name='Q{}ref-qualified' slot='4'/>
              </check>
             </ufCall>
             <varRef role='cxt' name='Q{}instanceXML2' slot='5'/>
             <varRef role='nsCxt' name='Q{}instanceXML2' slot='5'/>
             <str role='sa' val='no'/>
             <map role='options' size='0'/>
             <map role='wp' size='0'/>
            </evaluate>
           </treat>
          </choose>
          <let line='3588' var='Q{}instance-with-delete' as='element()' slot='7' eval='16'>
           <treat line='3589' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instance-with-delete'>
            <check card='1' diag='3|0|XTTE0570|instance-with-delete'>
             <applyT mode='Q{}delete-node' bSlot='1'>
              <varRef role='select' name='Q{}instanceXML2' slot='5'/>
              <withParam name='Q{}delete-node' flags='t' as='node()*'>
               <varRef line='3590' name='Q{}delete-node' slot='6'/>
              </withParam>
             </applyT>
            </check>
           </treat>
           <sequence line='3596'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
             <check card='1' diag='0|0||ixsl:call'>
              <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
             </check>
             <str val='setInstance'/>
             <arrayBlock>
              <varRef name='Q{}instance-context' slot='1'/>
              <varRef name='Q{}instance-with-delete' slot='7'/>
             </arrayBlock>
            </ifCall>
            <choose line='3624'>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <treat line='3564' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|handler-status'>
               <check card='1' diag='3|0|XTTE0570|handler-status'>
                <cvUntyped to='xs:string' diag='3|0|XTTE0570|handler-status'>
                 <data>
                  <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                   <varRef name='Q{}action-map' slot='0'/>
                   <str val='handler-status'/>
                  </ifCall>
                 </data>
                </cvUntyped>
               </check>
              </treat>
              <str val='inner'/>
             </vc>
             <ifCall line='3625' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='setDeferredUpdateFlags'/>
              <array size='1'>
               <literal count='4'>
                <str val='rebuild'/>
                <str val='recalculate'/>
                <str val='revalidate'/>
                <str val='refresh'/>
               </literal>
              </array>
             </ifCall>
            </choose>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='8' binds=''>
  <globalVariable name='Q{}global-default-model-id' type='xs:string' line='87' module='saxon-xforms.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='saxon-forms-default-model'/>
  </globalVariable>
 </co>
 <co id='9' binds='10'>
  <template name='Q{}action-send' flags='os' line='3748' module='saxon-xforms.xsl' slots='1'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3749'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <callT line='3755' name='Q{}xforms-submit' bSlot='0' flags='t'>
     <withParam name='Q{}submission' flags='c' as='xs:string'>
      <treat line='3753' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|submission'>
       <check card='1' diag='3|0|XTTE0570|submission'>
        <cvUntyped to='xs:string' diag='3|0|XTTE0570|submission'>
         <data>
          <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
           <varRef name='Q{}action-map' slot='0'/>
           <str val='@submission'/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id='11' binds=''>
  <template name='Q{}action-text' flags='os' line='3715' module='saxon-xforms.xsl' slots='1'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3716'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <ifCall line='3717' name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
     <varRef name='Q{}action-map' slot='0'/>
     <str val='@value'/>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id='12' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}usesIndexFunction' line='2107' module='saxon-xforms.xsl' eval='8' flags='pU' as='xs:boolean' slots='1'>
   <arg name='Q{}this' as='element()'/>
   <fn role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2143' name='exists'>
    <sequence line='2118'>
     <analyzeString>
      <cvUntyped role='select' to='xs:string'>
       <data>
        <slash simple='1'>
         <varRef name='Q{}this' slot='0'/>
         <axis name='attribute' nodeTest='attribute(Q{}ref)' jsTest='return item.name===&#39;ref&#39;'/>
        </slash>
       </data>
      </cvUntyped>
      <str role='regex' val='\i\c*\('/>
      <str role='flags' val=''/>
      <choose role='matching' line='2121'>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <fn name='substring-before'>
         <dot type='xs:string'/>
         <str val='('/>
        </fn>
        <str val='index'/>
       </vc>
       <str val='i'/>
      </choose>
      <empty role='nonMatching'/>
     </analyzeString>
     <analyzeString line='2130'>
      <cvUntyped role='select' to='xs:string'>
       <data>
        <slash simple='1'>
         <varRef name='Q{}this' slot='0'/>
         <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
        </slash>
       </data>
      </cvUntyped>
      <str role='regex' val='\i\c*\('/>
      <str role='flags' val=''/>
      <choose role='matching' line='2133'>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <fn name='substring-before'>
         <dot type='xs:string'/>
         <str val='('/>
        </fn>
        <str val='index'/>
       </vc>
       <str val='i'/>
      </choose>
      <empty role='nonMatching'/>
     </analyzeString>
    </sequence>
   </fn>
  </function>
 </co>
 <co id='13' binds='14'>
  <template name='Q{}action-recalculate' flags='os' line='3795' module='saxon-xforms.xsl' slots='0'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3796'>
    <message>
     <valueOf role='select'>
      <str val='[action-recalculate] START'/>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <callT line='3798' name='Q{}xforms-recalculate' bSlot='0'/>
    <ifCall line='3799' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
     <check card='1' diag='0|0||ixsl:call'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
     </check>
     <str val='clearDeferredUpdateFlag'/>
     <array size='1'>
      <str val='recalculate'/>
     </array>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id='5' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}getRepeatID' line='704' module='saxon-xforms.xsl' eval='7' flags='pU' as='xs:string?' slots='1'>
   <arg name='Q{}string-to-parse' as='xs:string'/>
   <treat role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='707' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='5|0|XTTE0780|xforms:getRepeatID#1'>
    <check card='?' diag='5|0|XTTE0780|xforms:getRepeatID#1'>
     <cvUntyped to='xs:string' diag='5|0|XTTE0780|xforms:getRepeatID#1'>
      <data>
       <analyzeString>
        <varRef role='select' name='Q{}string-to-parse' slot='0'/>
        <str role='regex' val='^.*index\s*\(\s*&#39;([^&#39;]+)&#39;\s*\).*$'/>
        <str role='flags' val=''/>
        <fn role='matching' line='709' name='regex-group'>
         <int val='1'/>
        </fn>
        <message role='nonMatching' line='712'>
         <sequence role='select'>
          <valueOf>
           <str val='[xforms:getRepeatID] No repeat identifiable from value &#39;'/>
          </valueOf>
          <valueOf>
           <varRef name='Q{}string-to-parse' slot='0'/>
          </valueOf>
          <valueOf flags='S'>
           <str val='&#39;'/>
          </valueOf>
         </sequence>
         <str role='terminate' val='no'/>
         <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
        </message>
       </analyzeString>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </function>
 </co>
 <co id='15' binds=''>
  <template name='Q{}action-reset' flags='os' line='3820' module='saxon-xforms.xsl' slots='1'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3821'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <message line='3823'>
     <valueOf role='select'>
      <str val='[action-reset] Reset triggered!'/>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <ifCall line='3825' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
     <check card='1' diag='0|0||ixsl:call'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
     </check>
     <str val='clearDeferredUpdateFlags'/>
     <array size='0'/>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id='16' binds='17'>
  <template name='Q{}xforms-value-changed' flags='os' line='2983' module='saxon-xforms.xsl' slots='1'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2984'>
    <param name='Q{}when-value-changed' slot='0' flags='t' as='map(*)*'>
     <empty role='select'/>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|when-value-changed'>
      <supplied slot='0'/>
     </treat>
    </param>
    <forEach line='2986'>
     <varRef name='Q{}when-value-changed' slot='0'/>
     <callT line='2989' name='Q{}applyActions' bSlot='0'>
      <withParam name='Q{}action-map' flags='t' as='item()'>
       <dot line='2987' type='map(*)'/>
      </withParam>
     </callT>
    </forEach>
   </sequence>
  </template>
 </co>
 <co id='18' binds=''>
  <template name='Q{}xforms-binding-exception' flags='os' line='3248' module='saxon-xforms.xsl' slots='1'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3249'>
    <param name='Q{}message' slot='0' flags='r' as='xs:string'>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|message'>
      <check card='1' diag='8|0|XTTE0590|message'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|message'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <ifCall line='3250' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
     <check card='1' diag='0|0||ixsl:call'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
     </check>
     <str val='alert'/>
     <arrayBlock>
      <fn name='concat'>
       <str val='[xforms-binding-exception] '/>
       <varRef name='Q{}message' slot='0'/>
      </fn>
     </arrayBlock>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id='19' binds='20'>
  <template name='Q{}action-refresh' flags='os' line='3807' module='saxon-xforms.xsl' slots='0'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3808'>
    <message>
     <valueOf role='select'>
      <str val='[action-refresh] START'/>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <callT line='3810' name='Q{}xforms-refresh' bSlot='0'/>
    <ifCall line='3811' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
     <check card='1' diag='0|0||ixsl:call'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
     </check>
     <str val='clearDeferredUpdateFlag'/>
     <array size='1'>
      <str val='refresh'/>
     </array>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id='21' binds='17 22'>
  <template name='Q{}action-message' flags='os' line='3638' module='saxon-xforms.xsl' slots='4'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3639'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <let line='3646' var='Q{}message-components' as='xs:string*' slot='1' eval='8'>
     <treat line='3649' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|message-components'>
      <cvUntyped to='xs:string' diag='3|0|XTTE0570|message-components'>
       <data>
        <forEach>
         <ifCall line='3641' name='Q{http://www.w3.org/2005/xpath-functions/array}flatten' type='item()*'>
          <treat as='array(map(*))' jsTest='function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isArray(item) &amp;&amp; SaxonJS.U.ForArray(item.value).every(function(seq){return c(seq.length) &amp;&amp; SaxonJS.U.ForArray(seq).every(v)});' diag='3|0|XTTE0570|nested-actions-array'>
           <check card='?' diag='3|0|XTTE0570|nested-actions-array'>
            <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
             <varRef name='Q{}action-map' slot='0'/>
             <str val='nested-actions'/>
            </ifCall>
           </check>
          </treat>
         </ifCall>
         <callT line='3650' name='Q{}applyActions' bSlot='0'>
          <withParam name='Q{}action-map' flags='t' as='item()'>
           <dot line='3651'/>
          </withParam>
         </callT>
        </forEach>
       </data>
      </cvUntyped>
     </treat>
     <let line='3656' var='Q{}message-value' as='xs:string' slot='2' eval='8'>
      <fn name='string-join'>
       <varRef name='Q{}message-components' slot='1'/>
      </fn>
      <let line='3659' var='Q{}message-level' as='xs:string' slot='3' eval='16'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|message-level'>
        <check card='1' diag='3|0|XTTE0570|message-level'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|message-level'>
          <data>
           <first>
            <sequence>
             <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
              <varRef name='Q{}action-map' slot='0'/>
              <str val='@level'/>
             </ifCall>
             <str val='modal'/>
            </sequence>
           </first>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <choose line='3665'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <varRef name='Q{}message-level' slot='3'/>
         <str val='ephemeral'/>
        </vc>
        <callT line='3666' name='Q{}logToPage' bSlot='1' flags='t'>
         <withParam name='Q{}message' flags='c' as='xs:string'>
          <varRef line='3667' name='Q{}message-value' slot='2'/>
         </withParam>
        </callT>
       </choose>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='23' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}resolveXPathStrings' line='769' module='saxon-xforms.xsl' eval='16' flags='pU' as='xs:string' slots='2'>
   <arg name='Q{}base' as='xs:string'/>
   <arg name='Q{}relative' as='xs:string'/>
   <choose role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='776'>
    <fn name='starts-with'>
     <varRef name='Q{}relative' slot='1'/>
     <str val='/'/>
    </fn>
    <varRef line='777' name='Q{}relative' slot='1'/>
    <fn line='779' name='starts-with'>
     <varRef name='Q{}relative' slot='1'/>
     <str val='instance('/>
    </fn>
    <varRef line='780' name='Q{}relative' slot='1'/>
    <fn line='782' name='not'>
     <varRef name='Q{}base' slot='0'/>
    </fn>
    <varRef line='783' name='Q{}relative' slot='1'/>
    <or line='785' op='or'>
     <fn name='not'>
      <varRef name='Q{}relative' slot='1'/>
     </fn>
     <vc op='eq' onEmpty='0' comp='CCC'>
      <varRef name='Q{}relative' slot='1'/>
      <str val='.'/>
     </vc>
    </or>
    <varRef line='786' name='Q{}base' slot='0'/>
    <true/>
    <fn line='789' name='concat'>
     <varRef name='Q{}base' slot='0'/>
     <str val='/'/>
     <varRef name='Q{}relative' slot='1'/>
    </fn>
   </choose>
  </function>
 </co>
 <co id='24' vis='PUBLIC' binds=''>
  <function name='Q{http://saxonica.com/ns/forms-local}current-date' line='119' module='xforms-function-library.xsl' eval='16' flags='pU' as='xs:string' slots='0'>
   <treat role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ map=~' line='120' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|today'>
    <check card='1' diag='3|0|XTTE0570|today'>
     <cvUntyped to='xs:string' diag='3|0|XTTE0570|today'>
      <data>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
        <check card='1' diag='0|0||ixsl:call'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
        <str val='getCurrentDate'/>
        <array size='0'/>
       </ifCall>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </function>
 </co>
 <co id='25' vis='PUBLIC' binds='26'>
  <function name='Q{http://www.w3.org/2002/xforms}resolve-index' line='73' module='xforms-function-library.xsl' eval='8' flags='pU' as='xs:string' slots='2'>
   <arg name='Q{}input' as='xs:string'/>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ map=~' line='75' var='Q{}parts' as='xs:string*' slot='1' eval='8'>
    <analyzeString line='76'>
     <varRef role='select' name='Q{}input' slot='0'/>
     <str role='regex' val='index\s*\(\s*&#39;([^&#39;]+)&#39;\s*\)'/>
     <str role='flags' val=''/>
     <cast role='matching' line='79' as='xs:string' emptiable='0'>
      <ufCall name='Q{http://www.w3.org/2002/xforms}index' tailCall='false' bSlot='0' eval='16'>
       <fn name='regex-group'>
        <int val='1'/>
       </fn>
      </ufCall>
     </cast>
     <dot role='nonMatching' line='82' type='xs:string'/>
    </analyzeString>
    <fn line='88' name='string-join'>
     <varRef name='Q{}parts' slot='1'/>
    </fn>
   </let>
  </function>
 </co>
 <co id='27' binds='28 1'>
  <template name='Q{}action-setindex' flags='os' line='3768' module='saxon-xforms.xsl' slots='2'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3769'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <callT line='3772' name='Q{}outermost-action-handler' bSlot='0'/>
    <let line='3778' var='Q{}new-index' as='xs:integer' slot='1' eval='16'>
     <treat line='3779' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='3|0|XTTE0570|new-index'>
      <check card='1' diag='3|0|XTTE0570|new-index'>
       <cvUntyped to='xs:integer' diag='3|0|XTTE0570|new-index'>
        <data>
         <evaluate dxns=''>
          <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='16'>
           <treat line='3775' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|new-index-ref'>
            <check card='1' diag='3|0|XTTE0570|new-index-ref'>
             <cvUntyped to='xs:string' diag='3|0|XTTE0570|new-index-ref'>
              <data>
               <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                <varRef name='Q{}action-map' slot='0'/>
                <str val='@index'/>
               </ifCall>
              </data>
             </cvUntyped>
            </check>
           </treat>
          </ufCall>
          <empty role='cxt'/>
          <str role='sa' val='no'/>
          <map role='options' size='0'/>
          <map role='wp' size='0'/>
         </evaluate>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <ifCall line='3784' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
      <check card='1' diag='0|0||ixsl:call'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
      </check>
      <str val='setRepeatIndex'/>
      <arrayBlock>
       <treat line='3774' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|repeatID'>
        <check card='1' diag='3|0|XTTE0570|repeatID'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|repeatID'>
          <data>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
            <varRef name='Q{}action-map' slot='0'/>
            <str val='@repeat'/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <varRef name='Q{}new-index' slot='1'/>
      </arrayBlock>
     </ifCall>
    </let>
   </sequence>
  </template>
 </co>
 <co id='29' binds='28 30'>
  <template name='Q{}action-setfocus' flags='os' line='3727' module='saxon-xforms.xsl' slots='1'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3728'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <callT line='3731' name='Q{}outermost-action-handler' bSlot='0'/>
    <callT line='3735' name='Q{}xforms-focus' bSlot='1' flags='t'>
     <withParam name='Q{}control' flags='c' as='xs:string'>
      <treat line='3733' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|control'>
       <check card='1' diag='3|0|XTTE0570|control'>
        <cvUntyped to='xs:string' diag='3|0|XTTE0570|control'>
         <data>
          <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
           <varRef name='Q{}action-map' slot='0'/>
           <str val='@control'/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id='31' binds='1 1 32'>
  <template name='Q{}action-setvalue' flags='os' line='3316' module='saxon-xforms.xsl' slots='8'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3317'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <message line='3319'>
     <valueOf role='select'>
      <str val='[action-setvalue] START'/>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <let line='3321' var='Q{}instance-context' as='xs:string' slot='1' eval='16'>
     <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|instance-context'>
      <check card='1' diag='3|0|XTTE0570|instance-context'>
       <cvUntyped to='xs:string' diag='3|0|XTTE0570|instance-context'>
        <data>
         <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
          <varRef name='Q{}action-map' slot='0'/>
          <str val='instance-context'/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line='3324' var='Q{}refz' as='item()*' slot='2' eval='4'>
      <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
       <varRef name='Q{}action-map' slot='0'/>
       <str val='@ref'/>
      </ifCall>
      <let line='3327' var='Q{}instanceXML2' as='element()' slot='3' eval='16'>
       <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML2'>
        <check card='1' diag='3|0|XTTE0570|instanceXML2'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='getInstance'/>
          <arrayBlock>
           <varRef name='Q{}instance-context' slot='1'/>
          </arrayBlock>
         </ifCall>
        </check>
       </treat>
       <sequence line='3329'>
        <message>
         <sequence role='select'>
          <valueOf>
           <str val='[action-setvalue] Applying action &#39;'/>
          </valueOf>
          <fn name='serialize'>
           <varRef name='Q{}action-map' slot='0'/>
          </fn>
          <valueOf flags='S'>
           <str val='&#39;'/>
          </valueOf>
         </sequence>
         <str role='terminate' val='no'/>
         <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
        </message>
        <choose line='3332'>
         <fn name='exists'>
          <varRef name='Q{}refz' slot='2'/>
         </fn>
         <let line='3333' var='Q{}updated-node' as='node()' slot='4' eval='8'>
          <evaluate line='3334' as='node()' dxns=''>
           <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='0' eval='16'>
            <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||xforms:impose'>
             <check card='1' diag='0|0||xforms:impose'>
              <cvUntyped to='xs:string'>
               <data>
                <varRef name='Q{}refz' slot='2'/>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </ufCall>
           <varRef role='cxt' name='Q{}instanceXML2' slot='3'/>
           <varRef role='nsCxt' name='Q{}instanceXML2' slot='3'/>
           <str role='sa' val='no'/>
           <map role='options' size='0'/>
           <map role='wp' size='0'/>
          </evaluate>
          <let line='3337' var='Q{}updated-value' as='xs:string' slot='5' eval='16'>
           <choose line='3339'>
            <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}contains' type='xs:boolean'>
             <varRef name='Q{}action-map' slot='0'/>
             <str val='@value'/>
            </ifCall>
            <let line='3340' var='Q{}updated-item' as='item()' slot='6' eval='16'>
             <check line='3341' card='1' diag='3|0|XTTE0570|updated-item'>
              <evaluate dxns=''>
               <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='16'>
                <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||xforms:impose'>
                 <check card='1' diag='0|0||xforms:impose'>
                  <cvUntyped to='xs:string'>
                   <data>
                    <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                     <varRef name='Q{}action-map' slot='0'/>
                     <str val='@value'/>
                    </ifCall>
                   </data>
                  </cvUntyped>
                 </check>
                </treat>
               </ufCall>
               <varRef role='cxt' name='Q{}updated-node' slot='4'/>
               <varRef role='nsCxt' name='Q{}updated-node' slot='4'/>
               <str role='sa' val='no'/>
               <map role='options' size='0'/>
               <map role='wp' size='0'/>
              </evaluate>
             </check>
             <choose line='3352'>
              <vc op='eq' onEmpty='0' comp='CCC'>
               <cast as='xs:string' emptiable='0'>
                <atomSing diag='2|0||cast as'>
                 <varRef name='Q{}updated-item' slot='6'/>
                </atomSing>
               </cast>
               <str val='true'/>
              </vc>
              <str val='true'/>
              <and line='3356' op='and'>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='0'>
                 <atomSing diag='2|0||cast as'>
                  <varRef name='Q{}updated-item' slot='6'/>
                 </atomSing>
                </cast>
                <str val='false'/>
               </vc>
               <fn name='not'>
                <varRef name='Q{}updated-item' slot='6'/>
               </fn>
              </and>
              <str val=''/>
              <true/>
              <cast line='3360' as='xs:string' emptiable='0'>
               <atomSing diag='2|0||cast as'>
                <varRef name='Q{}updated-item' slot='6'/>
               </atomSing>
              </cast>
             </choose>
            </let>
            <ifCall line='3364' name='Q{http://www.w3.org/2005/xpath-functions/map}contains' type='xs:boolean'>
             <treat as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='0|0||map:contains'>
              <dot flags='a'/>
             </treat>
             <str val='value'/>
            </ifCall>
            <treat line='3365' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|updated-value'>
             <check card='1' diag='3|0|XTTE0570|updated-value'>
              <cvUntyped to='xs:string' diag='3|0|XTTE0570|updated-value'>
               <data>
                <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                 <varRef name='Q{}action-map' slot='0'/>
                 <str val='value'/>
                </ifCall>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <true/>
            <str val=''/>
           </choose>
           <let line='3375' var='Q{}updatedInstanceXML' as='element()' slot='7' eval='16'>
            <treat line='3376' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|updatedInstanceXML'>
             <check card='1' diag='3|0|XTTE0570|updatedInstanceXML'>
              <applyT mode='Q{}recalculate' bSlot='2'>
               <varRef role='select' name='Q{}instanceXML2' slot='3'/>
               <withParam name='Q{}updated-nodes' flags='t' as='node()'>
                <varRef line='3377' name='Q{}updated-node' slot='4'/>
               </withParam>
               <withParam name='Q{}updated-value' flags='t' as='xs:string'>
                <varRef line='3378' name='Q{}updated-value' slot='5'/>
               </withParam>
              </applyT>
             </check>
            </treat>
            <sequence line='3384'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='setInstance'/>
              <arrayBlock>
               <varRef name='Q{}instance-context' slot='1'/>
               <varRef name='Q{}updatedInstanceXML' slot='7'/>
              </arrayBlock>
             </ifCall>
             <ifCall line='3386' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='setDeferredUpdateFlags'/>
              <array size='1'>
               <literal count='3'>
                <str val='recalculate'/>
                <str val='revalidate'/>
                <str val='refresh'/>
               </literal>
              </array>
             </ifCall>
            </sequence>
           </let>
          </let>
         </let>
        </choose>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='17' binds='1 1 1 1 31 2 6 27 29 33 14 19 15 9 21 0 11 17 1 17 28'>
  <template name='Q{}applyActions' flags='os' line='2437' module='saxon-xforms.xsl' slots='15'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2438'>
    <param name='Q{}action-map' slot='0' flags='tr' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|action-map'>
      <check card='1' diag='8|0|XTTE0590|action-map'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <let line='2442' var='Q{}ref' as='xs:string?' slot='1' eval='7'>
     <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|ref'>
      <check card='?' diag='3|0|XTTE0570|ref'>
       <cvUntyped to='xs:string' diag='3|0|XTTE0570|ref'>
        <data>
         <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
          <varRef name='Q{}action-map' slot='0'/>
          <str val='@ref'/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line='2443' var='Q{}at' as='xs:string?' slot='2' eval='7'>
      <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|at'>
       <check card='?' diag='3|0|XTTE0570|at'>
        <cvUntyped to='xs:string' diag='3|0|XTTE0570|at'>
         <data>
          <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
           <varRef name='Q{}action-map' slot='0'/>
           <str val='@at'/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line='2445' var='Q{}context' as='xs:string?' slot='3' eval='7'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|context'>
        <check card='?' diag='3|0|XTTE0570|context'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|context'>
          <data>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
            <varRef name='Q{}action-map' slot='0'/>
            <str val='@context'/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line='2456' var='Q{}ref-qualified' as='xs:string?' slot='4' eval='7'>
        <choose>
         <and op='and'>
          <fn name='exists'>
           <varRef name='Q{}ref' slot='1'/>
          </fn>
          <varRef name='Q{}ref' slot='1'/>
         </and>
         <choose>
          <fn name='exists'>
           <varRef name='Q{}at' slot='2'/>
          </fn>
          <fn name='concat'>
           <varRef name='Q{}ref' slot='1'/>
           <str val='['/>
           <varRef name='Q{}at' slot='2'/>
           <str val=']'/>
          </fn>
          <true/>
          <varRef name='Q{}ref' slot='1'/>
         </choose>
        </choose>
        <let line='2458' var='Q{}instanceXML2' as='element()?' slot='5' eval='7'>
         <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML2'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='getInstance'/>
           <arrayBlock>
            <treat line='2440' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|instance-context'>
             <check card='1' diag='3|0|XTTE0570|instance-context'>
              <cvUntyped to='xs:string' diag='3|0|XTTE0570|instance-context'>
               <data>
                <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                 <varRef name='Q{}action-map' slot='0'/>
                 <str val='instance-context'/>
                </ifCall>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </arrayBlock>
          </ifCall>
         </treat>
         <let line='2462' var='Q{}ref-node' as='node()*' slot='6' eval='8'>
          <choose line='2464'>
           <and op='and'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}ref-qualified' slot='4'/>
             </fn>
             <vc op='ne' onEmpty='1' comp='CCC'>
              <varRef name='Q{}ref-qualified' slot='4'/>
              <str val=''/>
             </vc>
            </and>
            <fn name='exists'>
             <varRef name='Q{}instanceXML2' slot='5'/>
            </fn>
           </and>
           <treat line='2465' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|ref-node'>
            <evaluate dxns=''>
             <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='0' eval='16'>
              <check card='1' diag='0|0||xforms:impose'>
               <varRef name='Q{}ref-qualified' slot='4'/>
              </check>
             </ufCall>
             <varRef role='cxt' name='Q{}instanceXML2' slot='5'/>
             <check role='nsCxt' card='1' diag='4|0|XTTE3170|xsl:evaluate/namespace-context'>
              <varRef name='Q{}instanceXML2' slot='5'/>
             </check>
             <str role='sa' val='no'/>
             <map role='options' size='0'/>
             <map role='wp' size='0'/>
            </evaluate>
           </treat>
          </choose>
          <let line='2470' var='Q{}context-node' as='node()?' slot='7' eval='7'>
           <choose line='2472'>
            <and op='and'>
             <and op='and'>
              <fn name='exists'>
               <varRef name='Q{}context' slot='3'/>
              </fn>
              <vc op='ne' onEmpty='1' comp='CCC'>
               <varRef name='Q{}context' slot='3'/>
               <str val=''/>
              </vc>
             </and>
             <fn name='exists'>
              <varRef name='Q{}instanceXML2' slot='5'/>
             </fn>
            </and>
            <treat line='2473' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|context-node'>
             <check card='?' diag='3|0|XTTE0570|context-node'>
              <evaluate dxns=''>
               <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='16'>
                <check card='1' diag='0|0||xforms:impose'>
                 <varRef name='Q{}context' slot='3'/>
                </check>
               </ufCall>
               <varRef role='cxt' name='Q{}instanceXML2' slot='5'/>
               <check role='nsCxt' card='1' diag='4|0|XTTE3170|xsl:evaluate/namespace-context'>
                <varRef name='Q{}instanceXML2' slot='5'/>
               </check>
               <str role='sa' val='no'/>
               <map role='options' size='0'/>
               <map role='wp' size='0'/>
              </evaluate>
             </check>
            </treat>
           </choose>
           <let line='2478' var='Q{}context' as='node()?' slot='8' eval='7'>
            <first>
             <sequence>
              <varRef name='Q{}context-node' slot='7'/>
              <varRef name='Q{}ref-node' slot='6'/>
              <varRef name='Q{}instanceXML2' slot='5'/>
             </sequence>
            </first>
            <let line='2484' var='Q{}ifVar' as='xs:string?' slot='9' eval='7'>
             <choose line='731'>
              <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}contains' type='xs:boolean'>
               <varRef line='2484' name='Q{}action-map' slot='0'/>
               <str val='@if'/>
              </ifCall>
              <treat line='732' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='5|0|XTTE0780|xforms:getIfStatement#1'>
               <check card='?' diag='5|0|XTTE0780|xforms:getIfStatement#1'>
                <cvUntyped to='xs:string' diag='5|0|XTTE0780|xforms:getIfStatement#1'>
                 <data>
                  <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                   <varRef line='2484' name='Q{}action-map' slot='0'/>
                   <str val='@if'/>
                  </ifCall>
                 </data>
                </cvUntyped>
               </check>
              </treat>
             </choose>
             <let line='2485' var='Q{}whileVar' as='xs:string?' slot='10' eval='7'>
              <choose line='750'>
               <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}contains' type='xs:boolean'>
                <varRef line='2485' name='Q{}action-map' slot='0'/>
                <str val='@while'/>
               </ifCall>
               <treat line='751' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='5|0|XTTE0780|xforms:getWhileStatement#1'>
                <check card='?' diag='5|0|XTTE0780|xforms:getWhileStatement#1'>
                 <cvUntyped to='xs:string' diag='5|0|XTTE0780|xforms:getWhileStatement#1'>
                  <data>
                   <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                    <varRef line='2485' name='Q{}action-map' slot='0'/>
                    <str val='@while'/>
                   </ifCall>
                  </data>
                 </cvUntyped>
                </check>
               </treat>
              </choose>
              <let line='2488' var='Q{}ifExecuted' as='xs:boolean' slot='11' eval='16'>
               <choose line='2490'>
                <and op='and'>
                 <fn name='exists'>
                  <varRef name='Q{}ifVar' slot='9'/>
                 </fn>
                 <fn name='exists'>
                  <varRef name='Q{}context' slot='8'/>
                 </fn>
                </and>
                <treat line='2491' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='3|0|XTTE0570|ifExecuted'>
                 <check card='1' diag='3|0|XTTE0570|ifExecuted'>
                  <cvUntyped to='xs:boolean' diag='3|0|XTTE0570|ifExecuted'>
                   <data>
                    <evaluate dxns=''>
                     <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='2' eval='16'>
                      <check card='1' diag='0|0||xforms:impose'>
                       <varRef name='Q{}ifVar' slot='9'/>
                      </check>
                     </ufCall>
                     <varRef role='cxt' name='Q{}context' slot='8'/>
                     <check role='nsCxt' card='1' diag='4|0|XTTE3170|xsl:evaluate/namespace-context'>
                      <varRef name='Q{}instanceXML2' slot='5'/>
                     </check>
                     <str role='sa' val='no'/>
                     <map role='options' size='0'/>
                     <map role='wp' size='0'/>
                    </evaluate>
                   </data>
                  </cvUntyped>
                 </check>
                </treat>
                <true/>
                <true/>
               </choose>
               <let line='2499' var='Q{}isWhileTrue' as='xs:boolean' slot='12' eval='16'>
                <choose line='2501'>
                 <and op='and'>
                  <fn name='exists'>
                   <varRef name='Q{}whileVar' slot='10'/>
                  </fn>
                  <fn name='exists'>
                   <varRef name='Q{}context' slot='8'/>
                  </fn>
                 </and>
                 <treat line='2502' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='3|0|XTTE0570|isWhileTrue'>
                  <check card='1' diag='3|0|XTTE0570|isWhileTrue'>
                   <cvUntyped to='xs:boolean' diag='3|0|XTTE0570|isWhileTrue'>
                    <data>
                     <evaluate dxns=''>
                      <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='3' eval='16'>
                       <check card='1' diag='0|0||xforms:impose'>
                        <varRef name='Q{}whileVar' slot='10'/>
                       </check>
                      </ufCall>
                      <varRef role='cxt' name='Q{}context' slot='8'/>
                      <check role='nsCxt' card='1' diag='4|0|XTTE3170|xsl:evaluate/namespace-context'>
                       <varRef name='Q{}instanceXML2' slot='5'/>
                      </check>
                      <str role='sa' val='no'/>
                      <map role='options' size='0'/>
                      <map role='wp' size='0'/>
                     </evaluate>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <true/>
                 <true/>
                </choose>
                <choose line='2511'>
                 <and op='and'>
                  <varRef name='Q{}ifExecuted' slot='11'/>
                  <varRef name='Q{}isWhileTrue' slot='12'/>
                 </and>
                 <let line='2512' var='Q{}action-name' as='xs:string' slot='13' eval='16'>
                  <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|action-name'>
                   <check card='1' diag='3|0|XTTE0570|action-name'>
                    <cvUntyped to='xs:string' diag='3|0|XTTE0570|action-name'>
                     <data>
                      <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                       <varRef name='Q{}action-map' slot='0'/>
                       <str val='name'/>
                      </ifCall>
                     </data>
                    </cvUntyped>
                   </check>
                  </treat>
                  <sequence line='2515'>
                   <choose>
                    <vc op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='action'/>
                    </vc>
                    <empty/>
                    <vc line='2518' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='setvalue'/>
                    </vc>
                    <callT line='2519' name='Q{}action-setvalue' bSlot='4'/>
                    <vc line='2521' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='insert'/>
                    </vc>
                    <callT line='2522' name='Q{}action-insert' bSlot='5'/>
                    <vc line='2524' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='delete'/>
                    </vc>
                    <callT line='2525' name='Q{}action-delete' bSlot='6'/>
                    <vc line='2527' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='setindex'/>
                    </vc>
                    <callT line='2528' name='Q{}action-setindex' bSlot='7'/>
                    <vc line='2533' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='setfocus'/>
                    </vc>
                    <callT line='2534' name='Q{}action-setfocus' bSlot='8'/>
                    <vc line='2539' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='rebuild'/>
                    </vc>
                    <callT line='2540' name='Q{}xforms-rebuild' bSlot='9'/>
                    <vc line='2542' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='recalculate'/>
                    </vc>
                    <callT line='2543' name='Q{}xforms-recalculate' bSlot='10'/>
                    <vc line='2548' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='refresh'/>
                    </vc>
                    <callT line='2549' name='Q{}action-refresh' bSlot='11'/>
                    <vc line='2551' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='reset'/>
                    </vc>
                    <callT line='2552' name='Q{}action-reset' bSlot='12'/>
                    <vc line='2557' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='send'/>
                    </vc>
                    <callT line='2558' name='Q{}action-send' bSlot='13'/>
                    <vc line='2560' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='message'/>
                    </vc>
                    <callT line='2561' name='Q{}action-message' bSlot='14'/>
                    <vc line='2563' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='output'/>
                    </vc>
                    <callT line='2564' name='Q{}action-output' bSlot='15'/>
                    <vc line='2567' op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='text'/>
                    </vc>
                    <callT line='2568' name='Q{}action-text' bSlot='16'/>
                    <true/>
                    <message line='2571'>
                     <sequence role='select'>
                      <valueOf>
                       <str val='[applyActions] action &#39;'/>
                      </valueOf>
                      <valueOf>
                       <varRef name='Q{}action-name' slot='13'/>
                      </valueOf>
                      <valueOf>
                       <str val='&#39; not yet handled!'/>
                      </valueOf>
                     </sequence>
                     <str role='terminate' val='no'/>
                     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
                    </message>
                   </choose>
                   <choose line='2582'>
                    <vc op='eq' onEmpty='0' comp='CCC'>
                     <varRef name='Q{}action-name' slot='13'/>
                     <str val='message'/>
                    </vc>
                    <empty/>
                    <true/>
                    <forEach line='2588'>
                     <ifCall line='2576' name='Q{http://www.w3.org/2005/xpath-functions/array}flatten' type='item()*'>
                      <treat as='array(map(*))' jsTest='function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isArray(item) &amp;&amp; SaxonJS.U.ForArray(item.value).every(function(seq){return c(seq.length) &amp;&amp; SaxonJS.U.ForArray(seq).every(v)});' diag='3|0|XTTE0570|nested-actions-array'>
                       <check card='?' diag='3|0|XTTE0570|nested-actions-array'>
                        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                         <varRef name='Q{}action-map' slot='0'/>
                         <str val='nested-actions'/>
                        </ifCall>
                       </check>
                      </treat>
                     </ifCall>
                     <callT line='2589' name='Q{}applyActions' bSlot='17'>
                      <withParam name='Q{}action-map' flags='t' as='item()'>
                       <dot line='2590'/>
                      </withParam>
                     </callT>
                    </forEach>
                   </choose>
                   <let line='2597' var='Q{}isWhileStillTrue' as='xs:boolean' slot='14' eval='16'>
                    <choose line='2599'>
                     <and op='and'>
                      <fn name='exists'>
                       <varRef name='Q{}whileVar' slot='10'/>
                      </fn>
                      <fn name='exists'>
                       <varRef name='Q{}context' slot='8'/>
                      </fn>
                     </and>
                     <treat line='2600' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='3|0|XTTE0570|isWhileStillTrue'>
                      <check card='1' diag='3|0|XTTE0570|isWhileStillTrue'>
                       <cvUntyped to='xs:boolean' diag='3|0|XTTE0570|isWhileStillTrue'>
                        <data>
                         <evaluate dxns=''>
                          <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='18' eval='16'>
                           <check card='1' diag='0|0||xforms:impose'>
                            <varRef name='Q{}whileVar' slot='10'/>
                           </check>
                          </ufCall>
                          <varRef role='cxt' name='Q{}context' slot='8'/>
                          <check role='nsCxt' card='1' diag='4|0|XTTE3170|xsl:evaluate/namespace-context'>
                           <varRef name='Q{}instanceXML2' slot='5'/>
                          </check>
                          <str role='sa' val='no'/>
                          <map role='options' size='0'/>
                          <map role='wp' size='0'/>
                         </evaluate>
                        </data>
                       </cvUntyped>
                      </check>
                     </treat>
                     <true/>
                     <false/>
                    </choose>
                    <sequence line='2613'>
                     <choose>
                      <varRef name='Q{}isWhileStillTrue' slot='14'/>
                      <callT line='2614' name='Q{}applyActions' bSlot='19'/>
                     </choose>
                     <choose line='2617'>
                      <vc op='eq' onEmpty='0' comp='CCC'>
                       <treat line='2441' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|handler-status'>
                        <check card='1' diag='3|0|XTTE0570|handler-status'>
                         <cvUntyped to='xs:string' diag='3|0|XTTE0570|handler-status'>
                          <data>
                           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                            <varRef name='Q{}action-map' slot='0'/>
                            <str val='handler-status'/>
                           </ifCall>
                          </data>
                         </cvUntyped>
                        </check>
                       </treat>
                       <str val='outermost'/>
                      </vc>
                      <callT line='2618' name='Q{}outermost-action-handler' bSlot='20' flags='t'/>
                     </choose>
                    </sequence>
                   </let>
                  </sequence>
                 </let>
                </choose>
               </let>
              </let>
             </let>
            </let>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='4' binds='4'>
  <mode name='Q{}insert-node' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.5' seq='27' rank='0' minImp='0' slots='3' flags='s' line='1792' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1793'>
     <param name='Q{}insert-node-location' slot='0' flags='ti' as='node()'>
      <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|insert-node-location'>
       <check card='1' diag='8|0|XTTE0590|insert-node-location'>
        <supplied slot='0'/>
       </check>
      </treat>
     </param>
     <param line='1794' name='Q{}node-to-insert' slot='1' flags='ti' as='node()'>
      <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|node-to-insert'>
       <check card='1' diag='8|0|XTTE0590|node-to-insert'>
        <supplied slot='1'/>
       </check>
      </treat>
     </param>
     <param line='1795' name='Q{}position-relative' slot='2' flags='t' as='xs:string?'>
      <str role='select' val='after'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|position-relative'>
       <check card='?' diag='8|0|XTTE0590|position-relative'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|position-relative'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line='1798'>
      <and op='and'>
       <is op='is'>
        <dot type='element()'/>
        <varRef name='Q{}insert-node-location' slot='0'/>
       </is>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <varRef name='Q{}position-relative' slot='2'/>
        <str val='before'/>
       </vc>
      </and>
      <copyOf line='1800' flags='vc'>
       <varRef name='Q{}node-to-insert' slot='1'/>
      </copyOf>
     </choose>
     <copy line='1803' flags='cin'>
      <sequence role='content'>
       <copyOf flags='vc'>
        <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       </copyOf>
       <choose line='1808'>
        <and op='and'>
         <is op='is'>
          <dot type='element()'/>
          <varRef name='Q{}insert-node-location' slot='0'/>
         </is>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <varRef name='Q{}position-relative' slot='2'/>
          <str val='child'/>
         </vc>
        </and>
        <copyOf line='1809' flags='vc'>
         <varRef name='Q{}node-to-insert' slot='1'/>
        </copyOf>
       </choose>
       <applyT line='1811' mode='Q{}insert-node' bSlot='0'>
        <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
       </applyT>
      </sequence>
     </copy>
     <choose line='1813'>
      <and op='and'>
       <is op='is'>
        <dot type='element()'/>
        <varRef name='Q{}insert-node-location' slot='0'/>
       </is>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <varRef name='Q{}position-relative' slot='2'/>
        <str val='after'/>
       </vc>
      </and>
      <copyOf line='1814' flags='vc'>
       <varRef name='Q{}node-to-insert' slot='1'/>
      </copyOf>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='34' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}hasClass' line='2191' module='saxon-xforms.xsl' eval='16' flags='pU' as='xs:boolean' slots='2'>
   <arg name='Q{}element' as='element()'/>
   <arg name='Q{}string' as='xs:string'/>
   <gc role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2195' op='=' card='N:1' comp='CCC'>
    <fn name='tokenize'>
     <cvUntyped to='xs:string' diag='3|0|XTTE0570|class'>
      <data>
       <slash simple='1'>
        <varRef name='Q{}element' slot='0'/>
        <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
       </slash>
      </data>
     </cvUntyped>
    </fn>
    <varRef line='2198' name='Q{}string' slot='1'/>
   </gc>
  </function>
 </co>
 <co id='35' binds=''>
  <globalParam name='Q{}xforms-instance-id' type='xs:string' line='75' module='saxon-xforms.xsl' visibility='PUBLIC' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='xforms-jinstance'/>
  </globalParam>
 </co>
 <co id='36' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}getIfStatement' line='728' module='saxon-xforms.xsl' eval='7' flags='pU' as='xs:string?' slots='1'>
   <arg name='Q{}map' as='map(*)'/>
   <choose role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='731'>
    <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}contains' type='xs:boolean'>
     <varRef name='Q{}map' slot='0'/>
     <str val='@if'/>
    </ifCall>
    <treat line='732' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='5|0|XTTE0780|xforms:getIfStatement#1'>
     <check card='?' diag='5|0|XTTE0780|xforms:getIfStatement#1'>
      <cvUntyped to='xs:string' diag='5|0|XTTE0780|xforms:getIfStatement#1'>
       <data>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
         <varRef name='Q{}map' slot='0'/>
         <str val='@if'/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </choose>
  </function>
 </co>
 <co id='37' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}getClass' line='2212' module='saxon-xforms.xsl' eval='7' flags='pU' as='attribute(Q{}class)?' slots='3'>
   <arg name='Q{}element' as='element()'/>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2215' var='Q{}class' as='xs:string?' slot='1' eval='7'>
    <choose line='2216'>
     <fn name='exists'>
      <slash simple='1'>
       <varRef name='Q{}element' slot='0'/>
       <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
      </slash>
     </fn>
     <cvUntyped line='2217' to='xs:string' diag='3|0|XTTE0570|class'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <slash simple='1'>
           <varRef name='Q{}element' slot='0'/>
           <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
          </slash>
         </data>
        </convert>
       </fn>
      </cast>
     </cvUntyped>
    </choose>
    <let line='2220' var='Q{}class-mod' as='xs:string?' slot='2' eval='7'>
     <choose line='2222'>
      <fn name='exists'>
       <slash simple='1'>
        <varRef name='Q{}element' slot='0'/>
        <axis name='attribute' nodeTest='attribute(Q{}incremental)' jsTest='return item.name===&#39;incremental&#39;'/>
       </slash>
      </fn>
      <cvUntyped line='2223' to='xs:string' diag='3|0|XTTE0570|class-mod'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <sequence>
          <varRef name='Q{}class' slot='1'/>
          <str val='incremental'/>
         </sequence>
         <str val=' '/>
        </fn>
       </cast>
      </cvUntyped>
      <true/>
      <varRef line='2226' name='Q{}class' slot='1'/>
     </choose>
     <choose line='2230'>
      <fn name='exists'>
       <varRef name='Q{}class-mod' slot='2'/>
      </fn>
      <treat line='2231' as='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;' diag='5|0|XTTE0780|xforms:getClass#1'>
       <att name='class'>
        <varRef name='Q{}class-mod' slot='2'/>
       </att>
      </treat>
     </choose>
    </let>
   </let>
  </function>
 </co>
 <co id='38' binds='39'>
  <template name='Q{}refreshRepeats-JS' flags='os' line='2337' module='saxon-xforms.xsl' slots='5'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2338'>
    <message>
     <valueOf role='select'>
      <str val='[refreshRepeats-JS] START'/>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <let line='2340' var='Q{}repeat-keys' as='item()?' slot='0' eval='8'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
      <check card='1' diag='0|0||ixsl:call'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
      </check>
      <str val='getRepeatKeys'/>
      <array size='0'/>
     </ifCall>
     <forEach line='2342'>
      <varRef name='Q{}repeat-keys' slot='0'/>
      <let line='2343' var='Q{}this-key' as='xs:string' slot='1' eval='16'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-key'>
        <check card='1' diag='3|0|XTTE0570|this-key'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-key'>
          <data>
           <dot/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line='2344' var='Q{}this-repeat' as='element()' slot='2' eval='16'>
        <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|this-repeat'>
         <check card='1' diag='3|0|XTTE0570|this-repeat'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='getRepeat'/>
           <arrayBlock>
            <varRef name='Q{}this-key' slot='1'/>
           </arrayBlock>
          </ifCall>
         </check>
        </treat>
        <let line='2345' var='Q{}this-repeat-nodeset' as='xs:string' slot='3' eval='16'>
         <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-repeat-nodeset'>
          <check card='1' diag='3|0|XTTE0570|this-repeat-nodeset'>
           <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-repeat-nodeset'>
            <data>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='getRepeatContext'/>
              <arrayBlock>
               <varRef name='Q{}this-key' slot='1'/>
              </arrayBlock>
             </ifCall>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line='2347' var='Q{}page-element' as='element()?' slot='4' eval='7'>
          <check card='?' diag='3|0|XTTE0570|page-element'>
           <filter flags='b'>
            <slash simple='1'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
             <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}id' chk='0'/>
             </cast>
             <varRef name='Q{}this-key' slot='1'/>
            </vc>
           </filter>
          </check>
          <choose line='2350'>
           <fn name='exists'>
            <varRef name='Q{}page-element' slot='4'/>
           </fn>
           <resultDoc line='2351' global='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;method=html&#xD;&#xA;indent=no&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;' local='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;'>
            <fn role='href' name='concat'>
             <str val='#'/>
             <varRef name='Q{}this-key' slot='1'/>
            </fn>
            <applyT role='content' line='2352' bSlot='0'>
             <varRef role='select' name='Q{}this-repeat' slot='2'/>
             <withParam name='Q{}nodeset' flags='t' as='xs:string'>
              <varRef line='2353' name='Q{}this-repeat-nodeset' slot='3'/>
             </withParam>
             <withParam name='Q{}recalculate' flags='t' as='xs:boolean'>
              <true/>
             </withParam>
             <withParam name='Q{}refreshRepeats' flags='t' as='xs:boolean'>
              <true/>
             </withParam>
            </applyT>
           </resultDoc>
          </choose>
         </let>
        </let>
       </let>
      </let>
     </forEach>
    </let>
   </sequence>
  </template>
 </co>
 <co id='40' binds='41 1'>
  <template name='Q{}refreshOutputs-JS' flags='os' line='2270' module='saxon-xforms.xsl' slots='7'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2271'>
    <message>
     <valueOf role='select'>
      <str val='[refreshOutputs-JS] START'/>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <let line='2277' var='Q{}output-keys' as='item()?' slot='0' eval='8'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
      <check card='1' diag='0|0||ixsl:call'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
      </check>
      <str val='getOutputKeys'/>
      <array size='0'/>
     </ifCall>
     <forEach line='2279'>
      <varRef name='Q{}output-keys' slot='0'/>
      <let line='2280' var='Q{}this-key' as='xs:string' slot='1' eval='16'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-key'>
        <check card='1' diag='3|0|XTTE0570|this-key'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-key'>
          <data>
           <dot/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line='2281' var='Q{}this-output' as='map(*)' slot='2' eval='16'>
        <treat as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|this-output'>
         <check card='1' diag='3|0|XTTE0570|this-output'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='getOutput'/>
           <arrayBlock>
            <varRef name='Q{}this-key' slot='1'/>
           </arrayBlock>
          </ifCall>
         </check>
        </treat>
        <let line='2306' var='Q{}contexti' as='element()?' slot='3' eval='7'>
         <ufCall line='2307' name='Q{http://www.w3.org/2002/xforms}instance' tailCall='false' bSlot='0' eval='16'>
          <treat line='2304' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-instance-id'>
           <check card='1' diag='3|0|XTTE0570|this-instance-id'>
            <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-instance-id'>
             <data>
              <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
               <varRef name='Q{}this-output' slot='2'/>
               <str val='@instance-context'/>
              </ifCall>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </ufCall>
         <let line='2314' var='Q{}namespace-context-item' as='element()' slot='4' eval='16'>
          <choose>
           <fn name='exists'>
            <varRef name='Q{}contexti' slot='3'/>
           </fn>
           <check card='1' diag='3|0|XTTE0570|namespace-context-item'>
            <varRef name='Q{}contexti' slot='3'/>
           </check>
           <true/>
           <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|namespace-context-item'>
            <check card='1' diag='3|0|XTTE0570|namespace-context-item'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='getXForm'/>
              <array size='0'/>
             </ifCall>
            </check>
           </treat>
          </choose>
          <let line='2316' var='Q{}value' as='xs:string?' slot='5' eval='7'>
           <treat line='2317' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|value'>
            <check card='?' diag='3|0|XTTE0570|value'>
             <cvUntyped to='xs:string' diag='3|0|XTTE0570|value'>
              <data>
               <evaluate dxns=''>
                <ufCall role='xpath' line='2288' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='16'>
                 <choose>
                  <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                   <varRef name='Q{}this-output' slot='2'/>
                   <str val='@value'/>
                  </ifCall>
                  <treat line='2289' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|xpath'>
                   <check card='1' diag='3|0|XTTE0570|xpath'>
                    <cvUntyped to='xs:string' diag='3|0|XTTE0570|xpath'>
                     <data>
                      <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                       <varRef name='Q{}this-output' slot='2'/>
                       <str val='@value'/>
                      </ifCall>
                     </data>
                    </cvUntyped>
                   </check>
                  </treat>
                  <ifCall line='2291' name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                   <varRef name='Q{}this-output' slot='2'/>
                   <str val='@ref'/>
                  </ifCall>
                  <treat line='2292' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|xpath'>
                   <check card='1' diag='3|0|XTTE0570|xpath'>
                    <cvUntyped to='xs:string' diag='3|0|XTTE0570|xpath'>
                     <data>
                      <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                       <varRef name='Q{}this-output' slot='2'/>
                       <str val='@ref'/>
                      </ifCall>
                     </data>
                    </cvUntyped>
                   </check>
                  </treat>
                  <true/>
                  <str val=''/>
                 </choose>
                </ufCall>
                <varRef role='cxt' name='Q{}contexti' slot='3'/>
                <varRef role='nsCxt' name='Q{}namespace-context-item' slot='4'/>
                <str role='sa' val='no'/>
                <map role='options' size='0'/>
                <map role='wp' size='0'/>
               </evaluate>
              </data>
             </cvUntyped>
            </check>
           </treat>
           <let line='2320' var='Q{}associated-form-control' as='element()?' slot='6' eval='7'>
            <check card='?' diag='3|0|XTTE0570|associated-form-control'>
             <filter flags='b'>
              <slash simple='1'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
               <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
              </slash>
              <vc op='eq' onEmpty='0' comp='CCC'>
               <cast as='xs:string' emptiable='1'>
                <attVal name='Q{}id' chk='0'/>
               </cast>
               <varRef name='Q{}this-key' slot='1'/>
              </vc>
             </filter>
            </check>
            <choose line='2323'>
             <fn name='exists'>
              <varRef name='Q{}associated-form-control' slot='6'/>
             </fn>
             <resultDoc line='2324' global='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;method=html&#xD;&#xA;indent=no&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;' local='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;'>
              <fn role='href' name='concat'>
               <str val='#'/>
               <varRef name='Q{}this-key' slot='1'/>
              </fn>
              <valueOf role='content' line='2325'>
               <varRef name='Q{}value' slot='5'/>
              </valueOf>
             </resultDoc>
            </choose>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </forEach>
    </let>
   </sequence>
  </template>
 </co>
 <co id='30' binds=''>
  <template name='Q{}xforms-focus' flags='os' line='3004' module='saxon-xforms.xsl' slots='5'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3005'>
    <param name='Q{}control' slot='0' flags='i' as='xs:string'>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|control'>
      <check card='1' diag='8|0|XTTE0590|control'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|control'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line='3007' var='Q{}xforms-control' as='element()' slot='1' eval='16'>
     <check card='1' diag='3|0|XTTE0570|xforms-control'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='getXFormsDoc'/>
          <array size='0'/>
         </ifCall>
        </treat>
        <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}id' chk='0'/>
        </cast>
        <varRef name='Q{}control' slot='0'/>
       </vc>
      </filter>
     </check>
     <choose line='3012'>
      <fn name='exists'>
       <slash simple='1'>
        <varRef name='Q{}xforms-control' slot='1'/>
        <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}repeat)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;repeat&#39;;'/>
       </slash>
      </fn>
      <let line='3016' var='Q{http://saxon.sf.net/generated-variable}v0' as='item()' slot='2' eval='13'>
       <check card='1' diag='0|0||ixsl:call'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
       </check>
       <let line='3013' var='Q{}context-indexes' as='xs:double*' slot='3' eval='8'>
        <convert line='3014' from='xs:anyAtomicType' to='xs:double' flags='p' diag='3|0|XTTE0570|context-indexes'>
         <cvUntyped to='xs:double' diag='3|0|XTTE0570|context-indexes'>
          <data>
           <forEach>
            <sort>
             <slash role='select'>
              <varRef name='Q{}xforms-control' slot='1'/>
              <fn name='reverse'>
               <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}repeat)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;repeat&#39;;'/>
              </fn>
             </slash>
             <sortKey line='3015' comp='DESC|NC11'>
              <fn role='select' name='position'/>
              <str role='order' val='descending'/>
              <str role='dataType' val='number'/>
              <str role='lang' val=''/>
              <str role='caseOrder' val='#default'/>
              <str role='stable' val='yes'/>
              <str role='collation' val='http://www.w3.org/2005/xpath-functions/collation/codepoint'/>
             </sortKey>
            </sort>
            <ifCall line='3016' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
             <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='2'/>
             <str val='getRepeatIndex'/>
             <arrayBlock>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}id' chk='0'/>
              </cast>
             </arrayBlock>
            </ifCall>
           </forEach>
          </data>
         </cvUntyped>
        </convert>
        <let line='3020' var='Q{}control-index' as='xs:string' slot='4' eval='8'>
         <fn name='string-join'>
          <varRef name='Q{}context-indexes' slot='3'/>
          <str val='.'/>
         </fn>
         <sequence line='3021'>
          <message>
           <sequence role='select'>
            <valueOf>
             <str val='[xforms-focus] Control &#39;'/>
            </valueOf>
            <varRef name='Q{}control' slot='0'/>
            <valueOf>
             <str val='&#39; has index &#39;'/>
            </valueOf>
            <varRef name='Q{}control-index' slot='4'/>
            <valueOf flags='S'>
             <str val='&#39;'/>
            </valueOf>
           </sequence>
           <str role='terminate' val='no'/>
           <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
          </message>
          <ifCall line='3022' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='setFocus'/>
           <arrayBlock>
            <fn name='concat'>
             <varRef name='Q{}control' slot='0'/>
             <str val='-'/>
             <varRef name='Q{}control-index' slot='4'/>
            </fn>
           </arrayBlock>
          </ifCall>
         </sequence>
        </let>
       </let>
      </let>
      <true/>
      <ifCall line='3025' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
       <check card='1' diag='0|0||ixsl:call'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
       </check>
       <str val='setFocus'/>
       <arrayBlock>
        <varRef name='Q{}control' slot='0'/>
       </arrayBlock>
      </ifCall>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id='42' binds=''>
  <globalParam name='Q{}xform-html-id' type='xs:string' line='79' module='saxon-xforms.xsl' visibility='PUBLIC' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='xForm'/>
  </globalParam>
 </co>
 <co id='43' vis='PUBLIC' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}random' line='109' module='xforms-function-library.xsl' eval='16' flags='pU' as='xs:double' slots='0'>
   <check role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ map=~' line='110' card='1' diag='3|0|XTTE0570|randomNumber'>
    <convert from='xs:anyAtomicType' to='xs:double' flags='p' diag='3|0|XTTE0570|randomNumber'>
     <cvUntyped to='xs:double' diag='3|0|XTTE0570|randomNumber'>
      <data>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
        <check card='1' diag='0|0||ixsl:call'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
        <str val='Math.random'/>
        <array size='0'/>
       </ifCall>
      </data>
     </cvUntyped>
    </convert>
   </check>
  </function>
 </co>
 <co id='14' binds='44'>
  <template name='Q{}xforms-recalculate' flags='os' line='2889' module='saxon-xforms.xsl' slots='5'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2890'>
    <message>
     <valueOf role='select'>
      <str val='[xforms-recalculate] START'/>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <let line='2892' var='Q{}bindings' as='element(Q{http://www.w3.org/2002/xforms}bind)?' slot='0' eval='7'>
     <treat as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='3|0|XTTE0570|bindings'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
       <check card='1' diag='0|0||ixsl:call'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
       </check>
       <str val='getBindings'/>
       <array size='0'/>
      </ifCall>
     </treat>
     <let line='2894' var='Q{}instance-keys' as='item()?' slot='1' eval='8'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
       <check card='1' diag='0|0||ixsl:call'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
       </check>
       <str val='getInstanceKeys'/>
       <array size='0'/>
      </ifCall>
      <forEach line='2895'>
       <varRef name='Q{}instance-keys' slot='1'/>
       <let line='2896' var='Q{}instance-id' as='xs:string' slot='2' eval='16'>
        <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|instance-id'>
         <check card='1' diag='3|0|XTTE0570|instance-id'>
          <cvUntyped to='xs:string' diag='3|0|XTTE0570|instance-id'>
           <data>
            <dot/>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line='2897' var='Q{}instanceXML' as='item()?' slot='3' eval='8'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='getInstance'/>
          <arrayBlock>
           <dot/>
          </arrayBlock>
         </ifCall>
         <let line='2900' var='Q{}updatedInstanceXML' as='element()' slot='4' eval='16'>
          <treat line='2901' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|updatedInstanceXML'>
           <check card='1' diag='3|0|XTTE0570|updatedInstanceXML'>
            <callT name='Q{}xforms-recalculate-binding' bSlot='0'>
             <withParam name='Q{}instanceXML' flags='c' as='element()'>
              <treat line='2902' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='8|0|XTTE0590|instanceXML'>
               <check card='1' diag='8|0|XTTE0590|instanceXML'>
                <varRef name='Q{}instanceXML' slot='3'/>
               </check>
              </treat>
             </withParam>
             <withParam name='Q{}counter' flags='c' as='xs:integer'>
              <int val='1'/>
             </withParam>
             <withParam name='Q{}calculation-bindings' flags='t' as='element(Q{http://www.w3.org/2002/xforms}bind)?'>
              <filter line='2898' flags='b'>
               <filter flags='b'>
                <varRef name='Q{}bindings' slot='0'/>
                <fn name='exists'>
                 <axis name='attribute' nodeTest='attribute(Q{}calculate)' jsTest='return item.name===&#39;calculate&#39;'/>
                </fn>
               </filter>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}instance-context' chk='0'/>
                </cast>
                <varRef name='Q{}instance-id' slot='2'/>
               </vc>
              </filter>
             </withParam>
            </callT>
           </check>
          </treat>
          <ifCall line='2908' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='setInstance'/>
           <arrayBlock>
            <varRef name='Q{}instance-id' slot='2'/>
            <varRef name='Q{}updatedInstanceXML' slot='4'/>
           </arrayBlock>
          </ifCall>
         </let>
        </let>
       </let>
      </forEach>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='45' binds=''>
  <globalParam name='Q{}xforms-file-global' type='xs:string?' line='81' module='saxon-xforms.xsl' visibility='PUBLIC' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n&lt;=1;};'>
   <empty/>
  </globalParam>
 </co>
 <co id='46' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations' line='2151' module='saxon-xforms.xsl' eval='16' flags='pU' as='element()' slots='1'>
   <arg name='Q{}this' as='element()'/>
   <compElem role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2153'>
    <fn role='name' name='name'>
     <varRef name='Q{}this' slot='0'/>
    </fn>
    <sequence role='content' line='2154'>
     <namespace flags='l'>
      <str role='name' val='xforms'/>
      <str role='select' val='http://www.w3.org/2002/xforms'/>
     </namespace>
     <forEach line='2155'>
      <filter flags='b'>
       <filter flags='b'>
        <slash simple='1'>
         <varRef name='Q{}this' slot='0'/>
         <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <fn name='boolean'>
         <fn name='namespace-uri'>
          <dot type='element()'/>
         </fn>
        </fn>
       </filter>
       <fn name='not'>
        <gc op='=' card='N:1' comp='CCC'>
         <sequence>
          <slash>
           <fn name='reverse'>
            <axis name='ancestor' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </fn>
           <fn name='namespace-uri'>
            <dot type='element()'/>
           </fn>
          </slash>
          <slash>
           <fn name='reverse'>
            <axis name='preceding' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </fn>
           <fn name='namespace-uri'>
            <dot type='element()'/>
           </fn>
          </slash>
         </sequence>
         <fn name='namespace-uri'>
          <dot type='element()'/>
         </fn>
        </gc>
       </fn>
      </filter>
      <namespace line='2158' flags='l'>
       <fn role='name' line='2157' name='substring-before'>
        <fn name='name'>
         <dot type='element()'/>
        </fn>
        <str val=':'/>
       </fn>
       <convert role='select' from='xs:anyURI' to='xs:string'>
        <fn line='2156' name='namespace-uri'>
         <dot type='element()'/>
        </fn>
       </convert>
      </namespace>
     </forEach>
     <copyOf line='2160' flags='vc'>
      <sequence>
       <slash simple='1'>
        <varRef name='Q{}this' slot='0'/>
        <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       </slash>
       <slash simple='1'>
        <varRef name='Q{}this' slot='0'/>
        <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
       </slash>
      </sequence>
     </copyOf>
    </sequence>
   </compElem>
  </function>
 </co>
 <co id='10' binds='3 47 48 1 49'>
  <template name='Q{}xforms-submit' flags='os' line='3038' module='saxon-xforms.xsl' slots='14'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3039'>
    <param name='Q{}submission' slot='0' flags='i' as='xs:string'>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|submission'>
      <check card='1' diag='8|0|XTTE0590|submission'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|submission'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line='3041' var='Q{}submission-map' as='map(*)' slot='1' eval='16'>
     <treat as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|submission-map'>
      <check card='1' diag='3|0|XTTE0570|submission-map'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
        <check card='1' diag='0|0||ixsl:call'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
        <str val='getSubmission'/>
        <arrayBlock>
         <varRef name='Q{}submission' slot='0'/>
        </arrayBlock>
       </ifCall>
      </check>
     </treat>
     <let line='3042' var='Q{}actions' as='map(*)?' slot='2' eval='7'>
      <treat as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|actions'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
        <check card='1' diag='0|0||ixsl:call'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
        <str val='getAction'/>
        <arrayBlock>
         <varRef name='Q{}submission' slot='0'/>
        </arrayBlock>
       </ifCall>
      </treat>
      <let line='3049' var='Q{}refi' as='xs:string?' slot='3' eval='7'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|refi'>
        <check card='?' diag='3|0|XTTE0570|refi'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|refi'>
          <data>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
            <varRef name='Q{}submission-map' slot='1'/>
            <str val='@ref'/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line='3052' var='Q{}instanceXML-submit' as='element()?' slot='4' eval='7'>
        <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML-submit'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='getInstance'/>
          <arrayBlock>
           <ufCall line='3050' name='Q{http://www.w3.org/2002/xforms}getInstanceId' tailCall='false' bSlot='0' eval='16'>
            <check card='1' diag='0|0||xforms:getInstanceId'>
             <varRef name='Q{}refi' slot='3'/>
            </check>
           </ufCall>
          </arrayBlock>
         </ifCall>
        </treat>
        <let line='3059' var='Q{}required-fields-check' as='element()*' slot='5' eval='3'>
         <choose>
          <fn name='exists'>
           <varRef name='Q{}instanceXML-submit' slot='4'/>
          </fn>
          <ufCall name='Q{http://www.w3.org/2002/xforms}check-required-fields' tailCall='false' bSlot='1' eval='16'>
           <check card='1' diag='0|0||xforms:check-required-fields'>
            <varRef name='Q{}instanceXML-submit' slot='4'/>
           </check>
          </ufCall>
         </choose>
         <let line='3060' var='Q{}constrained-fields-check' as='item()*' slot='6' eval='3'>
          <choose>
           <fn name='exists'>
            <varRef name='Q{}instanceXML-submit' slot='4'/>
           </fn>
           <ufCall name='Q{http://www.w3.org/2002/xforms}check-constraints-on-fields' tailCall='false' bSlot='2' eval='16'>
            <check card='1' diag='0|0||xforms:check-constraints-on-fields'>
             <varRef name='Q{}instanceXML-submit' slot='4'/>
            </check>
           </ufCall>
          </choose>
          <choose line='3065'>
           <and op='and'>
            <fn name='empty'>
             <varRef name='Q{}required-fields-check' slot='5'/>
            </fn>
            <fn name='empty'>
             <varRef name='Q{}constrained-fields-check' slot='6'/>
            </fn>
           </and>
           <let line='3067' var='Q{}requestBody' as='node()?' slot='7' eval='7'>
            <choose line='3069'>
             <varRef name='Q{}refi' slot='3'/>
             <treat line='3070' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|requestBody'>
              <check card='?' diag='3|0|XTTE0570|requestBody'>
               <evaluate dxns=''>
                <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='3' eval='16'>
                 <check card='1' diag='0|0||xforms:impose'>
                  <varRef name='Q{}refi' slot='3'/>
                 </check>
                </ufCall>
                <varRef role='cxt' name='Q{}instanceXML-submit' slot='4'/>
                <check role='nsCxt' card='1' diag='4|0|XTTE3170|xsl:evaluate/namespace-context'>
                 <varRef name='Q{}instanceXML-submit' slot='4'/>
                </check>
                <str role='sa' val='no'/>
                <map role='options' size='0'/>
                <map role='wp' size='0'/>
               </evaluate>
              </check>
             </treat>
            </choose>
            <let line='3078' var='Q{}requestBodyDoc' as='document-node()?' slot='8' eval='7'>
             <choose line='3079'>
              <fn name='exists'>
               <filter flags='b'>
                <varRef name='Q{}requestBody' slot='7'/>
                <fn name='exists'>
                 <axis name='self' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                </fn>
               </filter>
              </fn>
              <doc line='3080'>
               <varRef line='3081' name='Q{}requestBody' slot='7'/>
              </doc>
             </choose>
             <let line='3086' var='Q{}method' as='xs:string' slot='9' eval='16'>
              <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|method'>
               <check card='1' diag='3|0|XTTE0570|method'>
                <cvUntyped to='xs:string' diag='3|0|XTTE0570|method'>
                 <data>
                  <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                   <varRef name='Q{}submission-map' slot='1'/>
                   <str val='@method'/>
                  </ifCall>
                 </data>
                </cvUntyped>
               </check>
              </treat>
              <let line='3088' var='Q{}serialization' as='xs:string?' slot='10' eval='7'>
               <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|serialization'>
                <check card='?' diag='3|0|XTTE0570|serialization'>
                 <cvUntyped to='xs:string' diag='3|0|XTTE0570|serialization'>
                  <data>
                   <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                    <varRef name='Q{}submission-map' slot='1'/>
                    <str val='@serialization'/>
                   </ifCall>
                  </data>
                 </cvUntyped>
                </check>
               </treat>
               <let line='3090' var='Q{}query-parameters' as='xs:string?' slot='11' eval='7'>
                <choose line='3091'>
                 <and op='and'>
                  <fn name='exists'>
                   <varRef name='Q{}serialization' slot='10'/>
                  </fn>
                  <vc op='eq' onEmpty='0' comp='CCC'>
                   <varRef name='Q{}serialization' slot='10'/>
                   <str val='application/x-www-form-urlencoded'/>
                  </vc>
                 </and>
                 <fn line='3108' name='string-join'>
                  <choose line='3095'>
                   <fn name='exists'>
                    <varRef name='Q{}requestBodyDoc' slot='8'/>
                   </fn>
                   <forEach line='3096'>
                    <slash simple='1'>
                     <varRef name='Q{}requestBody' slot='7'/>
                     <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                    </slash>
                    <fn line='3097' name='concat'>
                     <fn name='local-name'>
                      <dot type='element()'/>
                     </fn>
                     <str val='='/>
                     <fn name='string'>
                      <dot type='element()'/>
                     </fn>
                    </fn>
                   </forEach>
                  </choose>
                  <str val='&amp;'/>
                 </fn>
                </choose>
                <let line='3112' var='Q{}href-base' as='xs:string?' slot='12' eval='7'>
                 <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|href-base'>
                  <check card='?' diag='3|0|XTTE0570|href-base'>
                   <cvUntyped to='xs:string' diag='3|0|XTTE0570|href-base'>
                    <data>
                     <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                      <varRef name='Q{}submission-map' slot='1'/>
                      <str val='@resource'/>
                     </ifCall>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <let line='3114' var='Q{}href' as='xs:string?' slot='13' eval='7'>
                  <choose line='3116'>
                   <fn name='empty'>
                    <varRef name='Q{}href-base' slot='12'/>
                   </fn>
                   <treat line='3118' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|href'>
                    <check card='?' diag='3|0|XTTE0570|href'>
                     <cvUntyped to='xs:string' diag='3|0|XTTE0570|href'>
                      <data>
                       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
                        <check card='1' diag='0|0||ixsl:call'>
                         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
                        </check>
                        <str val='alert'/>
                        <array size='1'>
                         <str val='ERROR: no URL specified for submission'/>
                        </array>
                       </ifCall>
                      </data>
                     </cvUntyped>
                    </check>
                   </treat>
                   <fn line='3121' name='exists'>
                    <varRef name='Q{}query-parameters' slot='11'/>
                   </fn>
                   <fn line='3122' name='concat'>
                    <varRef name='Q{}href-base' slot='12'/>
                    <str val='?'/>
                    <varRef name='Q{}query-parameters' slot='11'/>
                   </fn>
                   <fn line='3124' name='exists'>
                    <filter flags='b'>
                     <varRef name='Q{}requestBody' slot='7'/>
                     <fn name='exists'>
                      <axis name='self' nodeTest='text()' jsTest='return item.nodeType===3;'/>
                     </fn>
                    </filter>
                   </fn>
                   <fn line='3125' name='concat'>
                    <varRef name='Q{}href-base' slot='12'/>
                    <str val='/'/>
                    <data>
                     <varRef name='Q{}requestBody' slot='7'/>
                    </data>
                   </fn>
                   <true/>
                   <varRef line='3128' name='Q{}href-base' slot='12'/>
                  </choose>
                  <ifCall line='3162' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
                   <int val='0'/>
                   <empty/>
                   <callT name='Q{}HTTPsubmit' bSlot='4'>
                    <withParam name='Q{}instance-id' flags='c' as='xs:string'>
                     <treat line='3051' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|instance-id-update'>
                      <check card='1' diag='3|0|XTTE0570|instance-id-update'>
                       <cvUntyped to='xs:string' diag='3|0|XTTE0570|instance-id-update'>
                        <data>
                         <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                          <varRef name='Q{}submission-map' slot='1'/>
                          <str val='@instance'/>
                         </ifCall>
                        </data>
                       </cvUntyped>
                      </check>
                     </treat>
                    </withParam>
                    <withParam name='Q{}targetref' flags='c' as='xs:string?'>
                     <treat line='3164' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|targetref'>
                      <check card='?' diag='8|0|XTTE0590|targetref'>
                       <cvUntyped to='xs:string' diag='8|0|XTTE0590|targetref'>
                        <data>
                         <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                          <varRef name='Q{}submission-map' slot='1'/>
                          <str val='@targetref'/>
                         </ifCall>
                        </data>
                       </cvUntyped>
                      </check>
                     </treat>
                    </withParam>
                    <withParam name='Q{}replace' flags='c' as='xs:string?'>
                     <treat line='3165' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|replace'>
                      <check card='?' diag='8|0|XTTE0590|replace'>
                       <cvUntyped to='xs:string' diag='8|0|XTTE0590|replace'>
                        <data>
                         <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                          <varRef name='Q{}submission-map' slot='1'/>
                          <str val='@replace'/>
                         </ifCall>
                        </data>
                       </cvUntyped>
                      </check>
                     </treat>
                    </withParam>
                    <withParam name='Q{}when-done' flags='t' as='map(*)?'>
                     <filter line='3166' flags='b'>
                      <varRef name='Q{}actions' slot='2'/>
                      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                       <data>
                        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                         <dot type='map(*)'/>
                         <str val='@event'/>
                        </ifCall>
                       </data>
                       <str val='xforms-submit-done'/>
                      </gc>
                     </filter>
                    </withParam>
                   </callT>
                   <ifCall line='3138' name='Q{http://www.w3.org/2005/xpath-functions/map}merge' type='map(*)'>
                    <sequence>
                     <choose>
                      <vc op='ne' onEmpty='1' comp='CCC'>
                       <fn name='upper-case'>
                        <varRef name='Q{}method' slot='9'/>
                       </fn>
                       <str val='GET'/>
                      </vc>
                      <sequence line='3140'>
                       <choose>
                        <fn name='exists'>
                         <varRef name='Q{}requestBodyDoc' slot='8'/>
                        </fn>
                        <ifCall line='3141' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                         <str val='body'/>
                         <varRef name='Q{}requestBodyDoc' slot='8'/>
                        </ifCall>
                        <true/>
                        <ifCall line='3144' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                         <str val='body'/>
                         <varRef name='Q{}requestBody' slot='7'/>
                        </ifCall>
                       </choose>
                       <ifCall line='3147' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                        <str val='media-type'/>
                        <treat line='3133' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|mediatype'>
                         <check card='1' diag='3|0|XTTE0570|mediatype'>
                          <cvUntyped to='xs:string' diag='3|0|XTTE0570|mediatype'>
                           <data>
                            <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                             <varRef name='Q{}submission-map' slot='1'/>
                             <str val='@mediatype'/>
                            </ifCall>
                           </data>
                          </cvUntyped>
                         </check>
                        </treat>
                       </ifCall>
                      </sequence>
                     </choose>
                     <ifCall line='3150' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                      <str val='method'/>
                      <varRef name='Q{}method' slot='9'/>
                     </ifCall>
                     <ifCall line='3151' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                      <str val='href'/>
                      <varRef name='Q{}href' slot='13'/>
                     </ifCall>
                    </sequence>
                    <map size='2'>
                     <str val='duplicates'/>
                     <str val='reject'/>
                     <str val='duplicates-error-code'/>
                     <str val='XTDE3365'/>
                    </map>
                   </ifCall>
                  </ifCall>
                 </let>
                </let>
               </let>
              </let>
             </let>
            </let>
           </let>
           <true/>
           <ifCall line='3184' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
            <check card='1' diag='0|0||ixsl:call'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
            </check>
            <str val='alert'/>
            <arrayBlock>
             <fn name='serialize'>
              <doc line='3175' flags='t' validation='preserve'>
               <sequence>
                <forEach>
                 <varRef name='Q{}constrained-fields-check' slot='6'/>
                 <valueOf line='3177' flags='l'>
                  <fn name='concat'>
                   <str val='Invalid field value: '/>
                   <data>
                    <slash simple='1'>
                     <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
                      <dot line='3176'/>
                     </treat>
                     <axis name='attribute' nodeTest='attribute(Q{}data-ref)' jsTest='return item.name===&#39;data-ref&#39;'/>
                    </slash>
                   </data>
                   <str val='&#xA;'/>
                  </fn>
                 </valueOf>
                </forEach>
                <forEach line='3179'>
                 <varRef name='Q{}required-fields-check' slot='5'/>
                 <valueOf line='3181' flags='l'>
                  <fn name='concat'>
                   <str val='Required field is empty: '/>
                   <data>
                    <slash line='3180' simple='1'>
                     <dot type='element()'/>
                     <axis line='3181' name='attribute' nodeTest='attribute(Q{}data-ref)' jsTest='return item.name===&#39;data-ref&#39;'/>
                    </slash>
                   </data>
                   <str val='&#xA;'/>
                  </fn>
                 </valueOf>
                </forEach>
               </sequence>
              </doc>
             </fn>
            </arrayBlock>
           </ifCall>
          </choose>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='20' binds='40 38 50 51'>
  <template name='Q{}xforms-refresh' flags='os' line='2970' module='saxon-xforms.xsl' slots='0'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2971'>
    <callT name='Q{}refreshOutputs-JS' bSlot='0'/>
    <callT line='2972' name='Q{}refreshRepeats-JS' bSlot='1'/>
    <callT line='2973' name='Q{}refreshElementsUsingIndexFunction-JS' bSlot='2'/>
    <callT line='2974' name='Q{}refreshRelevantFields-JS' bSlot='3' flags='t'/>
   </sequence>
  </template>
 </co>
 <co id='33' binds='52'>
  <template name='Q{}xforms-rebuild' flags='os' line='2827' module='saxon-xforms.xsl' slots='4'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2828'>
    <param name='Q{}get-bindings' slot='0' as='xs:boolean'>
     <false role='select'/>
     <treat role='conversion' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='8|0|XTTE0590|get-bindings'>
      <check card='1' diag='8|0|XTTE0590|get-bindings'>
       <cvUntyped to='xs:boolean' diag='8|0|XTTE0590|get-bindings'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line='2829' name='Q{}model' slot='1' flags='tr' as='element(Q{http://www.w3.org/2002/xforms}model)'>
     <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;' diag='8|0|XTTE0590|model'>
      <check card='1' diag='8|0|XTTE0590|model'>
       <supplied slot='1'/>
      </check>
     </treat>
    </param>
    <choose line='2831'>
     <varRef name='Q{}get-bindings' slot='0'/>
     <let line='2837' var='Q{http://saxon.sf.net/generated-variable}v0' as='item()' slot='2' eval='13'>
      <check card='1' diag='0|0||ixsl:call'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
      </check>
      <forEach line='2832'>
       <slash simple='1'>
        <varRef name='Q{}model' slot='1'/>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;'/>
       </slash>
       <let line='2833' var='Q{}parsed-binding' as='element()' slot='3' eval='16'>
        <treat line='2834' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|parsed-binding'>
         <check card='1' diag='3|0|XTTE0570|parsed-binding'>
          <applyT mode='Q{}add-context' bSlot='0'>
           <dot role='select' type='element(Q{http://www.w3.org/2002/xforms}bind)'/>
          </applyT>
         </check>
        </treat>
        <ifCall line='2837' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='2'/>
         <str val='setBinding'/>
         <arrayBlock>
          <varRef name='Q{}parsed-binding' slot='3'/>
         </arrayBlock>
        </ifCall>
       </let>
      </forEach>
     </let>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='53' binds=''>
  <mode name='Q{}set-field' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='40' rank='0' minImp='0' slots='1' flags='s' line='2083' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:textarea' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;textarea&#39;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2084'>
     <param name='Q{}value' slot='0' flags='t'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='0'/>
     </param>
     <ifCall line='2088' name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
      <dot type='*:textarea'/>
      <str val='value'/>
     </ifCall>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-0.25' seq='39' rank='0' minImp='0' slots='1' flags='s' line='2069' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:select' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;select&#39;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2070'>
     <param name='Q{}value' slot='0' flags='t'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='0'/>
     </param>
     <forEach line='2072'>
      <filter flags='b'>
       <axis name='child' nodeTest='element(Q{}option)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;option&#39;;'/>
       <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
        <data>
         <varRef name='Q{}value' slot='0'/>
        </data>
        <attVal name='Q{}value' chk='0'/>
       </gc>
      </filter>
      <ifCall line='2073' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
       <str val='selected'/>
       <true/>
       <dot type='element(Q{}option)'/>
      </ifCall>
     </forEach>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-0.25' seq='38' rank='0' minImp='0' slots='1' flags='s' line='2049' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:input' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;input&#39;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2050'>
     <param name='Q{}value' slot='0' flags='t'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='2053'>
      <and op='and'>
       <fn name='exists'>
        <axis name='attribute' nodeTest='attribute(Q{}type)' jsTest='return item.name===&#39;type&#39;'/>
       </fn>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}type' chk='0'/>
        </cast>
        <str val='checkbox'/>
       </vc>
      </and>
      <ifCall line='2054' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
       <str val='checked'/>
       <choose>
        <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
         <data>
          <varRef name='Q{}value' slot='0'/>
         </data>
         <str val='true'/>
        </gc>
        <check card='?' diag='0|1||ixsl:set-property'>
         <varRef name='Q{}value' slot='0'/>
        </check>
        <true/>
        <str val=''/>
       </choose>
       <dot type='*:input'/>
      </ifCall>
      <true/>
      <ifCall line='2057' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
       <str val='value'/>
       <check card='?' diag='0|1||ixsl:set-property'>
        <varRef name='Q{}value' slot='0'/>
       </check>
       <dot type='*:input'/>
      </ifCall>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='50' binds='54 39'>
  <template name='Q{}refreshElementsUsingIndexFunction-JS' flags='os' line='2403' module='saxon-xforms.xsl' slots='4'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2404'>
    <message>
     <valueOf role='select'>
      <str val='[refreshElementsUsingIndexFunction-JS] START'/>
     </valueOf>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
    <let line='2406' var='Q{}ElementsUsingIndexFunction-keys' as='item()?' slot='0' eval='8'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
      <check card='1' diag='0|0||ixsl:call'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
      </check>
      <str val='getElementsUsingIndexFunctionKeys'/>
      <array size='0'/>
     </ifCall>
     <forEach line='2408'>
      <varRef name='Q{}ElementsUsingIndexFunction-keys' slot='0'/>
      <let line='2409' var='Q{}this-key' as='xs:string' slot='1' eval='16'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-key'>
        <check card='1' diag='3|0|XTTE0570|this-key'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-key'>
          <data>
           <dot/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <sequence line='2411'>
        <message>
         <sequence role='select'>
          <valueOf>
           <str val='[refreshElementsUsingIndexFunction-JS] Refreshing item with key &#39;'/>
          </valueOf>
          <varRef name='Q{}this-key' slot='1'/>
          <valueOf flags='S'>
           <str val='&#39;'/>
          </valueOf>
         </sequence>
         <str role='terminate' val='no'/>
         <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
        </message>
        <let line='2413' var='Q{}this-element' as='element()' slot='2' eval='16'>
         <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|this-element'>
          <check card='1' diag='3|0|XTTE0570|this-element'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
            <check card='1' diag='0|0||ixsl:call'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
            </check>
            <str val='getElementUsingIndexFunction'/>
            <arrayBlock>
             <varRef name='Q{}this-key' slot='1'/>
            </arrayBlock>
           </ifCall>
          </check>
         </treat>
         <let line='2415' var='Q{}this-element-refi' as='xs:string' slot='3' eval='16'>
          <treat line='2416' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-element-refi'>
           <check card='1' diag='3|0|XTTE0570|this-element-refi'>
            <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-element-refi'>
             <data>
              <applyT mode='Q{}get-data-ref' bSlot='0'>
               <varRef role='select' name='Q{}this-element' slot='2'/>
              </applyT>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <resultDoc line='2419' global='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;method=html&#xD;&#xA;indent=no&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;' local='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;'>
           <fn role='href' name='concat'>
            <str val='#'/>
            <varRef name='Q{}this-key' slot='1'/>
           </fn>
           <applyT role='content' line='2420' bSlot='1'>
            <slash role='select' simple='1'>
             <varRef name='Q{}this-element' slot='2'/>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <withParam name='Q{}nodeset' flags='t' as='xs:string'>
             <varRef line='2421' name='Q{}this-element-refi' slot='3'/>
            </withParam>
            <withParam name='Q{}recalculate' flags='t' as='xs:boolean'>
             <true/>
            </withParam>
           </applyT>
          </resultDoc>
         </let>
        </let>
       </sequence>
      </let>
     </forEach>
    </let>
   </sequence>
  </template>
 </co>
 <co id='52' binds='55 54'>
  <mode name='Q{}add-context' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='0.0' seq='41' rank='0' minImp='0' slots='2' flags='s' line='2849' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2850'>
     <param name='Q{}model-key' slot='0' flags='t' as='xs:string'>
      <str role='select' val='saxon-forms-default-model'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|model-key'>
       <check card='1' diag='8|0|XTTE0590|model-key'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|model-key'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <copy line='2853' flags='cin'>
      <sequence role='content'>
       <copyOf flags='vc'>
        <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       </copyOf>
       <att line='2854' name='model-context' flags='l'>
        <varRef name='Q{}model-key' slot='0'/>
       </att>
       <let line='2856' var='Q{}instance-context' as='xs:string' slot='1' eval='16'>
        <treat line='2857' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|instance-context'>
         <check card='1' diag='3|0|XTTE0570|instance-context'>
          <cvUntyped to='xs:string' diag='3|0|XTTE0570|instance-context'>
           <data>
            <applyT mode='Q{}get-context-instance-id' bSlot='0'>
             <dot role='select' type='element(Q{http://www.w3.org/2002/xforms}bind)'/>
             <withParam name='Q{}nodeset' as='xs:string?'>
              <choose line='2858'>
               <fn name='exists'>
                <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
               </fn>
               <cast as='xs:string' emptiable='1'>
                <attVal name='Q{}nodeset' chk='0'/>
               </cast>
               <true/>
               <str val=''/>
              </choose>
             </withParam>
            </applyT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <sequence line='2862'>
         <att name='instance-context' flags='l'>
          <varRef name='Q{}instance-context' slot='1'/>
         </att>
         <choose line='2867'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
          </fn>
          <att line='2868' name='nodeset' flags='l'>
           <fn line='2869' name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <mergeAdj>
               <applyT mode='Q{}get-data-ref' bSlot='1'>
                <dot role='select' type='element(Q{http://www.w3.org/2002/xforms}bind)'/>
               </applyT>
              </mergeAdj>
             </data>
            </convert>
            <str val=''/>
           </fn>
          </att>
          <true/>
          <att line='2873' name='nodeset' flags='l'>
           <fn name='concat'>
            <str val='instance('/>
            <varRef name='Q{}instance-context' slot='1'/>
            <str val=')'/>
           </fn>
          </att>
         </choose>
        </sequence>
       </let>
      </sequence>
     </copy>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='56' binds=''>
  <globalVariable name='Q{}saxon-forms-javascript' type='xs:string' line='6' module='xforms-javascript-library.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='&#xA;        var XFormsDoc = null;&#xA;        var XForm = null;&#xA;        var defaultInstance = null;&#xA;        &#xA;        var models = {}&#xA;        var instances = {};&#xA;        var bindings = [];&#xA;        var actions = {};&#xA;        var submissions = {};&#xA;        var outputs = {};&#xA;        var repeats = {};&#xA;        var repeatContextNodesets = {};       &#xA;        &#xA;        var repeatIndexMap = {};&#xA;        var repeatSizeMap = {};&#xA;        var elementsUsingIndexFunction = {};&#xA;                &#xA;        var deferredUpdateFlags = {};&#xA;                &#xA;        var getCurrentDate = function(){&#xA;            var today = new Date();&#xA;            var dd = today.getDate();&#xA;            var mm = today.getMonth() + 1; //January is 0!&#xA;            var yyyy = today.getFullYear();&#xA;                &#xA;            if(dd &lt; 10) { dd = &#39;0&#39; + dd; }                 &#xA;            if(mm &lt; 10) { mm = &#39;0&#39; + mm; } &#xA;                &#xA;            today = yyyy + &#39;-&#39; + mm + &#39;-&#39; + dd;&#xA;            return today;&#xA;        }&#xA;        &#xA;        var setModel = function(name, value) {&#xA;            models[name] = value;&#xA;        }&#xA;        var getModel = function(name) {&#xA;            return models[name];&#xA;        }&#xA;        &#xA;        &#xA;        var setModelInstances = function(name, value) {&#xA;            modelInstanceMap[name] = value;&#xA;        } &#xA;        var setModelInstance = function(modelId, instanceId, value) {&#xA;                    &#xA;            if (modelId in modelInstanceMap) {&#xA;                var modelInstances = modelInstanceMap[modelId];&#xA;                modelInstances[instanceId] = value;&#xA;            }&#xA;            else {&#xA;                instanceMap = {};&#xA;                instanceMap[instanceId] = value;&#xA;                modelInstanceMap[modelId] = instanceMap;&#xA;            }&#xA;        } &#xA;        &#xA;        var setModelDefaultInstance = function(modelId, value) {&#xA;            modelDefaultInstanceMap[modelId] = value;&#xA;        }&#xA;                &#xA;        var getModelInstances = function(modelId) {&#xA;            return modelInstanceMap[modelId];&#xA;        } &#xA;        var getModelInstance = function(modelId, instanceId) {&#xA;            var modelInstances = modelInstanceMap[modelId];&#xA;            return modelInstances[instanceId];&#xA;        }&#xA;                &#xA;        var setModelInstanceKey = function(modelId, instanceId) {&#xA;            if (modelId in modelInstanceKeyMap) {&#xA;                var modelInstanceKeys = modelInstanceKeyMap[modelId];&#xA;                modelInstanceKeys.push(instanceId);&#xA;            }&#xA;            else {&#xA;                modelInstanceKeyMap[modelId] = [instanceId];&#xA;            }&#xA;        }&#xA;                &#xA;        var getModelInstanceKeys = function(modelId) {&#xA;            return modelInstanceKeyMap[modelId];&#xA;        }&#xA;                &#xA;        var setBinding = function(value) {&#xA;            bindings.push(value);&#xA;        } &#xA;        var getBindings = function() {&#xA;            return bindings;&#xA;        }&#xA;&#xA;&#xA;        var setXFormsDoc = function(doc) {&#xA;            XFormsDoc = doc;&#xA;        }&#xA;                &#xA;        var getXFormsDoc = function() {&#xA;            return XFormsDoc;&#xA;        }&#xA;                &#xA;        var setXForm = function(element) {&#xA;            XForm = element;&#xA;        }&#xA;                &#xA;        var getXForm = function() {&#xA;            return XForm;&#xA;        }&#xA;                &#xA;                &#xA;        var setInstance = function(name, value) {&#xA;            instances[name] = value;&#xA;        } &#xA;                &#xA;        var getInstance = function(name) {&#xA;            return instances[name];&#xA;        }&#xA;        &#xA;        var setDefaultInstance = function(doc) {&#xA;            defaultInstance = doc;&#xA;        }&#xA;                &#xA;        var getDefaultInstance = function() {&#xA;            return defaultInstance;&#xA;        }&#xA;                &#xA;        var getInstanceKeys = function() {&#xA;            return Object.keys(instances);&#xA;        }&#xA;         &#xA;         // !! return value does not match required data type map(xs:string, element())&#xA;        var getInstances = function() {&#xA;            return instances;&#xA;        }&#xA;                &#xA;        var setDeferredUpdateFlag = function(name) {&#xA;            deferredUpdateFlags[name] = &#39;true&#39;;&#xA;        } &#xA;        var setDeferredUpdateFlags = function(names) {&#xA;            names.forEach(setDeferredUpdateFlag);&#xA;        } &#xA;                &#xA;        var clearDeferredUpdateFlag = function(name) {&#xA;            deferredUpdateFlags[name] = null; &#xA;        }&#xA;        var clearDeferredUpdateFlags = function() {&#xA;            Object.keys(deferredUpdateFlags).forEach(clearDeferredUpdateFlag); &#xA;        }&#xA;                &#xA;        var getDeferredUpdateFlag = function(name) {&#xA;            return deferredUpdateFlags[name];&#xA;        }&#xA;        var getDeferredUpdateFlags = function() {&#xA;            return deferredUpdateFlags;&#xA;        }&#xA;                &#xA;                &#xA;        var addAction = function(name, value){&#xA;            actions[name] = value;&#xA;        }&#xA;                &#xA;        var getAction = function(name){&#xA;            return actions[name];&#xA;        }&#xA;                &#xA;        var updateAction = function(actioni, key, value){&#xA;            actioni[key] = value;&#xA;            return actioni;&#xA;        }&#xA;                &#xA;        var addSubmission = function(name, value){&#xA;            submissions[name] = value;&#xA;        }&#xA;                &#xA;        var getSubmission = function(name){&#xA;            return submissions[name];&#xA;        }     &#xA;                &#xA;        var addOutput = function(name, value){&#xA;            outputs[name] = value;&#xA;        }&#xA;                &#xA;        var getOutput = function(name){&#xA;            return outputs[name];&#xA;        }&#xA;                &#xA;        var getOutputKeys = function() {&#xA;            return Object.keys(outputs);&#xA;        }&#xA;                &#xA;        // repeats is a map of HTML IDs to (parsed) xf:repeat/@nodeset values&#xA;        var addRepeat = function(name, value){&#xA;            repeats[name] = value;&#xA;        }&#xA;        var addRepeatContext = function(name, value) {&#xA;            repeatContextNodesets[name] = value;&#xA;        }&#xA;                &#xA;        var getRepeat = function(name){&#xA;            return repeats[name];&#xA;        }&#xA;        var getRepeatContext = function(name){&#xA;            return repeatContextNodesets[name];&#xA;        }&#xA;        &#xA;        var getRepeatKeys = function() {&#xA;            return Object.keys(repeats);&#xA;        }&#xA;                &#xA;                                &#xA;        var getRepeatIndexMap = function() {&#xA;            return repeatIndexMap;&#xA;        }&#xA;                &#xA;        var setRepeatIndex = function(name, value) {&#xA;            repeatIndexMap[name] = value;&#xA;        }&#xA;                &#xA;        var getRepeatIndex = function(name) {&#xA;            if ( typeof(repeatIndexMap[name]) != &#39;undefined&#39; ) {&#xA;                return repeatIndexMap[name];&#xA;            }&#xA;            else {&#xA;                return 0;&#xA;            }&#xA;        } &#xA;                &#xA;        var setRepeatSize = function(name, value) {&#xA;            repeatSizeMap[name] = value;&#xA;        }&#xA;                &#xA;        var getRepeatSize = function(name) {&#xA;            if ( typeof(repeatSizeMap[name]) != &#39;undefined&#39; ) {&#xA;                return repeatSizeMap[name];&#xA;            }&#xA;            else {&#xA;                return 0;&#xA;            }&#xA;        } &#xA;                &#xA;        var setElementUsingIndexFunction = function(name, value) {&#xA;            elementsUsingIndexFunction[name] = value;&#xA;        } &#xA;                &#xA;        var getElementUsingIndexFunction = function(name) {&#xA;            return elementsUsingIndexFunction[name];&#xA;        }&#xA;                &#xA;        var getElementsUsingIndexFunctionKeys = function() {&#xA;            return Object.keys(elementsUsingIndexFunction);&#xA;        }&#xA;                &#xA;                &#xA;        var startTime = function(name) {&#xA;            console.time(name);&#xA;        }&#xA;                &#xA;        var endTime = function(name) {&#xA;            console.timeEnd(name);&#xA;        }&#xA;                &#xA;        var highlightClicked = function(id) {&#xA;            var item = document.getElementById(id);&#xA;            toggleClass(item);&#xA;        }&#xA;                &#xA;        var toggleClass = function(element) {&#xA;            if (element.className == &#39;selected&#39;) {&#xA;                element.classList.remove(&#39;selected&#39;);&#xA;            }&#xA;            else {&#xA;                var x = document.getElementsByClassName(&#39;selected&#39;);&#xA;                var i;&#xA;                for (i = 0; i &lt; x.length; i++) {&#xA;                    x[i].classList.remove(&#39;selected&#39;);&#xA;                } &#xA;                element.classList.add(&#39;selected&#39;);&#xA;             }&#xA;         }&#xA;                &#xA;         var setFocus = function(id) {&#xA;            var item = document.getElementById(id);&#xA;            item.focus();&#xA;            // alert(&#39;setFocus on &#39; + id);&#xA;         }&#xA;         &#xA;    '/>
  </globalVariable>
 </co>
 <co id='57' binds=''>
  <globalVariable name='Q{}xforms-actions' type='xs:string+' line='108' module='saxon-xforms.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n&gt;=1;};'>
   <literal count='15'>
    <str val='setvalue'/>
    <str val='insert'/>
    <str val='delete'/>
    <str val='setindex'/>
    <str val='toggle'/>
    <str val='setfocus'/>
    <str val='dispatch'/>
    <str val='rebuild'/>
    <str val='recalculate'/>
    <str val='revalidate'/>
    <str val='refresh'/>
    <str val='reset'/>
    <str val='load'/>
    <str val='send'/>
    <str val='message'/>
   </literal>
  </globalVariable>
 </co>
 <co id='58' vis='PUBLIC' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}foo' line='91' module='xforms-function-library.xsl' eval='16' flags='pU' as='xs:boolean' slots='1'>
   <arg name='Q{}num' as='xs:integer'/>
   <compareToInt role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ map=~' line='94' op='lt' val='5'>
    <varRef name='Q{}num' slot='0'/>
   </compareToInt>
  </function>
 </co>
 <co id='59' binds='60 60'>
  <globalVariable name='Q{}LOGLEVEL_INT' type='xs:integer' line='73' module='saxon-xforms.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.integer.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <choose ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='73'>
    <castable as='xs:integer' emptiable='0'>
     <gVarRef name='Q{}LOGLEVEL' bSlot='0'/>
    </castable>
    <cast as='xs:integer' emptiable='0'>
     <gVarRef name='Q{}LOGLEVEL' bSlot='1'/>
    </cast>
    <true/>
    <int val='100'/>
   </choose>
  </globalVariable>
 </co>
 <co id='61' binds=''>
  <globalParam name='Q{}xforms-cache-id' type='xs:string' line='76' module='saxon-xforms.xsl' visibility='PUBLIC' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='xforms-cache'/>
  </globalParam>
 </co>
 <co id='62' binds=''>
  <globalVariable name='Q{}xforms-controls' type='xs:string+' line='124' module='saxon-xforms.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n&gt;=1;};'>
   <literal count='9'>
    <str val='input'/>
    <str val='secret'/>
    <str val='textarea'/>
    <str val='output'/>
    <str val='upload'/>
    <str val='range'/>
    <str val='trigger'/>
    <str val='select'/>
    <str val='select1'/>
   </literal>
  </globalVariable>
 </co>
 <co id='1' vis='PUBLIC' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}impose' line='22' module='xforms-function-library.xsl' eval='16' flags='pU' as='xs:string' slots='2'>
   <arg name='Q{}input' as='xs:string'/>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ map=~' line='51' var='Q{}input2' as='xs:string' slot='1' eval='8'>
    <fn name='string-join'>
     <analyzeString line='33'>
      <varRef role='select' name='Q{}input' slot='0'/>
      <str role='regex' val='\i\c*\('/>
      <str role='flags' val=''/>
      <choose role='matching' line='36'>
       <gc op='=' card='N:1' comp='CCC'>
        <literal count='6'>
         <str val='instance'/>
         <str val='index'/>
         <str val='avg'/>
         <str val='foo'/>
         <str val='current-date'/>
         <str val='random'/>
        </literal>
        <fn name='substring-before'>
         <dot type='xs:string'/>
         <str val='('/>
        </fn>
       </gc>
       <fn line='37' name='concat'>
        <str val='xforms:'/>
        <dot type='xs:string'/>
       </fn>
       <true/>
       <dot line='41' type='xs:string'/>
      </choose>
      <dot role='nonMatching' line='46' type='xs:string'/>
     </analyzeString>
    </fn>
    <choose line='56'>
     <fn name='matches'>
      <varRef name='Q{}input2' slot='1'/>
      <str val='^\s*/'/>
      <str val=''/>
     </fn>
     <fn line='57' name='replace'>
      <varRef name='Q{}input2' slot='1'/>
      <str val='^\s/[^/]+'/>
      <str val='.'/>
      <str val=''/>
     </fn>
     <fn line='60' name='matches'>
      <varRef name='Q{}input2' slot='1'/>
      <str val='^\s*xforms:instance\s*\(\s*&#39;[^&#39;]+&#39;\s*\)'/>
      <str val=''/>
     </fn>
     <fn line='61' name='replace'>
      <varRef name='Q{}input2' slot='1'/>
      <str val='^\s*xforms:instance\s*\(\s*&#39;[^&#39;]+&#39;\s*\)'/>
      <str val='.'/>
      <str val=''/>
     </fn>
     <true/>
     <varRef line='64' name='Q{}input2' slot='1'/>
    </choose>
   </let>
  </function>
 </co>
 <co id='63' binds=''>
  <globalVariable name='Q{}xform-functions' type='xs:string+' line='20' module='xforms-function-library.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n&gt;=1;};'>
   <literal count='6'>
    <str val='instance'/>
    <str val='index'/>
    <str val='avg'/>
    <str val='foo'/>
    <str val='current-date'/>
    <str val='random'/>
   </literal>
  </globalVariable>
 </co>
 <co id='64' binds='17'>
  <template name='Q{}xforms-submit-done' flags='os' line='3198' module='saxon-xforms.xsl' slots='1'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3199'>
    <param name='Q{}when-done' slot='0' flags='t' as='map(*)*'>
     <empty role='select'/>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|when-done'>
      <supplied slot='0'/>
     </treat>
    </param>
    <forEach line='3201'>
     <varRef name='Q{}when-done' slot='0'/>
     <callT line='3204' name='Q{}applyActions' bSlot='0'>
      <withParam name='Q{}action-map' flags='t' as='item()'>
       <dot line='3202' type='map(*)'/>
      </withParam>
     </callT>
    </forEach>
   </sequence>
  </template>
 </co>
 <co id='60' binds=''>
  <globalParam name='Q{}LOGLEVEL' type='xs:string' line='72' module='saxon-xforms.xsl' visibility='PUBLIC' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='40'/>
  </globalParam>
 </co>
 <co id='55' binds='55 3'>
  <mode name='Q{}get-context-instance-id' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='5' rank='0' minImp='0' slots='6' flags='s' as='xs:string' line='421' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='Q{http://www.w3.org/2002/xforms}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.w3.org/2002/xforms&#39;'/>
    <check role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='422' card='1' diag='7|0|XTTE0505|match="xforms:*" mode="get-context-instance-id"'>
     <sequence>
      <param name='Q{}default-instance-id' slot='0' flags='t' as='xs:string'>
       <str role='select' val='saxon-forms-default-instance'/>
       <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|default-instance-id'>
        <check card='1' diag='8|0|XTTE0590|default-instance-id'>
         <cvUntyped to='xs:string' diag='8|0|XTTE0590|default-instance-id'>
          <data>
           <supplied slot='0'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <param line='423' name='Q{}nodeset' slot='1' as='xs:string'>
       <str role='select' val=''/>
       <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
        <check card='1' diag='8|0|XTTE0590|nodeset'>
         <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
          <data>
           <supplied slot='1'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <let line='426' var='Q{}referenced-instance-id' as='xs:string?' slot='2' eval='7'>
       <choose line='428'>
        <fn name='exists'>
         <axis name='attribute' nodeTest='attribute(Q{}bind)' jsTest='return item.name===&#39;bind&#39;'/>
        </fn>
        <let line='429' var='Q{}bind' as='xs:string' slot='3' eval='16'>
         <check card='1' diag='3|0|XTTE0570|bind'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}bind' chk='0'/>
          </cast>
         </check>
         <let line='430' var='Q{}this-binding' as='element(Q{http://www.w3.org/2002/xforms}bind)?' slot='4' eval='7'>
          <check card='?' diag='3|0|XTTE0570|this-binding'>
           <docOrder intra='1'>
            <filter flags='b'>
             <slash simple='2'>
              <fn name='reverse'>
               <slash simple='1'>
                <dot type='Q{http://www.w3.org/2002/xforms}*'/>
                <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
               </slash>
              </fn>
              <axis name='descendant' nodeTest='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;'/>
             </slash>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}id' chk='0'/>
              </cast>
              <varRef name='Q{}bind' slot='3'/>
             </vc>
            </filter>
           </docOrder>
          </check>
          <choose line='432'>
           <fn name='exists'>
            <varRef name='Q{}this-binding' slot='4'/>
           </fn>
           <treat line='433' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|referenced-instance-id'>
            <check card='?' diag='3|0|XTTE0570|referenced-instance-id'>
             <cvUntyped to='xs:string' diag='3|0|XTTE0570|referenced-instance-id'>
              <data>
               <applyT mode='Q{}get-context-instance-id' bSlot='0'>
                <varRef role='select' name='Q{}this-binding' slot='4'/>
                <withParam name='Q{}nodeset' as='xs:string?'>
                 <choose line='434'>
                  <fn name='exists'>
                   <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
                  </fn>
                  <cast as='xs:string' emptiable='1'>
                   <attVal name='Q{}nodeset' chk='0'/>
                  </cast>
                  <true/>
                  <str val=''/>
                 </choose>
                </withParam>
               </applyT>
              </data>
             </cvUntyped>
            </check>
           </treat>
          </choose>
         </let>
        </let>
        <varRef line='446' name='Q{}nodeset' slot='1'/>
        <ufCall line='447' name='Q{http://www.w3.org/2002/xforms}getInstanceId' tailCall='false' bSlot='1' eval='6'>
         <varRef name='Q{}nodeset' slot='1'/>
        </ufCall>
       </choose>
       <choose line='454'>
        <fn name='exists'>
         <varRef name='Q{}referenced-instance-id' slot='2'/>
        </fn>
        <varRef line='455' name='Q{}referenced-instance-id' slot='2'/>
        <true/>
        <let line='461' var='Q{}local-default-instance' as='element(Q{http://www.w3.org/2002/xforms}instance)?' slot='5' eval='7'>
         <choose>
          <fn name='exists'>
           <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
          </fn>
          <check card='?' diag='3|0|XTTE0570|local-default-instance'>
           <docOrder intra='1'>
            <slash>
             <fn name='reverse'>
              <slash simple='1'>
               <dot type='Q{http://www.w3.org/2002/xforms}*'/>
               <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
              </slash>
             </fn>
             <first>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}instance)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;instance&#39;;'/>
             </first>
            </slash>
           </docOrder>
          </check>
          <true/>
          <check card='?' diag='3|0|XTTE0570|local-default-instance'>
           <docOrder intra='1'>
            <slash>
             <docOrder intra='1'>
              <slash>
               <fn name='reverse'>
                <slash simple='1'>
                 <dot type='Q{http://www.w3.org/2002/xforms}*'/>
                 <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
                </slash>
               </fn>
               <first>
                <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
               </first>
              </slash>
             </docOrder>
             <first>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}instance)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;instance&#39;;'/>
             </first>
            </slash>
           </docOrder>
          </check>
         </choose>
         <choose line='463'>
          <fn name='exists'>
           <varRef name='Q{}local-default-instance' slot='5'/>
          </fn>
          <choose line='464'>
           <fn name='exists'>
            <slash simple='1'>
             <varRef name='Q{}local-default-instance' slot='5'/>
             <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
            </slash>
           </fn>
           <cast as='xs:string' emptiable='1'>
            <data>
             <slash simple='1'>
              <varRef name='Q{}local-default-instance' slot='5'/>
              <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
             </slash>
            </data>
           </cast>
           <true/>
           <varRef name='Q{}default-instance-id' slot='0'/>
          </choose>
          <true/>
          <varRef line='467' name='Q{}default-instance-id' slot='0'/>
         </choose>
        </let>
       </choose>
      </let>
     </sequence>
    </check>
   </templateRule>
  </mode>
 </co>
 <co id='47' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}check-required-fields' line='870' module='saxon-xforms.xsl' eval='8' flags='pU' as='item()*' slots='3'>
   <arg name='Q{}instanceXML' as='element()'/>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='873' var='Q{}required-fieldsi' as='element()*' slot='1' eval='8'>
    <filter flags='b'>
     <slash simple='1'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
      <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
     </slash>
     <fn name='exists'>
      <axis name='attribute' nodeTest='attribute(Q{}data-required)' jsTest='return item.name===&#39;data-required&#39;'/>
     </fn>
    </filter>
    <forEach line='875'>
     <varRef name='Q{}required-fieldsi' slot='1'/>
     <let line='876' var='Q{}resulti' as='xs:boolean' slot='2' eval='16'>
      <treat line='879' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='3|0|XTTE0570|resulti'>
       <check card='1' diag='3|0|XTTE0570|resulti'>
        <cvUntyped to='xs:boolean' diag='3|0|XTTE0570|resulti'>
         <data>
          <evaluate dxns=''>
           <str role='xpath' val='child::node() or string-length() gt 0'/>
           <dot role='cxt' type='element()'/>
           <varRef role='nsCxt' name='Q{}instanceXML' slot='0'/>
           <str role='sa' val='no'/>
           <map role='options' size='0'/>
           <map role='wp' size='0'/>
          </evaluate>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <sequence line='882'>
       <message>
        <sequence role='select'>
         <valueOf>
          <str val='[xforms:check-required-fields] Evaluating XPath: '/>
         </valueOf>
         <str val='child::node() or string-length() gt 0'/>
        </sequence>
        <str role='terminate' val='no'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
       <message line='883'>
        <sequence role='select'>
         <valueOf>
          <str val='[xforms:check-required-fields] XPath result: '/>
         </valueOf>
         <varRef name='Q{}resulti' slot='2'/>
        </sequence>
        <str role='terminate' val='no'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
       <choose line='884'>
        <fn name='not'>
         <varRef name='Q{}resulti' slot='2'/>
        </fn>
        <dot type='element()'/>
       </choose>
      </sequence>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id='26' vis='PUBLIC' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}index' line='98' module='xforms-function-library.xsl' eval='16' flags='pU' as='xs:integer' slots='2'>
   <arg name='Q{}repeatID' as='xs:string'/>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ map=~' line='102' var='Q{}repeat-index' as='xs:double?' slot='1' eval='7'>
    <check card='?' diag='3|0|XTTE0570|repeat-index'>
     <convert from='xs:anyAtomicType' to='xs:double' flags='p' diag='3|0|XTTE0570|repeat-index'>
      <cvUntyped to='xs:double' diag='3|0|XTTE0570|repeat-index'>
       <data>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
         <check card='1' diag='0|0||ixsl:call'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
         </check>
         <str val='getRepeatIndex'/>
         <arrayBlock>
          <varRef name='Q{}repeatID' slot='0'/>
         </arrayBlock>
        </ifCall>
       </data>
      </cvUntyped>
     </convert>
    </check>
    <choose line='105'>
     <fn name='exists'>
      <varRef name='Q{}repeat-index' slot='1'/>
     </fn>
     <check card='1' diag='5|0|XTTE0780|xforms:index#1'>
      <cast as='xs:integer' emptiable='1'>
       <varRef name='Q{}repeat-index' slot='1'/>
      </cast>
     </check>
     <true/>
     <int val='0'/>
    </choose>
   </let>
  </function>
 </co>
 <co id='65' binds=''>
  <globalVariable name='Q{}global-default-instance-id' type='xs:string' line='88' module='saxon-xforms.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='saxon-forms-default-instance'/>
  </globalVariable>
 </co>
 <co id='7' binds='7'>
  <mode name='Q{}delete-node' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.5' seq='28' rank='0' minImp='0' slots='2' flags='s' line='1826' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1827'>
     <param name='Q{}delete-node' slot='0' flags='t' as='node()*'>
      <empty role='select'/>
      <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|delete-node'>
       <supplied slot='0'/>
      </treat>
     </param>
     <choose line='1830'>
      <some var='Q{}n' slot='1'>
       <varRef name='Q{}delete-node' slot='0'/>
       <is op='is'>
        <varRef name='Q{}n' slot='1'/>
        <dot type='element()'/>
       </is>
      </some>
      <empty/>
      <true/>
      <copy line='1835' flags='cin'>
       <sequence role='content'>
        <copyOf flags='vc'>
         <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
        </copyOf>
        <applyT line='1836' mode='Q{}delete-node' bSlot='0'>
         <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
        </applyT>
       </sequence>
      </copy>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='66' binds=''>
  <mode name='Q{}get-field' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='37' rank='0' minImp='0' slots='0' flags='s' line='2037' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:textarea' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;textarea&#39;'/>
    <ifCall role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2039' name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
     <dot type='*:textarea'/>
     <str val='value'/>
    </ifCall>
   </templateRule>
   <templateRule prec='0' prio='-0.25' seq='36' rank='0' minImp='0' slots='0' flags='s' line='2027' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:select' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;select&#39;'/>
    <ifCall role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2029' name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
     <check card='?' diag='0|0||ixsl:get'>
      <filter flags='b'>
       <axis name='child' nodeTest='element(Q{}option)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;option&#39;;'/>
       <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
        <data>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
          <dot type='element(Q{}option)'/>
          <str val='selected'/>
         </ifCall>
        </data>
        <true/>
       </gc>
      </filter>
     </check>
     <str val='value'/>
    </ifCall>
   </templateRule>
   <templateRule prec='0' prio='-0.25' seq='35' rank='0' minImp='0' slots='0' flags='s' line='2009' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:input' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;input&#39;'/>
    <choose role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2012'>
     <and op='and'>
      <fn name='exists'>
       <axis name='attribute' nodeTest='attribute(Q{}type)' jsTest='return item.name===&#39;type&#39;'/>
      </fn>
      <vc op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <attVal name='Q{}type' chk='0'/>
       </cast>
       <str val='checkbox'/>
      </vc>
     </and>
     <choose line='2013'>
      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <data>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
         <dot type='*:input'/>
         <str val='checked'/>
        </ifCall>
       </data>
       <true/>
      </gc>
      <str val='true'/>
      <true/>
      <str val=''/>
     </choose>
     <true/>
     <ifCall line='2016' name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
      <dot type='*:input'/>
      <str val='value'/>
     </ifCall>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id='67' binds='52 1 1'>
  <mode name='Q{}get-binding' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='4' rank='0' minImp='0' slots='10' flags='s' line='353' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='Q{http://www.w3.org/2002/xforms}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.w3.org/2002/xforms&#39;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='354'>
     <param name='Q{}instance-id' slot='0' flags='t' as='xs:string'>
      <str role='select' val='saxon-forms-default-instance'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|instance-id'>
       <check card='1' diag='8|0|XTTE0590|instance-id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|instance-id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='355' name='Q{}nodeset' slot='1' flags='t' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='356' name='Q{}bindings-js' slot='2' flags='t' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
      <empty role='select'/>
      <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='8|0|XTTE0590|bindings-js'>
       <supplied slot='2'/>
      </treat>
     </param>
     <choose line='361'>
      <fn name='exists'>
       <axis name='attribute' nodeTest='attribute(Q{}bind)' jsTest='return item.name===&#39;bind&#39;'/>
      </fn>
      <let line='362' var='Q{}bind' as='xs:string' slot='3' eval='16'>
       <check card='1' diag='3|0|XTTE0570|bind'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}bind' chk='0'/>
        </cast>
       </check>
       <let line='363' var='Q{}this-binding' as='element(Q{http://www.w3.org/2002/xforms}bind)?' slot='4' eval='7'>
        <check card='?' diag='3|0|XTTE0570|this-binding'>
         <docOrder intra='1'>
          <filter flags='b'>
           <slash simple='2'>
            <fn name='reverse'>
             <slash simple='1'>
              <dot type='Q{http://www.w3.org/2002/xforms}*'/>
              <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
             </slash>
            </fn>
            <axis name='descendant' nodeTest='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}id' chk='0'/>
            </cast>
            <varRef name='Q{}bind' slot='3'/>
           </vc>
          </filter>
         </docOrder>
        </check>
        <choose line='365'>
         <fn name='exists'>
          <varRef name='Q{}this-binding' slot='4'/>
         </fn>
         <applyT line='366' mode='Q{}add-context' flags='t' bSlot='0'>
          <varRef role='select' name='Q{}this-binding' slot='4'/>
         </applyT>
        </choose>
       </let>
      </let>
      <and line='377' op='and'>
       <varRef name='Q{}nodeset' slot='1'/>
       <fn name='exists'>
        <varRef name='Q{}bindings-js' slot='2'/>
       </fn>
      </and>
      <let line='380' var='Q{}instanceXML' as='element()' slot='5' eval='16'>
       <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
        <check card='1' diag='3|0|XTTE0570|instanceXML'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='getInstance'/>
          <arrayBlock>
           <varRef name='Q{}instance-id' slot='0'/>
          </arrayBlock>
         </ifCall>
        </check>
       </treat>
       <let line='381' var='Q{}context-node' as='node()*' slot='6' eval='8'>
        <treat line='382' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|context-node'>
         <evaluate dxns=''>
          <ufCall role='xpath' line='379' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='6'>
           <varRef name='Q{}nodeset' slot='1'/>
          </ufCall>
          <varRef role='cxt' name='Q{}instanceXML' slot='5'/>
          <varRef role='nsCxt' name='Q{}instanceXML' slot='5'/>
          <str role='sa' val='no'/>
          <map role='options' size='0'/>
          <map role='wp' size='0'/>
         </evaluate>
        </treat>
        <forEach line='387'>
         <varRef name='Q{}bindings-js' slot='2'/>
         <choose line='389'>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}instance-context' chk='0'/>
           </cast>
           <varRef name='Q{}instance-id' slot='0'/>
          </vc>
          <let line='397' var='Q{http://saxon.sf.net/generated-variable}v0' as='node()?' slot='7' eval='13'>
           <check card='?' diag='1|1||is'>
            <varRef name='Q{}context-node' slot='6'/>
           </check>
           <let line='393' var='Q{}binding-context-node' as='node()*' slot='8' eval='8'>
            <treat line='394' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|binding-context-node'>
             <evaluate dxns=''>
              <ufCall role='xpath' line='391' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='2' eval='16'>
               <check card='1' diag='0|0||xforms:impose'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}nodeset' chk='0'/>
                </cast>
               </check>
              </ufCall>
              <varRef role='cxt' name='Q{}instanceXML' slot='5'/>
              <varRef role='nsCxt' name='Q{}instanceXML' slot='5'/>
              <str role='sa' val='no'/>
              <map role='options' size='0'/>
              <map role='wp' size='0'/>
             </evaluate>
            </treat>
            <choose line='397'>
             <some var='Q{}n' slot='9'>
              <varRef name='Q{}binding-context-node' slot='8'/>
              <is op='is'>
               <varRef name='Q{}n' slot='9'/>
               <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='7'/>
              </is>
             </some>
             <dot line='399' type='element(Q{http://www.w3.org/2002/xforms}bind)'/>
            </choose>
           </let>
          </let>
         </choose>
        </forEach>
       </let>
      </let>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='39' binds='68 42 69 54 55 67 70 71 39 54 55 1 39 39 39 39'>
  <mode onNo='TC' flags='dW' patternSlots='0'>
   <templateRule prec='0' prio='-0.5' seq='13' rank='0' minImp='0' slots='0' flags='s' line='1024' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='document-node()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);'/>
    <callT role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1025' name='Q{}xformsjs-main' bSlot='0' flags='t'>
     <withParam name='Q{}xFormsId' flags='c' as='xs:string'>
      <gVarRef line='1026' name='Q{}xform-html-id' bSlot='1'/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='31' rank='2' minImp='0' slots='1' flags='s' line='1904' module='saxon-xforms.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='Q{http://www.w3.org/2002/xforms}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.w3.org/2002/xforms&#39;'/>
     <gc ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1904' op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
      <literal count='15'>
       <str val='setvalue'/>
       <str val='insert'/>
       <str val='delete'/>
       <str val='setindex'/>
       <str val='toggle'/>
       <str val='setfocus'/>
       <str val='dispatch'/>
       <str val='rebuild'/>
       <str val='recalculate'/>
       <str val='revalidate'/>
       <str val='refresh'/>
       <str val='reset'/>
       <str val='load'/>
       <str val='send'/>
       <str val='message'/>
      </literal>
      <fn name='local-name'>
       <dot type='Q{http://www.w3.org/2002/xforms}*'/>
      </fn>
     </gc>
    </p.withPredicate>
    <let role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1912' var='Q{}action-map' as='map(*)' slot='0' eval='16'>
     <treat line='1913' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|action-map'>
      <check card='1' diag='3|0|XTTE0570|action-map'>
       <applyT mode='Q{}set-action' bSlot='2'>
        <dot role='select' type='element()'/>
       </applyT>
      </check>
     </treat>
     <varRef line='1925' name='Q{}action-map' slot='0'/>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='14' rank='2' minImp='0' slots='10' flags='s' line='1038' module='saxon-xforms.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='Q{http://www.w3.org/2002/xforms}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.w3.org/2002/xforms&#39;'/>
     <gc ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1038' op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
      <literal count='9'>
       <str val='input'/>
       <str val='secret'/>
       <str val='textarea'/>
       <str val='output'/>
       <str val='upload'/>
       <str val='range'/>
       <str val='trigger'/>
       <str val='select'/>
       <str val='select1'/>
      </literal>
      <fn name='local-name'>
       <dot type='Q{http://www.w3.org/2002/xforms}*'/>
      </fn>
     </gc>
    </p.withPredicate>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1039'>
     <param name='Q{}position' slot='0' as='xs:integer'>
      <int role='select' val='0'/>
      <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|position'>
       <check card='1' diag='8|0|XTTE0590|position'>
        <cvUntyped to='xs:integer' diag='8|0|XTTE0590|position'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1040' name='Q{}context-position' slot='1' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|context-position'>
       <check card='1' diag='8|0|XTTE0590|context-position'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|context-position'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line='1047' var='Q{}string-position' as='xs:string' slot='2' eval='16'>
      <choose>
       <varRef name='Q{}context-position' slot='1'/>
       <varRef name='Q{}context-position' slot='1'/>
       <true/>
       <fn name='string'>
        <varRef name='Q{}position' slot='0'/>
       </fn>
      </choose>
      <let line='1051' var='Q{}myid' as='xs:string' slot='3' eval='16'>
       <choose>
        <fn name='exists'>
         <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
        </fn>
        <fn name='concat'>
         <attVal name='Q{}id' chk='0'/>
         <str val='-'/>
         <varRef name='Q{}string-position' slot='2'/>
        </fn>
        <true/>
        <fn name='concat'>
         <fn name='generate-id'>
          <dot type='element()'/>
         </fn>
         <str val='-'/>
         <varRef name='Q{}string-position' slot='2'/>
        </fn>
       </choose>
       <sequence line='1053'>
        <choose>
         <and op='and'>
          <let var='Q{}this' as='element()' slot='4' eval='16'>
           <dot type='element()'/>
           <fn line='2143' name='exists'>
            <sequence line='2118'>
             <analyzeString>
              <cvUntyped role='select' to='xs:string'>
               <data>
                <slash simple='1'>
                 <varRef name='Q{}this' slot='4'/>
                 <axis name='attribute' nodeTest='attribute(Q{}ref)' jsTest='return item.name===&#39;ref&#39;'/>
                </slash>
               </data>
              </cvUntyped>
              <str role='regex' val='\i\c*\('/>
              <str role='flags' val=''/>
              <choose role='matching' line='2121'>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <fn name='substring-before'>
                 <dot type='xs:string'/>
                 <str val='('/>
                </fn>
                <str val='index'/>
               </vc>
               <str val='i'/>
              </choose>
              <empty role='nonMatching'/>
             </analyzeString>
             <analyzeString line='2130'>
              <cvUntyped role='select' to='xs:string'>
               <data>
                <slash simple='1'>
                 <varRef name='Q{}this' slot='4'/>
                 <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
                </slash>
               </data>
              </cvUntyped>
              <str role='regex' val='\i\c*\('/>
              <str role='flags' val=''/>
              <choose role='matching' line='2133'>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <fn name='substring-before'>
                 <dot type='xs:string'/>
                 <str val='('/>
                </fn>
                <str val='index'/>
               </vc>
               <str val='i'/>
              </choose>
              <empty role='nonMatching'/>
             </analyzeString>
            </sequence>
           </fn>
          </let>
          <fn name='empty'>
           <filter flags='b'>
            <slash simple='1'>
             <dot type='element()'/>
             <axis name='ancestor' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <let var='Q{}this' as='element()' slot='5' eval='16'>
             <dot type='element()'/>
             <fn line='2143' name='exists'>
              <sequence line='2118'>
               <analyzeString>
                <cvUntyped role='select' to='xs:string'>
                 <data>
                  <slash simple='1'>
                   <varRef name='Q{}this' slot='5'/>
                   <axis name='attribute' nodeTest='attribute(Q{}ref)' jsTest='return item.name===&#39;ref&#39;'/>
                  </slash>
                 </data>
                </cvUntyped>
                <str role='regex' val='\i\c*\('/>
                <str role='flags' val=''/>
                <choose role='matching' line='2121'>
                 <vc op='eq' onEmpty='0' comp='CCC'>
                  <fn name='substring-before'>
                   <dot type='xs:string'/>
                   <str val='('/>
                  </fn>
                  <str val='index'/>
                 </vc>
                 <str val='i'/>
                </choose>
                <empty role='nonMatching'/>
               </analyzeString>
               <analyzeString line='2130'>
                <cvUntyped role='select' to='xs:string'>
                 <data>
                  <slash simple='1'>
                   <varRef name='Q{}this' slot='5'/>
                   <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
                  </slash>
                 </data>
                </cvUntyped>
                <str role='regex' val='\i\c*\('/>
                <str role='flags' val=''/>
                <choose role='matching' line='2133'>
                 <vc op='eq' onEmpty='0' comp='CCC'>
                  <fn name='substring-before'>
                   <dot type='xs:string'/>
                   <str val='('/>
                  </fn>
                  <str val='index'/>
                 </vc>
                 <str val='i'/>
                </choose>
                <empty role='nonMatching'/>
               </analyzeString>
              </sequence>
             </fn>
            </let>
           </filter>
          </fn>
         </and>
         <ifCall line='1054' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='setElementUsingIndexFunction'/>
          <arrayBlock>
           <varRef name='Q{}myid' slot='3'/>
           <dot type='element()'/>
          </arrayBlock>
         </ifCall>
        </choose>
        <let line='1058' var='Q{}refi' as='xs:string' slot='6' eval='16'>
         <treat line='1059' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|refi'>
          <check card='1' diag='3|0|XTTE0570|refi'>
           <cvUntyped to='xs:string' diag='3|0|XTTE0570|refi'>
            <data>
             <applyT mode='Q{}get-data-ref' bSlot='3'>
              <dot role='select' type='element()'/>
             </applyT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line='1062' var='Q{}this-instance-id' as='xs:string' slot='7' eval='16'>
          <treat line='1063' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-instance-id'>
           <check card='1' diag='3|0|XTTE0570|this-instance-id'>
            <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-instance-id'>
             <data>
              <applyT mode='Q{}get-context-instance-id' bSlot='4'>
               <dot role='select' type='element()'/>
               <withParam name='Q{}nodeset' as='xs:string'>
                <varRef line='1064' name='Q{}refi' slot='6'/>
               </withParam>
              </applyT>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <let line='1068' var='Q{}bindingi' as='element(Q{http://www.w3.org/2002/xforms}bind)*' slot='8' eval='3'>
           <treat line='1069' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='3|0|XTTE0570|bindingi'>
            <applyT mode='Q{}get-binding' bSlot='5'>
             <dot role='select' type='element()'/>
             <withParam name='Q{}instance-id' flags='t' as='xs:string'>
              <varRef line='1070' name='Q{}this-instance-id' slot='7'/>
             </withParam>
             <withParam name='Q{}nodeset' flags='t' as='xs:string'>
              <varRef line='1071' name='Q{}refi' slot='6'/>
             </withParam>
            </applyT>
           </treat>
           <let line='1078' var='Q{}actions' as='map(*)*' slot='9' eval='4'>
            <treat line='1079' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|actions'>
             <applyT mode='Q{}set-actions' bSlot='6'>
              <dot role='select' type='element()'/>
              <withParam name='Q{}instance-key' flags='t' as='xs:string'>
               <varRef line='1080' name='Q{}this-instance-id' slot='7'/>
              </withParam>
              <withParam name='Q{}nodeset' flags='t' as='xs:string'>
               <varRef line='1081' name='Q{}refi' slot='6'/>
              </withParam>
             </applyT>
            </treat>
            <sequence line='1086'>
             <choose>
              <fn name='exists'>
               <varRef name='Q{}actions' slot='9'/>
              </fn>
              <ifCall line='1087' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
               <check card='1' diag='0|0||ixsl:call'>
                <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
               </check>
               <str val='addAction'/>
               <arrayBlock>
                <varRef name='Q{}myid' slot='3'/>
                <varRef name='Q{}actions' slot='9'/>
               </arrayBlock>
              </ifCall>
             </choose>
             <applyT line='1090' mode='Q{}get-html' flags='t' bSlot='7'>
              <dot role='select' type='element()'/>
              <withParam name='Q{}id' as='xs:string'>
               <varRef line='1091' name='Q{}myid' slot='3'/>
              </withParam>
              <withParam name='Q{}instance-context' as='xs:string'>
               <varRef line='1093' name='Q{}this-instance-id' slot='7'/>
              </withParam>
              <withParam name='Q{}binding' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
               <varRef line='1094' name='Q{}bindingi' slot='8'/>
              </withParam>
              <withParam name='Q{}actions' as='map(*)*'>
               <varRef line='1095' name='Q{}actions' slot='9'/>
              </withParam>
              <withParam name='Q{}nodeset' flags='t' as='xs:string'>
               <varRef line='1092' name='Q{}refi' slot='6'/>
              </withParam>
             </applyT>
            </sequence>
           </let>
          </let>
         </let>
        </let>
       </sequence>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='11' rank='1' minImp='0' slots='0' flags='s' line='1005' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
    <applyT role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1006' flags='t' bSlot='8'>
     <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
    </applyT>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='14' part='1' rank='1' minImp='0' slots='10' flags='s' line='1038' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}group)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;group&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1039'>
     <param name='Q{}position' slot='0' as='xs:integer'>
      <int role='select' val='0'/>
      <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|position'>
       <check card='1' diag='8|0|XTTE0590|position'>
        <cvUntyped to='xs:integer' diag='8|0|XTTE0590|position'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1040' name='Q{}context-position' slot='1' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|context-position'>
       <check card='1' diag='8|0|XTTE0590|context-position'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|context-position'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line='1047' var='Q{}string-position' as='xs:string' slot='2' eval='16'>
      <choose>
       <varRef name='Q{}context-position' slot='1'/>
       <varRef name='Q{}context-position' slot='1'/>
       <true/>
       <fn name='string'>
        <varRef name='Q{}position' slot='0'/>
       </fn>
      </choose>
      <let line='1051' var='Q{}myid' as='xs:string' slot='3' eval='16'>
       <choose>
        <fn name='exists'>
         <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
        </fn>
        <fn name='concat'>
         <attVal name='Q{}id' chk='0'/>
         <str val='-'/>
         <varRef name='Q{}string-position' slot='2'/>
        </fn>
        <true/>
        <fn name='concat'>
         <fn name='generate-id'>
          <dot type='element()'/>
         </fn>
         <str val='-'/>
         <varRef name='Q{}string-position' slot='2'/>
        </fn>
       </choose>
       <sequence line='1053'>
        <choose>
         <and op='and'>
          <let var='Q{}this' as='element()' slot='4' eval='16'>
           <dot type='element()'/>
           <fn line='2143' name='exists'>
            <sequence line='2118'>
             <analyzeString>
              <cvUntyped role='select' to='xs:string'>
               <data>
                <slash simple='1'>
                 <varRef name='Q{}this' slot='4'/>
                 <axis name='attribute' nodeTest='attribute(Q{}ref)' jsTest='return item.name===&#39;ref&#39;'/>
                </slash>
               </data>
              </cvUntyped>
              <str role='regex' val='\i\c*\('/>
              <str role='flags' val=''/>
              <choose role='matching' line='2121'>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <fn name='substring-before'>
                 <dot type='xs:string'/>
                 <str val='('/>
                </fn>
                <str val='index'/>
               </vc>
               <str val='i'/>
              </choose>
              <empty role='nonMatching'/>
             </analyzeString>
             <analyzeString line='2130'>
              <cvUntyped role='select' to='xs:string'>
               <data>
                <slash simple='1'>
                 <varRef name='Q{}this' slot='4'/>
                 <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
                </slash>
               </data>
              </cvUntyped>
              <str role='regex' val='\i\c*\('/>
              <str role='flags' val=''/>
              <choose role='matching' line='2133'>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <fn name='substring-before'>
                 <dot type='xs:string'/>
                 <str val='('/>
                </fn>
                <str val='index'/>
               </vc>
               <str val='i'/>
              </choose>
              <empty role='nonMatching'/>
             </analyzeString>
            </sequence>
           </fn>
          </let>
          <fn name='empty'>
           <filter flags='b'>
            <slash simple='1'>
             <dot type='element()'/>
             <axis name='ancestor' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <let var='Q{}this' as='element()' slot='5' eval='16'>
             <dot type='element()'/>
             <fn line='2143' name='exists'>
              <sequence line='2118'>
               <analyzeString>
                <cvUntyped role='select' to='xs:string'>
                 <data>
                  <slash simple='1'>
                   <varRef name='Q{}this' slot='5'/>
                   <axis name='attribute' nodeTest='attribute(Q{}ref)' jsTest='return item.name===&#39;ref&#39;'/>
                  </slash>
                 </data>
                </cvUntyped>
                <str role='regex' val='\i\c*\('/>
                <str role='flags' val=''/>
                <choose role='matching' line='2121'>
                 <vc op='eq' onEmpty='0' comp='CCC'>
                  <fn name='substring-before'>
                   <dot type='xs:string'/>
                   <str val='('/>
                  </fn>
                  <str val='index'/>
                 </vc>
                 <str val='i'/>
                </choose>
                <empty role='nonMatching'/>
               </analyzeString>
               <analyzeString line='2130'>
                <cvUntyped role='select' to='xs:string'>
                 <data>
                  <slash simple='1'>
                   <varRef name='Q{}this' slot='5'/>
                   <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
                  </slash>
                 </data>
                </cvUntyped>
                <str role='regex' val='\i\c*\('/>
                <str role='flags' val=''/>
                <choose role='matching' line='2133'>
                 <vc op='eq' onEmpty='0' comp='CCC'>
                  <fn name='substring-before'>
                   <dot type='xs:string'/>
                   <str val='('/>
                  </fn>
                  <str val='index'/>
                 </vc>
                 <str val='i'/>
                </choose>
                <empty role='nonMatching'/>
               </analyzeString>
              </sequence>
             </fn>
            </let>
           </filter>
          </fn>
         </and>
         <ifCall line='1054' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='setElementUsingIndexFunction'/>
          <arrayBlock>
           <varRef name='Q{}myid' slot='3'/>
           <dot type='element()'/>
          </arrayBlock>
         </ifCall>
        </choose>
        <let line='1058' var='Q{}refi' as='xs:string' slot='6' eval='16'>
         <treat line='1059' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|refi'>
          <check card='1' diag='3|0|XTTE0570|refi'>
           <cvUntyped to='xs:string' diag='3|0|XTTE0570|refi'>
            <data>
             <applyT mode='Q{}get-data-ref' bSlot='3'>
              <dot role='select' type='element()'/>
             </applyT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line='1062' var='Q{}this-instance-id' as='xs:string' slot='7' eval='16'>
          <treat line='1063' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-instance-id'>
           <check card='1' diag='3|0|XTTE0570|this-instance-id'>
            <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-instance-id'>
             <data>
              <applyT mode='Q{}get-context-instance-id' bSlot='4'>
               <dot role='select' type='element()'/>
               <withParam name='Q{}nodeset' as='xs:string'>
                <varRef line='1064' name='Q{}refi' slot='6'/>
               </withParam>
              </applyT>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <let line='1068' var='Q{}bindingi' as='element(Q{http://www.w3.org/2002/xforms}bind)*' slot='8' eval='3'>
           <treat line='1069' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='3|0|XTTE0570|bindingi'>
            <applyT mode='Q{}get-binding' bSlot='5'>
             <dot role='select' type='element()'/>
             <withParam name='Q{}instance-id' flags='t' as='xs:string'>
              <varRef line='1070' name='Q{}this-instance-id' slot='7'/>
             </withParam>
             <withParam name='Q{}nodeset' flags='t' as='xs:string'>
              <varRef line='1071' name='Q{}refi' slot='6'/>
             </withParam>
            </applyT>
           </treat>
           <let line='1078' var='Q{}actions' as='map(*)*' slot='9' eval='4'>
            <treat line='1079' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|actions'>
             <applyT mode='Q{}set-actions' bSlot='6'>
              <dot role='select' type='element()'/>
              <withParam name='Q{}instance-key' flags='t' as='xs:string'>
               <varRef line='1080' name='Q{}this-instance-id' slot='7'/>
              </withParam>
              <withParam name='Q{}nodeset' flags='t' as='xs:string'>
               <varRef line='1081' name='Q{}refi' slot='6'/>
              </withParam>
             </applyT>
            </treat>
            <sequence line='1086'>
             <choose>
              <fn name='exists'>
               <varRef name='Q{}actions' slot='9'/>
              </fn>
              <ifCall line='1087' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
               <check card='1' diag='0|0||ixsl:call'>
                <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
               </check>
               <str val='addAction'/>
               <arrayBlock>
                <varRef name='Q{}myid' slot='3'/>
                <varRef name='Q{}actions' slot='9'/>
               </arrayBlock>
              </ifCall>
             </choose>
             <applyT line='1090' mode='Q{}get-html' flags='t' bSlot='7'>
              <dot role='select' type='element()'/>
              <withParam name='Q{}id' as='xs:string'>
               <varRef line='1091' name='Q{}myid' slot='3'/>
              </withParam>
              <withParam name='Q{}instance-context' as='xs:string'>
               <varRef line='1093' name='Q{}this-instance-id' slot='7'/>
              </withParam>
              <withParam name='Q{}binding' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
               <varRef line='1094' name='Q{}bindingi' slot='8'/>
              </withParam>
              <withParam name='Q{}actions' as='map(*)*'>
               <varRef line='1095' name='Q{}actions' slot='9'/>
              </withParam>
              <withParam name='Q{}nodeset' flags='t' as='xs:string'>
               <varRef line='1092' name='Q{}refi' slot='6'/>
              </withParam>
             </applyT>
            </sequence>
           </let>
          </let>
         </let>
        </let>
       </sequence>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='31' part='2' rank='1' minImp='0' slots='1' flags='s' line='1904' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}show)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;show&#39;;'/>
    <let role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1912' var='Q{}action-map' as='map(*)' slot='0' eval='16'>
     <treat line='1913' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|action-map'>
      <check card='1' diag='3|0|XTTE0570|action-map'>
       <applyT mode='Q{}set-action' bSlot='2'>
        <dot role='select' type='element()'/>
       </applyT>
      </check>
     </treat>
     <varRef line='1925' name='Q{}action-map' slot='0'/>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='23' rank='1' minImp='0' slots='1' flags='s' line='1570' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}item)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;item&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1571'>
     <param name='Q{}selectedValue' slot='0' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|selectedValue'>
       <check card='1' diag='8|0|XTTE0590|selectedValue'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|selectedValue'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <elem line='1573' name='option' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
      <sequence>
       <att name='value' flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}value)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;value&#39;;'/>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </att>
       <choose line='1574'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <varRef name='Q{}selectedValue' slot='0'/>
         <cast as='xs:string' emptiable='1'>
          <atomSing card='?' diag='2|0||cast as'>
           <slash simple='2'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}value)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;value&#39;;'/>
            <axis name='child' nodeTest='text()' jsTest='return item.nodeType===3;'/>
           </slash>
          </atomSing>
         </cast>
        </vc>
        <att line='1575' name='selected' flags='l'>
         <varRef name='Q{}selectedValue' slot='0'/>
        </att>
       </choose>
       <valueOf line='1578' flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='31' part='4' rank='1' minImp='0' slots='1' flags='s' line='1904' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}script)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;script&#39;;'/>
    <let role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1912' var='Q{}action-map' as='map(*)' slot='0' eval='16'>
     <treat line='1913' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|action-map'>
      <check card='1' diag='3|0|XTTE0570|action-map'>
       <applyT mode='Q{}set-action' bSlot='2'>
        <dot role='select' type='element()'/>
       </applyT>
      </check>
     </treat>
     <varRef line='1925' name='Q{}action-map' slot='0'/>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='31' part='1' rank='1' minImp='0' slots='1' flags='s' line='1904' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}action)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;action&#39;;'/>
    <let role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1912' var='Q{}action-map' as='map(*)' slot='0' eval='16'>
     <treat line='1913' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|action-map'>
      <check card='1' diag='3|0|XTTE0570|action-map'>
       <applyT mode='Q{}set-action' bSlot='2'>
        <dot role='select' type='element()'/>
       </applyT>
      </check>
     </treat>
     <varRef line='1925' name='Q{}action-map' slot='0'/>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='25' rank='1' minImp='0' slots='17' flags='s' line='1617' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}repeat)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;repeat&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1618'>
     <param name='Q{}nodeset' slot='0' flags='t' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1619' name='Q{}position' slot='1' as='xs:integer'>
      <int role='select' val='0'/>
      <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|position'>
       <check card='1' diag='8|0|XTTE0590|position'>
        <cvUntyped to='xs:integer' diag='8|0|XTTE0590|position'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1620' name='Q{}context-position' slot='2' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|context-position'>
       <check card='1' diag='8|0|XTTE0590|context-position'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|context-position'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1621' name='Q{}recalculate' slot='3' flags='t' as='xs:boolean'>
      <false role='select'/>
      <treat role='conversion' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='8|0|XTTE0590|recalculate'>
       <check card='1' diag='8|0|XTTE0590|recalculate'>
        <cvUntyped to='xs:boolean' diag='8|0|XTTE0590|recalculate'>
         <data>
          <supplied slot='3'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1622' name='Q{}refreshRepeats' slot='4' flags='t' as='xs:boolean'>
      <false role='select'/>
      <treat role='conversion' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='8|0|XTTE0590|refreshRepeats'>
       <check card='1' diag='8|0|XTTE0590|refreshRepeats'>
        <cvUntyped to='xs:boolean' diag='8|0|XTTE0590|refreshRepeats'>
         <data>
          <supplied slot='4'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line='1630' var='Q{}myid' as='xs:string' slot='5' eval='16'>
      <choose>
       <fn name='exists'>
        <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
       </fn>
       <check card='1' diag='3|0|XTTE0570|myid'>
        <cvUntyped to='xs:string' diag='3|0|XTTE0570|myid'>
         <attVal name='Q{}id' chk='0'/>
        </cvUntyped>
       </check>
       <true/>
       <fn name='concat'>
        <fn name='generate-id'>
         <dot type='element(Q{http://www.w3.org/2002/xforms}repeat)'/>
        </fn>
        <str val='-'/>
        <choose line='1626'>
         <varRef name='Q{}context-position' slot='2'/>
         <varRef name='Q{}context-position' slot='2'/>
         <true/>
         <fn name='string'>
          <varRef name='Q{}position' slot='1'/>
         </fn>
        </choose>
       </fn>
      </choose>
      <let line='1632' var='Q{}refi' as='xs:string' slot='6' eval='16'>
       <treat line='1633' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|refi'>
        <check card='1' diag='3|0|XTTE0570|refi'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|refi'>
          <data>
           <applyT mode='Q{}get-data-ref' bSlot='9'>
            <dot role='select' type='element(Q{http://www.w3.org/2002/xforms}repeat)'/>
           </applyT>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line='1636' var='Q{}this-instance-id' as='xs:string' slot='7' eval='16'>
        <treat line='1637' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-instance-id'>
         <check card='1' diag='3|0|XTTE0570|this-instance-id'>
          <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-instance-id'>
           <data>
            <applyT mode='Q{}get-context-instance-id' bSlot='10'>
             <dot role='select' type='element(Q{http://www.w3.org/2002/xforms}repeat)'/>
             <withParam name='Q{}nodeset' as='xs:string'>
              <varRef line='1638' name='Q{}refi' slot='6'/>
             </withParam>
            </applyT>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <sequence line='1644'>
         <choose>
          <varRef name='Q{}recalculate' slot='3'/>
          <empty/>
          <true/>
          <ifCall line='1663' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='setRepeatIndex'/>
           <arrayBlock>
            <varRef name='Q{}myid' slot='5'/>
            <choose line='1650'>
             <fn name='empty'>
              <axis name='attribute' nodeTest='attribute(Q{}startindex)' jsTest='return item.name===&#39;startindex&#39;'/>
             </fn>
             <dbl val='1'/>
             <castable line='1653' as='xs:double' emptiable='0'>
              <axis name='attribute' nodeTest='attribute(Q{}startindex)' jsTest='return item.name===&#39;startindex&#39;'/>
             </castable>
             <cvUntyped line='1654' to='xs:double' diag='3|0|XTTE0570|this-index'>
              <convert from='xs:double' to='xs:untypedAtomic'>
               <fn name='number'>
                <attVal name='Q{}startindex' chk='0'/>
               </fn>
              </convert>
             </cvUntyped>
             <true/>
             <dbl val='1'/>
            </choose>
           </arrayBlock>
          </ifCall>
         </choose>
         <let line='1670' var='Q{}selectedRepeatVar' as='element()*' slot='8' eval='8'>
          <let line='1672' var='Q{}instanceXML' as='element()' slot='9' eval='16'>
           <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
            <check card='1' diag='3|0|XTTE0570|instanceXML'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='getInstance'/>
              <arrayBlock>
               <varRef name='Q{}this-instance-id' slot='7'/>
              </arrayBlock>
             </ifCall>
            </check>
           </treat>
           <treat line='1673' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|selectedRepeatVar'>
            <evaluate dxns=''>
             <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='11' eval='6'>
              <varRef name='Q{}refi' slot='6'/>
             </ufCall>
             <varRef role='cxt' name='Q{}instanceXML' slot='9'/>
             <varRef role='nsCxt' name='Q{}instanceXML' slot='9'/>
             <str role='sa' val='no'/>
             <map role='options' size='0'/>
             <map role='wp' size='0'/>
            </evaluate>
           </treat>
          </let>
          <let line='1687' var='Q{}repeat-items' as='element(Q{}div, Q{http://www.w3.org/2001/XMLSchema}untyped)*' slot='10' eval='3'>
           <let line='1688' var='Q{}this' as='element(Q{http://www.w3.org/2002/xforms}repeat)' slot='11' eval='16'>
            <dot type='element(Q{http://www.w3.org/2002/xforms}repeat)'/>
            <let line='1693' var='Q{http://saxon.sf.net/generated-variable}v0' as='element()*' slot='12' eval='4'>
             <slash simple='1'>
              <varRef name='Q{}this' slot='11'/>
              <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             </slash>
             <forEach line='1689'>
              <varRef name='Q{}selectedRepeatVar' slot='8'/>
              <let line='1690' var='Q{}string-position' as='xs:string' slot='13' eval='8'>
               <fn name='string'>
                <fn name='position'/>
               </fn>
               <elem line='1692' name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
                <sequence>
                 <att name='data-repeat-item' flags='l'>
                  <str val='true'/>
                 </att>
                 <applyT line='1693' bSlot='12'>
                  <varRef role='select' name='Q{http://saxon.sf.net/generated-variable}v0' slot='12'/>
                  <withParam name='Q{}position' as='xs:integer'>
                   <fn line='1695' name='position'/>
                  </withParam>
                  <withParam name='Q{}context-position' as='xs:string'>
                   <choose line='1691'>
                    <varRef name='Q{}context-position' slot='2'/>
                    <fn name='concat'>
                     <varRef name='Q{}context-position' slot='2'/>
                     <str val='.'/>
                     <varRef name='Q{}string-position' slot='13'/>
                    </fn>
                    <true/>
                    <varRef name='Q{}string-position' slot='13'/>
                   </choose>
                  </withParam>
                  <withParam name='Q{}nodeset' flags='t' as='xs:string'>
                   <fn line='1694' name='concat'>
                    <varRef name='Q{}refi' slot='6'/>
                    <str val='['/>
                    <fn name='position'/>
                    <str val=']'/>
                   </fn>
                  </withParam>
                 </applyT>
                </sequence>
               </elem>
              </let>
             </forEach>
            </let>
           </let>
           <sequence line='1704'>
            <choose>
             <and op='and'>
              <varRef name='Q{}refreshRepeats' slot='4'/>
              <fn name='empty'>
               <slash simple='1'>
                <dot type='element(Q{http://www.w3.org/2002/xforms}repeat)'/>
                <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}repeat)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;repeat&#39;;'/>
               </slash>
              </fn>
             </and>
             <varRef line='1705' name='Q{}repeat-items' slot='10'/>
             <true/>
             <elem line='1708' name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
              <sequence line='1709'>
               <let var='Q{}element' as='element(Q{http://www.w3.org/2002/xforms}repeat)' slot='14' eval='16'>
                <dot type='element(Q{http://www.w3.org/2002/xforms}repeat)'/>
                <let line='2215' var='Q{}class' as='xs:string?' slot='15' eval='7'>
                 <choose line='2216'>
                  <fn name='exists'>
                   <slash simple='1'>
                    <varRef name='Q{}element' slot='14'/>
                    <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                   </slash>
                  </fn>
                  <cvUntyped line='2217' to='xs:string' diag='3|0|XTTE0570|class'>
                   <cast as='xs:untypedAtomic' emptiable='0'>
                    <fn name='string'>
                     <convert from='xs:untypedAtomic' to='xs:string'>
                      <data>
                       <slash simple='1'>
                        <varRef name='Q{}element' slot='14'/>
                        <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                       </slash>
                      </data>
                     </convert>
                    </fn>
                   </cast>
                  </cvUntyped>
                 </choose>
                 <let line='2220' var='Q{}class-mod' as='xs:string?' slot='16' eval='7'>
                  <choose line='2222'>
                   <fn name='exists'>
                    <slash simple='1'>
                     <varRef name='Q{}element' slot='14'/>
                     <axis name='attribute' nodeTest='attribute(Q{}incremental)' jsTest='return item.name===&#39;incremental&#39;'/>
                    </slash>
                   </fn>
                   <cvUntyped line='2223' to='xs:string' diag='3|0|XTTE0570|class-mod'>
                    <cast as='xs:untypedAtomic' emptiable='0'>
                     <fn name='string-join'>
                      <sequence>
                       <varRef name='Q{}class' slot='15'/>
                       <str val='incremental'/>
                      </sequence>
                      <str val=' '/>
                     </fn>
                    </cast>
                   </cvUntyped>
                   <true/>
                   <varRef line='2226' name='Q{}class' slot='15'/>
                  </choose>
                  <choose line='2230'>
                   <fn name='exists'>
                    <varRef name='Q{}class-mod' slot='16'/>
                   </fn>
                   <treat line='2231' as='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;' diag='5|0|XTTE0780|xforms:getClass#1'>
                    <att name='class' flags='l'>
                     <varRef name='Q{}class-mod' slot='16'/>
                    </att>
                   </treat>
                  </choose>
                 </let>
                </let>
               </let>
               <att line='1711' name='data-repeatable-context' flags='l'>
                <varRef name='Q{}refi' slot='6'/>
               </att>
               <att line='1712' name='data-count' flags='l'>
                <convert from='xs:integer' to='xs:string'>
                 <fn name='count'>
                  <varRef name='Q{}selectedRepeatVar' slot='8'/>
                 </fn>
                </convert>
               </att>
               <att line='1713' name='id' flags='l'>
                <varRef name='Q{}myid' slot='5'/>
               </att>
               <varRef line='1715' name='Q{}repeat-items' slot='10'/>
              </sequence>
             </elem>
            </choose>
            <choose line='1722'>
             <and op='and'>
              <fn name='not'>
               <varRef name='Q{}recalculate' slot='3'/>
              </fn>
              <fn name='empty'>
               <slash simple='1'>
                <dot type='element(Q{http://www.w3.org/2002/xforms}repeat)'/>
                <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}repeat)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;repeat&#39;;'/>
               </slash>
              </fn>
             </and>
             <sequence line='1726'>
              <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
               <check card='1' diag='0|0||ixsl:call'>
                <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
               </check>
               <str val='addRepeat'/>
               <arrayBlock>
                <varRef name='Q{}myid' slot='5'/>
                <dot type='element(Q{http://www.w3.org/2002/xforms}repeat)'/>
               </arrayBlock>
              </ifCall>
              <ifCall line='1729' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
               <check card='1' diag='0|0||ixsl:call'>
                <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
               </check>
               <str val='addRepeatContext'/>
               <arrayBlock>
                <varRef name='Q{}myid' slot='5'/>
                <varRef name='Q{}nodeset' slot='0'/>
               </arrayBlock>
              </ifCall>
             </sequence>
            </choose>
            <ifCall line='1733' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
             <check card='1' diag='0|0||ixsl:call'>
              <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
             </check>
             <str val='setRepeatSize'/>
             <arrayBlock>
              <varRef name='Q{}myid' slot='5'/>
              <fn name='count'>
               <varRef name='Q{}selectedRepeatVar' slot='8'/>
              </fn>
             </arrayBlock>
            </ifCall>
           </sequence>
          </let>
         </let>
        </sequence>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='31' part='3' rank='1' minImp='0' slots='1' flags='s' line='1904' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}hide)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;hide&#39;;'/>
    <let role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1912' var='Q{}action-map' as='map(*)' slot='0' eval='16'>
     <treat line='1913' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|action-map'>
      <check card='1' diag='3|0|XTTE0570|action-map'>
       <applyT mode='Q{}set-action' bSlot='2'>
        <dot role='select' type='element()'/>
       </applyT>
      </check>
     </treat>
     <varRef line='1925' name='Q{}action-map' slot='0'/>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='18' rank='1' minImp='0' slots='0' flags='s' line='1438' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}hint)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;hint&#39;;'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='12' rank='1' minImp='0' slots='0' flags='s' line='1015' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='22' rank='1' minImp='0' slots='0' flags='s' line='1551' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
    <elem role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1552' name='label' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
     <sequence line='1553'>
      <copyOf flags='vc'>
       <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
      </copyOf>
      <choose line='1555'>
       <fn name='exists'>
        <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
       </fn>
       <applyT line='1556' bSlot='13'>
        <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
       </applyT>
       <true/>
       <valueOf flags='l'>
        <str val=' '/>
       </valueOf>
      </choose>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='31' part='5' rank='1' minImp='0' slots='1' flags='s' line='1904' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}unload)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;unload&#39;;'/>
    <let role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1912' var='Q{}action-map' as='map(*)' slot='0' eval='16'>
     <treat line='1913' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|action-map'>
      <check card='1' diag='3|0|XTTE0570|action-map'>
       <applyT mode='Q{}set-action' bSlot='2'>
        <dot role='select' type='element()'/>
       </applyT>
      </check>
     </treat>
     <varRef line='1925' name='Q{}action-map' slot='0'/>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='26' rank='1' minImp='0' slots='3' flags='s' line='1744' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}submit)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;submit&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1745'>
     <param name='Q{}submissions' slot='0' flags='t' as='map(xs:string, map(*))'>
      <map role='select' size='0'/>
      <treat role='conversion' as='map(xs:string, map(*))' jsTest='function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);' diag='8|0|XTTE0590|submissions'>
       <check card='1' diag='8|0|XTTE0590|submissions'>
        <supplied slot='0'/>
       </check>
      </treat>
     </param>
     <let line='1752' var='Q{}submission-id' as='xs:string' slot='1' eval='16'>
      <choose>
       <fn name='exists'>
        <axis name='attribute' nodeTest='attribute(Q{}submission)' jsTest='return item.name===&#39;submission&#39;'/>
       </fn>
       <check card='1' diag='3|0|XTTE0570|submission-id'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}submission' chk='0'/>
        </cast>
       </check>
       <fn name='exists'>
        <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
       </fn>
       <check card='1' diag='3|0|XTTE0570|submission-id'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}id' chk='0'/>
        </cast>
       </check>
       <true/>
       <str val='saxon-forms-default-submission'/>
      </choose>
      <let line='1758' var='Q{}innerbody' as='document-node()' slot='2' eval='16'>
       <doc line='1759' validation='preserve'>
        <applyT bSlot='14'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
        </applyT>
       </doc>
       <choose line='1763'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}appearance' chk='0'/>
         </cast>
         <str val='minimal'/>
        </vc>
        <elem line='1764' name='a' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
         <copyOf line='1765' flags='vc'>
          <varRef name='Q{}innerbody' slot='2'/>
         </copyOf>
        </elem>
        <true/>
        <elem line='1769' name='button' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
         <sequence>
          <att name='type' flags='l'>
           <str val='button'/>
          </att>
          <copyOf line='1770' flags='vc'>
           <filter flags='b'>
            <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
            <vc op='ne' onEmpty='0' comp='CCC'>
             <fn name='local-name'>
              <dot type='attribute()'/>
             </fn>
             <str val='submission'/>
            </vc>
           </filter>
          </copyOf>
          <choose line='1772'>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}contains' type='xs:boolean'>
            <varRef name='Q{}submissions' slot='0'/>
            <varRef name='Q{}submission-id' slot='1'/>
           </ifCall>
           <att line='1774' name='data-submit' flags='l'>
            <varRef name='Q{}submission-id' slot='1'/>
           </att>
          </choose>
          <copyOf line='1776' flags='vc'>
           <varRef name='Q{}innerbody' slot='2'/>
          </copyOf>
         </sequence>
        </elem>
       </choose>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-0.5' seq='20' part='1' rank='0' minImp='0' slots='0' flags='s' line='1530' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
    <copy role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1532' flags='cin'>
     <applyT role='content' bSlot='15'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='21' rank='2' minImp='0' slots='0' flags='s' line='1541' module='saxon-xforms.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='text()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===3;'/>
     <axis ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1541' name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
    </p.withPredicate>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='-0.5' seq='20' rank='0' minImp='0' slots='0' flags='s' line='1530' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
    <copy role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1532' flags='cin'>
     <applyT role='content' bSlot='15'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id='51' binds='1 1'>
  <template name='Q{}refreshRelevantFields-JS' flags='os' line='2371' module='saxon-xforms.xsl' slots='4'>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2376' var='Q{http://saxon.sf.net/generated-variable}v0' as='item()' slot='0' eval='13'>
    <check card='1' diag='0|0||ixsl:call'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
    </check>
    <sequence line='2372'>
     <message>
      <valueOf role='select'>
       <str val='[refreshRelevantFields-JS] START'/>
      </valueOf>
      <str role='terminate' val='no'/>
      <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
     </message>
     <forEach line='2375'>
      <filter flags='b'>
       <slash simple='1'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
        <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <fn name='exists'>
        <axis name='attribute' nodeTest='attribute(Q{}data-relevant)' jsTest='return item.name===&#39;data-relevant&#39;'/>
       </fn>
      </filter>
      <let line='2376' var='Q{}instanceXML' as='element()' slot='1' eval='16'>
       <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
        <check card='1' diag='3|0|XTTE0570|instanceXML'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='0'/>
          <str val='getInstance'/>
          <arrayBlock>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}instance-context)' jsTest='return item.name===&#39;instance-context&#39;'/>
           </fn>
          </arrayBlock>
         </ifCall>
        </check>
       </treat>
       <let line='2377' var='Q{}context-node' as='node()?' slot='2' eval='7'>
        <treat line='2378' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|context-node'>
         <check card='?' diag='3|0|XTTE0570|context-node'>
          <evaluate dxns=''>
           <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='0' eval='16'>
            <check card='1' diag='0|0||xforms:impose'>
             <cvUntyped to='xs:string'>
              <attVal name='Q{}data-ref' chk='0'/>
             </cvUntyped>
            </check>
           </ufCall>
           <varRef role='cxt' name='Q{}instanceXML' slot='1'/>
           <varRef role='nsCxt' name='Q{}instanceXML' slot='1'/>
           <str role='sa' val='no'/>
           <map role='options' size='0'/>
           <map role='wp' size='0'/>
          </evaluate>
         </check>
        </treat>
        <let line='2380' var='Q{}relevantCheck' as='xs:boolean' slot='3' eval='16'>
         <treat line='2381' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='3|0|XTTE0570|relevantCheck'>
          <check card='1' diag='3|0|XTTE0570|relevantCheck'>
           <cvUntyped to='xs:boolean' diag='3|0|XTTE0570|relevantCheck'>
            <data>
             <evaluate dxns=''>
              <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='16'>
               <check card='1' diag='0|0||xforms:impose'>
                <cvUntyped to='xs:string'>
                 <attVal name='Q{}data-relevant' chk='0'/>
                </cvUntyped>
               </check>
              </ufCall>
              <varRef role='cxt' name='Q{}context-node' slot='2'/>
              <varRef role='nsCxt' name='Q{}instanceXML' slot='1'/>
              <str role='sa' val='no'/>
              <map role='options' size='0'/>
              <map role='wp' size='0'/>
             </evaluate>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <choose line='2385'>
          <varRef name='Q{}relevantCheck' slot='3'/>
          <ifCall line='2386' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
           <str val='style.display'/>
           <str val='inline'/>
           <dot type='element()'/>
          </ifCall>
          <true/>
          <ifCall line='2389' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
           <str val='style.display'/>
           <str val='none'/>
           <dot type='element()'/>
          </ifCall>
         </choose>
        </let>
       </let>
      </let>
     </forEach>
    </sequence>
   </let>
  </template>
 </co>
 <co id='3' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}getInstanceId' line='2243' module='saxon-xforms.xsl' eval='16' flags='pU' as='xs:string' slots='1'>
   <arg name='Q{}nodeset' as='xs:string'/>
   <choose role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2247'>
    <fn name='not'>
     <varRef name='Q{}nodeset' slot='0'/>
    </fn>
    <str val='saxon-forms-default-instance'/>
    <true/>
    <check line='2253' card='1' diag='5|0|XTTE0780|xforms:getInstanceId#1'>
     <analyzeString>
      <fn role='select' name='normalize-space'>
       <varRef name='Q{}nodeset' slot='0'/>
      </fn>
      <str role='regex' val='^instance\s*\(\s*&#39;([^&#39;]+)&#39;\s*\)\s*(/\s*(.*)|)$'/>
      <str role='flags' val=''/>
      <fn role='matching' line='2255' name='regex-group'>
       <int val='1'/>
      </fn>
      <str role='nonMatching' val='saxon-forms-default-instance'/>
     </analyzeString>
    </check>
   </choose>
  </function>
 </co>
 <co id='28' binds='14 72 20'>
  <template name='Q{}outermost-action-handler' flags='os' line='3215' module='saxon-xforms.xsl' slots='1'>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3216' var='Q{}deferred-update-flags' as='map(*)?' slot='0' eval='7'>
    <treat as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|deferred-update-flags'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
      <check card='1' diag='0|0||ixsl:call'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
      </check>
      <str val='getDeferredUpdateFlags'/>
      <array size='0'/>
     </ifCall>
    </treat>
    <sequence line='3218'>
     <message>
      <valueOf role='select'>
       <str val='[outermost-action-handler] START'/>
      </valueOf>
      <str role='terminate' val='no'/>
      <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
     </message>
     <choose line='3224'>
      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <data>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
         <check card='1' diag='0|0||map:get'>
          <varRef name='Q{}deferred-update-flags' slot='0'/>
         </check>
         <str val='recalculate'/>
        </ifCall>
       </data>
       <str val='true'/>
      </gc>
      <sequence line='3225'>
       <message>
        <valueOf role='select'>
         <str val='[outermost-action-handler] triggering xforms-recalculate'/>
        </valueOf>
        <str role='terminate' val='no'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
       <callT line='3226' name='Q{}xforms-recalculate' bSlot='0'/>
      </sequence>
     </choose>
     <choose line='3228'>
      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <data>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
         <check card='1' diag='0|0||map:get'>
          <varRef name='Q{}deferred-update-flags' slot='0'/>
         </check>
         <str val='revalidate'/>
        </ifCall>
       </data>
       <str val='true'/>
      </gc>
      <sequence line='3229'>
       <message>
        <valueOf role='select'>
         <str val='[outermost-action-handler] triggering xforms-revalidate'/>
        </valueOf>
        <str role='terminate' val='no'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
       <callT line='3230' name='Q{}xforms-revalidate' bSlot='1'/>
      </sequence>
     </choose>
     <choose line='3232'>
      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <data>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
         <check card='1' diag='0|0||map:get'>
          <varRef name='Q{}deferred-update-flags' slot='0'/>
         </check>
         <str val='refresh'/>
        </ifCall>
       </data>
       <str val='true'/>
      </gc>
      <sequence line='3233'>
       <message>
        <valueOf role='select'>
         <str val='[outermost-action-handler] triggering xforms-refresh'/>
        </valueOf>
        <str role='terminate' val='no'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
       <callT line='3234' name='Q{}xforms-refresh' bSlot='2'/>
      </sequence>
     </choose>
     <ifCall line='3238' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
      <check card='1' diag='0|0||ixsl:call'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
      </check>
      <str val='clearDeferredUpdateFlags'/>
      <array size='0'/>
     </ifCall>
    </sequence>
   </let>
  </template>
 </co>
 <co id='73' binds='74 33 14'>
  <template name='Q{}xforms-model-construct' flags='os' line='2788' module='saxon-xforms.xsl' slots='3'>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2802' var='Q{http://saxon.sf.net/generated-variable}v0' as='item()' slot='1' eval='13'>
    <check card='1' diag='0|0||ixsl:call'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
    </check>
    <sequence line='2789'>
     <param name='Q{}model' slot='0' flags='tr' as='element(Q{http://www.w3.org/2002/xforms}model)'>
      <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;' diag='8|0|XTTE0590|model'>
       <check card='1' diag='8|0|XTTE0590|model'>
        <supplied slot='0'/>
       </check>
      </treat>
     </param>
     <forEach line='2797'>
      <slash line='2795' simple='1'>
       <varRef name='Q{}model' slot='0'/>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}instance)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;instance&#39;;'/>
      </slash>
      <let line='2798' var='Q{}instance-with-explicit-namespaces' as='element()' slot='2' eval='16'>
       <treat line='2799' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instance-with-explicit-namespaces'>
        <check card='1' diag='3|0|XTTE0570|instance-with-explicit-namespaces'>
         <applyT mode='Q{}namespace-fix' bSlot='0'>
          <axis role='select' name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         </applyT>
        </check>
       </treat>
       <sequence line='2802'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='1'/>
         <str val='setInstance'/>
         <arrayBlock>
          <choose line='2801'>
           <fn name='exists'>
            <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
           </fn>
           <check card='1' diag='3|0|XTTE0570|instance-key'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}id' chk='0'/>
            </cast>
           </check>
           <true/>
           <str val='saxon-forms-default-instance'/>
          </choose>
          <varRef name='Q{}instance-with-explicit-namespaces' slot='2'/>
         </arrayBlock>
        </ifCall>
        <choose line='2803'>
         <compareToInt op='eq' val='1'>
          <fn name='position'/>
         </compareToInt>
         <ifCall line='2804' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='setDefaultInstance'/>
          <arrayBlock>
           <varRef name='Q{}instance-with-explicit-namespaces' slot='2'/>
          </arrayBlock>
         </ifCall>
        </choose>
       </sequence>
      </let>
     </forEach>
     <callT line='2810' name='Q{}xforms-rebuild' bSlot='1'>
      <withParam name='Q{}get-bindings' flags='c' as='xs:boolean'>
       <true/>
      </withParam>
      <withParam name='Q{}model-key' flags='t' as='xs:string'>
       <choose line='2791'>
        <fn name='exists'>
         <slash simple='1'>
          <varRef name='Q{}model' slot='0'/>
          <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
         </slash>
        </fn>
        <check card='1' diag='3|0|XTTE0570|model-key'>
         <cast as='xs:string' emptiable='1'>
          <data>
           <slash simple='1'>
            <varRef name='Q{}model' slot='0'/>
            <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
           </slash>
          </data>
         </cast>
        </check>
        <true/>
        <str val='saxon-forms-default-model'/>
       </choose>
      </withParam>
     </callT>
     <callT line='2815' name='Q{}xforms-recalculate' bSlot='2' flags='t'/>
    </sequence>
   </let>
  </template>
 </co>
 <co id='75' binds=''>
  <globalVariable name='Q{}debugMode' type='xs:boolean' line='85' module='saxon-xforms.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.boolean.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <true/>
  </globalVariable>
 </co>
 <co id='76' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}getWhileStatement' line='747' module='saxon-xforms.xsl' eval='7' flags='pU' as='xs:string?' slots='1'>
   <arg name='Q{}map' as='map(*)'/>
   <choose role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='750'>
    <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}contains' type='xs:boolean'>
     <varRef name='Q{}map' slot='0'/>
     <str val='@while'/>
    </ifCall>
    <treat line='751' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='5|0|XTTE0780|xforms:getWhileStatement#1'>
     <check card='?' diag='5|0|XTTE0780|xforms:getWhileStatement#1'>
      <cvUntyped to='xs:string' diag='5|0|XTTE0780|xforms:getWhileStatement#1'>
       <data>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
         <varRef name='Q{}map' slot='0'/>
         <str val='@while'/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </choose>
  </function>
 </co>
 <co id='54' binds='54 18'>
  <mode name='Q{}get-data-ref' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='6' rank='0' minImp='0' slots='7' flags='s' as='xs:string' line='481' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='Q{http://www.w3.org/2002/xforms}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.w3.org/2002/xforms&#39;'/>
    <check role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='482' card='1' diag='7|0|XTTE0505|match="xforms:*" mode="get-data-ref"'>
     <sequence>
      <param name='Q{}nodeset' slot='0' flags='t' as='xs:string'>
       <str role='select' val=''/>
       <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
        <check card='1' diag='8|0|XTTE0590|nodeset'>
         <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
          <data>
           <supplied slot='0'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <choose line='485'>
       <fn name='exists'>
        <axis name='attribute' nodeTest='attribute(Q{}bind)' jsTest='return item.name===&#39;bind&#39;'/>
       </fn>
       <let line='486' var='Q{}bind' as='xs:string' slot='1' eval='16'>
        <check card='1' diag='3|0|XTTE0570|bind'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}bind' chk='0'/>
         </cast>
        </check>
        <let line='487' var='Q{}this-binding' as='element(Q{http://www.w3.org/2002/xforms}bind)?' slot='2' eval='7'>
         <check card='?' diag='3|0|XTTE0570|this-binding'>
          <docOrder intra='1'>
           <filter flags='b'>
            <slash simple='2'>
             <fn name='reverse'>
              <slash simple='1'>
               <dot type='Q{http://www.w3.org/2002/xforms}*'/>
               <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
              </slash>
             </fn>
             <axis name='descendant' nodeTest='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}id' chk='0'/>
             </cast>
             <varRef name='Q{}bind' slot='1'/>
            </vc>
           </filter>
          </docOrder>
         </check>
         <choose line='489'>
          <fn name='exists'>
           <varRef name='Q{}this-binding' slot='2'/>
          </fn>
          <treat line='490' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='7|0|XTTE0505|match="xforms:*" mode="get-data-ref"'>
           <cvUntyped to='xs:string' diag='7|0|XTTE0505|match="xforms:*" mode="get-data-ref"'>
            <data>
             <applyT mode='Q{}get-data-ref' flags='t' bSlot='0'>
              <varRef role='select' name='Q{}this-binding' slot='2'/>
              <withParam name='Q{}nodeset' as='xs:string?'>
               <choose line='491'>
                <fn name='exists'>
                 <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
                </fn>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}nodeset' chk='0'/>
                </cast>
                <true/>
                <str val=''/>
               </choose>
              </withParam>
             </applyT>
            </data>
           </cvUntyped>
          </treat>
          <true/>
          <treat line='495' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='7|0|XTTE0505|match="xforms:*" mode="get-data-ref"'>
           <cvUntyped to='xs:string' diag='7|0|XTTE0505|match="xforms:*" mode="get-data-ref"'>
            <data>
             <callT name='Q{}xforms-binding-exception' bSlot='1' flags='t'>
              <withParam name='Q{}message' flags='c' as='xs:string'>
               <fn line='496' name='concat'>
                <str val='No binding found with ID '/>
                <varRef name='Q{}bind' slot='1'/>
               </fn>
              </withParam>
             </callT>
            </data>
           </cvUntyped>
          </treat>
         </choose>
        </let>
       </let>
       <true/>
       <let line='507' var='Q{}this-ref' as='xs:string?' slot='3' eval='7'>
        <choose>
         <fn name='exists'>
          <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
         </fn>
         <fn name='normalize-space'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}nodeset' chk='0'/>
          </cast>
         </fn>
         <fn name='exists'>
          <axis name='attribute' nodeTest='attribute(Q{}ref)' jsTest='return item.name===&#39;ref&#39;'/>
         </fn>
         <fn name='normalize-space'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}ref' chk='0'/>
          </cast>
         </fn>
        </choose>
        <choose line='516'>
         <and op='and'>
          <fn name='exists'>
           <varRef name='Q{}this-ref' slot='3'/>
          </fn>
          <fn name='not'>
           <varRef name='Q{}nodeset' slot='0'/>
          </fn>
         </and>
         <let line='512' var='Q{}base' as='xs:string' slot='4' eval='16'>
          <choose>
           <fn name='exists'>
            <axis name='attribute' nodeTest='attribute(Q{}context)' jsTest='return item.name===&#39;context&#39;'/>
           </fn>
           <fn name='normalize-space'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}context' chk='0'/>
            </cast>
           </fn>
           <true/>
           <str val='.'/>
          </choose>
          <let line='517' var='Q{}relative' as='xs:string' slot='5' eval='16'>
           <check card='1' diag='0|1||xforms:resolveXPathStrings'>
            <varRef name='Q{}this-ref' slot='3'/>
           </check>
           <choose line='776'>
            <fn name='starts-with'>
             <varRef name='Q{}relative' slot='5'/>
             <str val='/'/>
            </fn>
            <varRef line='777' name='Q{}relative' slot='5'/>
            <fn line='779' name='starts-with'>
             <varRef name='Q{}relative' slot='5'/>
             <str val='instance('/>
            </fn>
            <varRef line='780' name='Q{}relative' slot='5'/>
            <fn line='782' name='not'>
             <varRef name='Q{}base' slot='4'/>
            </fn>
            <varRef line='783' name='Q{}relative' slot='5'/>
            <or line='785' op='or'>
             <fn name='not'>
              <varRef name='Q{}relative' slot='5'/>
             </fn>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <varRef name='Q{}relative' slot='5'/>
              <str val='.'/>
             </vc>
            </or>
            <varRef line='786' name='Q{}base' slot='4'/>
            <true/>
            <fn line='789' name='concat'>
             <varRef name='Q{}base' slot='4'/>
             <str val='/'/>
             <varRef name='Q{}relative' slot='5'/>
            </fn>
           </choose>
          </let>
         </let>
         <fn line='519' name='exists'>
          <varRef name='Q{}this-ref' slot='3'/>
         </fn>
         <let line='520' var='Q{}relative' as='xs:string' slot='6' eval='16'>
          <check card='1' diag='0|1||xforms:resolveXPathStrings'>
           <varRef name='Q{}this-ref' slot='3'/>
          </check>
          <choose line='776'>
           <fn name='starts-with'>
            <varRef name='Q{}relative' slot='6'/>
            <str val='/'/>
           </fn>
           <varRef line='777' name='Q{}relative' slot='6'/>
           <fn line='779' name='starts-with'>
            <varRef name='Q{}relative' slot='6'/>
            <str val='instance('/>
           </fn>
           <varRef line='780' name='Q{}relative' slot='6'/>
           <fn line='520' name='not'>
            <varRef name='Q{}nodeset' slot='0'/>
           </fn>
           <varRef line='783' name='Q{}relative' slot='6'/>
           <or line='785' op='or'>
            <fn name='not'>
             <varRef name='Q{}relative' slot='6'/>
            </fn>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <varRef name='Q{}relative' slot='6'/>
             <str val='.'/>
            </vc>
           </or>
           <varRef line='520' name='Q{}nodeset' slot='0'/>
           <true/>
           <fn line='520' name='concat'>
            <varRef name='Q{}nodeset' slot='0'/>
            <str val='/'/>
            <varRef line='789' name='Q{}relative' slot='6'/>
           </fn>
          </choose>
         </let>
         <varRef line='522' name='Q{}nodeset' slot='0'/>
         <choose line='523'>
          <fn name='starts-with'>
           <varRef name='Q{}nodeset' slot='0'/>
           <str val='/'/>
          </fn>
          <varRef name='Q{}nodeset' slot='0'/>
          <fn name='starts-with'>
           <varRef name='Q{}nodeset' slot='0'/>
           <str val='instance('/>
          </fn>
          <varRef name='Q{}nodeset' slot='0'/>
          <true/>
          <varRef name='Q{}nodeset' slot='0'/>
         </choose>
         <true/>
         <cvUntyped line='526' to='xs:string' diag='3|0|XTTE0570|data-ref'>
          <cast as='xs:untypedAtomic' emptiable='0'>
           <varRef name='Q{}nodeset' slot='0'/>
          </cast>
         </cvUntyped>
        </choose>
       </let>
      </choose>
     </sequence>
    </check>
   </templateRule>
  </mode>
 </co>
 <co id='69' binds='54 55 69'>
  <mode name='Q{}set-action' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='8' rank='1' minImp='0' slots='10' flags='s' line='555' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='Q{http://www.w3.org/2002/xforms}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.w3.org/2002/xforms&#39;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='556'>
     <param name='Q{}instance-id' slot='0' flags='t' as='xs:string'>
      <str role='select' val='saxon-forms-default-instance'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|instance-id'>
       <check card='1' diag='8|0|XTTE0590|instance-id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|instance-id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='557' name='Q{}nodeset' slot='1' flags='t' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='558' name='Q{}handler-status' slot='2' flags='t'>
      <str role='select' val='outermost'/>
      <supplied role='conversion' slot='2'/>
     </param>
     <let line='562' var='Q{}refi' as='xs:string' slot='3' eval='16'>
      <treat line='563' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|refi'>
       <check card='1' diag='3|0|XTTE0570|refi'>
        <cvUntyped to='xs:string' diag='3|0|XTTE0570|refi'>
         <data>
          <applyT mode='Q{}get-data-ref' bSlot='0'>
           <dot role='select' type='Q{http://www.w3.org/2002/xforms}*'/>
           <withParam name='Q{}nodeset' as='xs:string'>
            <varRef line='564' name='Q{}nodeset' slot='1'/>
           </withParam>
          </applyT>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line='568' var='Q{}this-instance-id' as='xs:string' slot='4' eval='16'>
       <treat line='569' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-instance-id'>
        <check card='1' diag='3|0|XTTE0570|this-instance-id'>
         <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-instance-id'>
          <data>
           <applyT mode='Q{}get-context-instance-id' bSlot='1'>
            <dot role='select' type='Q{http://www.w3.org/2002/xforms}*'/>
            <withParam name='Q{}nodeset' as='xs:string'>
             <varRef line='570' name='Q{}refi' slot='3'/>
            </withParam>
           </applyT>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <ifCall line='582' name='Q{http://www.w3.org/2005/xpath-functions/map}merge' type='map(*)'>
        <sequence>
         <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
          <str val='name'/>
          <fn name='local-name'>
           <dot type='Q{http://www.w3.org/2002/xforms}*'/>
          </fn>
         </ifCall>
         <ifCall line='583' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
          <str val='handler-status'/>
          <varRef name='Q{}handler-status' slot='2'/>
         </ifCall>
         <ifCall line='584' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
          <str val='instance-context'/>
          <varRef name='Q{}this-instance-id' slot='4'/>
         </ifCall>
         <choose line='586'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}value)' jsTest='return item.name===&#39;value&#39;'/>
          </fn>
          <ifCall line='587' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@value'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}value)' jsTest='return item.name===&#39;value&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='593'>
          <and op='and'>
           <and op='and'>
            <fn name='empty'>
             <axis name='attribute' nodeTest='attribute(Q{}value)' jsTest='return item.name===&#39;value&#39;'/>
            </fn>
            <fn name='exists'>
             <axis name='child' nodeTest='text()' jsTest='return item.nodeType===3;'/>
            </fn>
           </and>
           <fn name='empty'>
            <axis name='self' nodeTest='element(Q{http://www.w3.org/2002/xforms}message)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;message&#39;;'/>
           </fn>
          </and>
          <ifCall line='594' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='value'/>
           <fn name='string'>
            <dot type='Q{http://www.w3.org/2002/xforms}*'/>
           </fn>
          </ifCall>
         </choose>
         <ifCall line='597' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
          <str val='@ref'/>
          <varRef name='Q{}refi' slot='3'/>
         </ifCall>
         <choose line='603'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}position)' jsTest='return item.name===&#39;position&#39;'/>
          </fn>
          <ifCall line='604' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@position'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}position)' jsTest='return item.name===&#39;position&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='606'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}at)' jsTest='return item.name===&#39;at&#39;'/>
          </fn>
          <ifCall line='607' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@at'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}at)' jsTest='return item.name===&#39;at&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='611'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}if)' jsTest='return item.name===&#39;if&#39;'/>
          </fn>
          <ifCall line='612' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@if'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}if)' jsTest='return item.name===&#39;if&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='616'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}while)' jsTest='return item.name===&#39;while&#39;'/>
          </fn>
          <ifCall line='617' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@while'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}while)' jsTest='return item.name===&#39;while&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='620'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='@*:event' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local===&#39;event&#39;'/>
          </fn>
          <ifCall line='621' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@event'/>
           <fn name='string'>
            <check card='?' diag='0|0||fn:string'>
             <axis name='attribute' nodeTest='@*:event' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local===&#39;event&#39;'/>
            </check>
           </fn>
          </ifCall>
         </choose>
         <choose line='623'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}submission)' jsTest='return item.name===&#39;submission&#39;'/>
          </fn>
          <ifCall line='624' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@submission'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}submission)' jsTest='return item.name===&#39;submission&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='627'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}model)' jsTest='return item.name===&#39;model&#39;'/>
          </fn>
          <ifCall line='628' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@model'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}model)' jsTest='return item.name===&#39;model&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='631'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}control)' jsTest='return item.name===&#39;control&#39;'/>
          </fn>
          <ifCall line='632' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@control'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}control)' jsTest='return item.name===&#39;control&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='635'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}repeat)' jsTest='return item.name===&#39;repeat&#39;'/>
          </fn>
          <ifCall line='636' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@repeat'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}repeat)' jsTest='return item.name===&#39;repeat&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='639'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}index)' jsTest='return item.name===&#39;index&#39;'/>
          </fn>
          <ifCall line='640' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@index'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}index)' jsTest='return item.name===&#39;index&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='643'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}level)' jsTest='return item.name===&#39;level&#39;'/>
          </fn>
          <ifCall line='644' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@level'/>
           <fn name='string'>
            <axis name='attribute' nodeTest='attribute(Q{}level)' jsTest='return item.name===&#39;level&#39;'/>
           </fn>
          </ifCall>
         </choose>
         <choose line='647'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}origin)' jsTest='return item.name===&#39;origin&#39;'/>
          </fn>
          <ifCall line='655' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@origin'/>
           <let line='651' var='Q{}base' as='xs:string' slot='5' eval='16'>
            <choose>
             <fn name='exists'>
              <axis name='attribute' nodeTest='attribute(Q{}context)' jsTest='return item.name===&#39;context&#39;'/>
             </fn>
             <let var='Q{}relative' as='xs:string' slot='6' eval='16'>
              <check card='1' diag='0|1||xforms:resolveXPathStrings'>
               <cvUntyped to='xs:string'>
                <attVal name='Q{}context' chk='0'/>
               </cvUntyped>
              </check>
              <choose line='776'>
               <fn name='starts-with'>
                <varRef name='Q{}relative' slot='6'/>
                <str val='/'/>
               </fn>
               <varRef line='777' name='Q{}relative' slot='6'/>
               <fn line='779' name='starts-with'>
                <varRef name='Q{}relative' slot='6'/>
                <str val='instance('/>
               </fn>
               <varRef line='780' name='Q{}relative' slot='6'/>
               <fn line='651' name='not'>
                <varRef name='Q{}nodeset' slot='1'/>
               </fn>
               <varRef line='783' name='Q{}relative' slot='6'/>
               <or line='785' op='or'>
                <fn name='not'>
                 <varRef name='Q{}relative' slot='6'/>
                </fn>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <varRef name='Q{}relative' slot='6'/>
                 <str val='.'/>
                </vc>
               </or>
               <varRef line='651' name='Q{}nodeset' slot='1'/>
               <true/>
               <fn line='651' name='concat'>
                <varRef name='Q{}nodeset' slot='1'/>
                <str val='/'/>
                <varRef line='789' name='Q{}relative' slot='6'/>
               </fn>
              </choose>
             </let>
             <true/>
             <varRef name='Q{}nodeset' slot='1'/>
            </choose>
            <let line='653' var='Q{}relative' as='xs:string' slot='7' eval='16'>
             <check card='1' diag='0|1||xforms:resolveXPathStrings'>
              <cvUntyped to='xs:string'>
               <attVal name='Q{}origin' chk='0'/>
              </cvUntyped>
             </check>
             <choose line='776'>
              <fn name='starts-with'>
               <varRef name='Q{}relative' slot='7'/>
               <str val='/'/>
              </fn>
              <varRef line='777' name='Q{}relative' slot='7'/>
              <fn line='779' name='starts-with'>
               <varRef name='Q{}relative' slot='7'/>
               <str val='instance('/>
              </fn>
              <varRef line='780' name='Q{}relative' slot='7'/>
              <fn line='782' name='not'>
               <varRef name='Q{}base' slot='5'/>
              </fn>
              <varRef line='783' name='Q{}relative' slot='7'/>
              <or line='785' op='or'>
               <fn name='not'>
                <varRef name='Q{}relative' slot='7'/>
               </fn>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <varRef name='Q{}relative' slot='7'/>
                <str val='.'/>
               </vc>
              </or>
              <varRef line='786' name='Q{}base' slot='5'/>
              <true/>
              <fn line='789' name='concat'>
               <varRef name='Q{}base' slot='5'/>
               <str val='/'/>
               <varRef name='Q{}relative' slot='7'/>
              </fn>
             </choose>
            </let>
           </let>
          </ifCall>
         </choose>
         <choose line='658'>
          <fn name='exists'>
           <axis name='attribute' nodeTest='attribute(Q{}context)' jsTest='return item.name===&#39;context&#39;'/>
          </fn>
          <ifCall line='659' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@context'/>
           <let var='Q{}relative' as='xs:string' slot='8' eval='16'>
            <check card='1' diag='0|1||xforms:resolveXPathStrings'>
             <cvUntyped to='xs:string'>
              <attVal name='Q{}context' chk='0'/>
             </cvUntyped>
            </check>
            <choose line='776'>
             <fn name='starts-with'>
              <varRef name='Q{}relative' slot='8'/>
              <str val='/'/>
             </fn>
             <varRef line='777' name='Q{}relative' slot='8'/>
             <fn line='779' name='starts-with'>
              <varRef name='Q{}relative' slot='8'/>
              <str val='instance('/>
             </fn>
             <varRef line='780' name='Q{}relative' slot='8'/>
             <fn line='659' name='not'>
              <varRef name='Q{}nodeset' slot='1'/>
             </fn>
             <varRef line='783' name='Q{}relative' slot='8'/>
             <or line='785' op='or'>
              <fn name='not'>
               <varRef name='Q{}relative' slot='8'/>
              </fn>
              <vc op='eq' onEmpty='0' comp='CCC'>
               <varRef name='Q{}relative' slot='8'/>
               <str val='.'/>
              </vc>
             </or>
             <varRef line='659' name='Q{}nodeset' slot='1'/>
             <true/>
             <fn line='659' name='concat'>
              <varRef name='Q{}nodeset' slot='1'/>
              <str val='/'/>
              <varRef line='789' name='Q{}relative' slot='8'/>
             </fn>
            </choose>
           </let>
          </ifCall>
         </choose>
         <choose line='663'>
          <or op='or'>
           <fn name='exists'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </fn>
           <and op='and'>
            <fn name='exists'>
             <axis name='self' nodeTest='element(Q{http://www.w3.org/2002/xforms}message)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;message&#39;;'/>
            </fn>
            <fn name='exists'>
             <axis name='child' nodeTest='text()' jsTest='return item.nodeType===3;'/>
            </fn>
           </and>
          </or>
          <ifCall line='664' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='nested-actions'/>
           <let line='665' var='Q{}array' as='map(*)*' slot='9' eval='3'>
            <treat line='666' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|array'>
             <forEach>
              <filter flags='b'>
               <axis name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
               <or op='or'>
                <fn name='exists'>
                 <axis name='self' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                </fn>
                <fn name='exists'>
                 <filter flags='b'>
                  <axis name='self' nodeTest='text()' jsTest='return item.nodeType===3;'/>
                  <fn name='exists'>
                   <axis name='parent' nodeTest='element(Q{http://www.w3.org/2002/xforms}message)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;message&#39;;'/>
                  </fn>
                 </filter>
                </fn>
               </or>
              </filter>
              <applyT line='667' mode='Q{}set-action' bSlot='2'>
               <dot role='select' type='node()'/>
               <withParam name='Q{}handler-status' flags='t' as='xs:string'>
                <str val='inner'/>
               </withParam>
              </applyT>
             </forEach>
            </treat>
            <ifCall line='672' name='Q{http://www.w3.org/2005/xpath-functions/array}_from-sequence' type='array(*)'>
             <varRef name='Q{}array' slot='9'/>
            </ifCall>
           </let>
          </ifCall>
         </choose>
        </sequence>
        <map size='2'>
         <str val='duplicates'/>
         <str val='reject'/>
         <str val='duplicates-error-code'/>
         <str val='XTDE3365'/>
        </map>
       </ifCall>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-0.5' seq='9' rank='0' minImp='0' slots='0' flags='s' line='686' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='text()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===3;'/>
    <ifCall role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='688' name='Q{http://www.w3.org/2005/xpath-functions/map}merge' type='map(*)'>
     <sequence>
      <literal count='3'>
       <map size='1'>
        <str val='name'/>
        <str val='text'/>
       </map>
       <map size='1'>
        <str val='instance-context'/>
        <str val='saxon-forms-default-instance'/>
       </map>
       <map size='1'>
        <str val='handler-status'/>
        <str val='inner'/>
       </map>
      </literal>
      <ifCall line='691' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
       <str val='@value'/>
       <fn name='string'>
        <dot type='text()'/>
       </fn>
      </ifCall>
     </sequence>
     <map size='2'>
      <str val='duplicates'/>
      <str val='reject'/>
      <str val='duplicates-error-code'/>
      <str val='XTDE3365'/>
     </map>
    </ifCall>
   </templateRule>
  </mode>
 </co>
 <co id='70' binds='39'>
  <mode name='Q{}set-actions' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='7' rank='0' minImp='0' slots='0' flags='s' line='545' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='Q{http://www.w3.org/2002/xforms}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.w3.org/2002/xforms&#39;'/>
    <applyT role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='546' flags='t' bSlot='0'>
     <union role='select' op='|'>
      <union op='|'>
       <union op='|'>
        <union op='|'>
         <union op='|'>
          <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}action)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;action&#39;;'/>
          <filter flags='b'>
           <axis name='child' nodeTest='Q{http://www.w3.org/2002/xforms}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.w3.org/2002/xforms&#39;'/>
           <gc op='=' card='N:1' comp='CCC'>
            <literal count='15'>
             <str val='setvalue'/>
             <str val='insert'/>
             <str val='delete'/>
             <str val='setindex'/>
             <str val='toggle'/>
             <str val='setfocus'/>
             <str val='dispatch'/>
             <str val='rebuild'/>
             <str val='recalculate'/>
             <str val='revalidate'/>
             <str val='refresh'/>
             <str val='reset'/>
             <str val='load'/>
             <str val='send'/>
             <str val='message'/>
            </literal>
            <fn name='local-name'>
             <dot type='Q{http://www.w3.org/2002/xforms}*'/>
            </fn>
           </gc>
          </filter>
         </union>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}show)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;show&#39;;'/>
        </union>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}hide)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;hide&#39;;'/>
       </union>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}script)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;script&#39;;'/>
      </union>
      <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}unload)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;unload&#39;;'/>
     </union>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id='77' binds='17'>
  <template name='Q{}DOMActivate' flags='os' line='3259' module='saxon-xforms.xsl' slots='3'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3260'>
    <param name='Q{}form-control' slot='0' flags='i' as='node()'>
     <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|form-control'>
      <check card='1' diag='8|0|XTTE0590|form-control'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <let line='3262' var='Q{}actions' as='map(*)?' slot='1' eval='7'>
     <treat as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|actions'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
       <check card='1' diag='0|0||ixsl:call'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
       </check>
       <str val='getAction'/>
       <arrayBlock>
        <fn name='string'>
         <slash simple='1'>
          <varRef name='Q{}form-control' slot='0'/>
          <axis name='attribute' nodeTest='attribute(Q{}data-action)' jsTest='return item.name===&#39;data-action&#39;'/>
         </slash>
        </fn>
       </arrayBlock>
      </ifCall>
     </treat>
     <forEach line='3294'>
      <varRef name='Q{}actions' slot='1'/>
      <let line='3295' var='Q{}action-map' as='map(*)' slot='2' eval='16'>
       <dot type='map(*)'/>
       <choose line='3298'>
        <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}contains' type='xs:boolean'>
         <varRef name='Q{}action-map' slot='2'/>
         <str val='@event'/>
        </ifCall>
        <choose line='3299'>
         <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
          <data>
           <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
            <varRef name='Q{}action-map' slot='2'/>
            <str val='@event'/>
           </ifCall>
          </data>
          <str val='DOMActivate'/>
         </gc>
         <callT line='3300' name='Q{}applyActions' bSlot='0' flags='t'>
          <withParam name='Q{}action-map' flags='t' as='item()'>
           <varRef line='3301' name='Q{}action-map' slot='2'/>
          </withParam>
         </callT>
        </choose>
       </choose>
      </let>
     </forEach>
    </let>
   </sequence>
  </template>
 </co>
 <co id='78' binds=''>
  <template name='Q{}serverError' flags='os' line='994' module='saxon-xforms.xsl' slots='1'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='995'>
    <param name='Q{}responseMap' slot='0' flags='i' as='map(*)'>
     <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|responseMap'>
      <check card='1' diag='8|0|XTTE0590|responseMap'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <message line='996'>
     <sequence role='select'>
      <valueOf>
       <str val='Server side error HTTP response - '/>
      </valueOf>
      <valueOf>
       <fn name='concat'>
        <atomSing card='?' diag='0|0||fn:concat'>
         <lookup>
          <varRef name='Q{}responseMap' slot='0'/>
          <str val='status'/>
         </lookup>
        </atomSing>
        <str val=' '/>
        <atomSing card='?' diag='0|2||fn:concat'>
         <lookup>
          <varRef name='Q{}responseMap' slot='0'/>
          <str val='message'/>
         </lookup>
        </atomSing>
       </fn>
      </valueOf>
     </sequence>
     <str role='terminate' val='no'/>
     <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
    </message>
   </sequence>
  </template>
 </co>
 <co id='44' binds='1 1 32 44'>
  <template name='Q{}xforms-recalculate-binding' flags='os' line='2925' module='saxon-xforms.xsl' slots='7'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2926'>
    <param name='Q{}instanceXML' slot='0' flags='r' as='element()'>
     <treat role='conversion' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='8|0|XTTE0590|instanceXML'>
      <check card='1' diag='8|0|XTTE0590|instanceXML'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <param line='2927' name='Q{}calculation-bindings' slot='1' flags='t' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
     <empty role='select'/>
     <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='8|0|XTTE0590|calculation-bindings'>
      <supplied slot='1'/>
     </treat>
    </param>
    <param line='2928' name='Q{}counter' slot='2' flags='r' as='xs:integer'>
     <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|counter'>
      <check card='1' diag='8|0|XTTE0590|counter'>
       <cvUntyped to='xs:integer' diag='8|0|XTTE0590|counter'>
        <data>
         <supplied slot='2'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line='2929' var='Q{}this-binding' as='element(Q{http://www.w3.org/2002/xforms}bind)?' slot='3' eval='7'>
     <subscript>
      <varRef name='Q{}calculation-bindings' slot='1'/>
      <varRef name='Q{}counter' slot='2'/>
     </subscript>
     <choose line='2931'>
      <fn name='exists'>
       <varRef name='Q{}this-binding' slot='3'/>
      </fn>
      <let line='2932' var='Q{}calculated-nodes' as='node()*' slot='4' eval='8'>
       <treat line='2933' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|calculated-nodes'>
        <evaluate dxns=''>
         <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='0' eval='16'>
          <check card='1' diag='0|0||xforms:impose'>
           <cvUntyped to='xs:string'>
            <data>
             <slash simple='1'>
              <varRef name='Q{}this-binding' slot='3'/>
              <axis name='attribute' nodeTest='attribute(Q{}nodeset)' jsTest='return item.name===&#39;nodeset&#39;'/>
             </slash>
            </data>
           </cvUntyped>
          </check>
         </ufCall>
         <varRef role='cxt' name='Q{}instanceXML' slot='0'/>
         <varRef role='nsCxt' name='Q{}instanceXML' slot='0'/>
         <str role='sa' val='no'/>
         <map role='options' size='0'/>
         <map role='wp' size='0'/>
        </evaluate>
       </treat>
       <let line='2935' var='Q{}value' as='xs:string?' slot='5' eval='7'>
        <treat line='2936' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|value'>
         <check card='?' diag='3|0|XTTE0570|value'>
          <cvUntyped to='xs:string' diag='3|0|XTTE0570|value'>
           <data>
            <evaluate dxns=''>
             <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='16'>
              <check card='1' diag='0|0||xforms:impose'>
               <cvUntyped to='xs:string'>
                <data>
                 <slash simple='1'>
                  <varRef name='Q{}this-binding' slot='3'/>
                  <axis name='attribute' nodeTest='attribute(Q{}calculate)' jsTest='return item.name===&#39;calculate&#39;'/>
                 </slash>
                </data>
               </cvUntyped>
              </check>
             </ufCall>
             <varRef role='cxt' name='Q{}instanceXML' slot='0'/>
             <varRef role='nsCxt' name='Q{}instanceXML' slot='0'/>
             <str role='sa' val='no'/>
             <map role='options' size='0'/>
             <map role='wp' size='0'/>
            </evaluate>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line='2938' var='Q{}updatedInstanceXML' as='element()' slot='6' eval='16'>
         <treat line='2939' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|updatedInstanceXML'>
          <check card='1' diag='3|0|XTTE0570|updatedInstanceXML'>
           <applyT mode='Q{}recalculate' bSlot='2'>
            <varRef role='select' name='Q{}instanceXML' slot='0'/>
            <withParam name='Q{}updated-nodes' flags='t' as='node()*'>
             <varRef line='2940' name='Q{}calculated-nodes' slot='4'/>
            </withParam>
            <withParam name='Q{}updated-value' flags='t' as='xs:string?'>
             <varRef line='2941' name='Q{}value' slot='5'/>
            </withParam>
           </applyT>
          </check>
         </treat>
         <callT line='2945' name='Q{}xforms-recalculate-binding' bSlot='3' flags='t'>
          <withParam name='Q{}instanceXML' flags='c' as='element()'>
           <varRef line='2946' name='Q{}updatedInstanceXML' slot='6'/>
          </withParam>
          <withParam name='Q{}counter' flags='c' as='xs:integer'>
           <arith line='2947' op='+' calc='i+i'>
            <varRef name='Q{}counter' slot='2'/>
            <int val='1'/>
           </arith>
          </withParam>
         </callT>
        </let>
       </let>
      </let>
      <true/>
      <varRef line='2951' name='Q{}instanceXML' slot='0'/>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id='48' binds='1 1'>
  <function name='Q{http://www.w3.org/2002/xforms}check-constraints-on-fields' line='898' module='saxon-xforms.xsl' eval='8' flags='pU' as='item()*' slots='4'>
   <arg name='Q{}instanceXML' as='element()'/>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='901' var='Q{}constraint-fieldsi' as='element()*' slot='1' eval='8'>
    <filter flags='b'>
     <slash simple='1'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
      <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
     </slash>
     <fn name='exists'>
      <axis name='attribute' nodeTest='attribute(Q{}data-constraint)' jsTest='return item.name===&#39;data-constraint&#39;'/>
     </fn>
    </filter>
    <forEach line='903'>
     <varRef name='Q{}constraint-fieldsi' slot='1'/>
     <let line='904' var='Q{}contexti' as='node()' slot='2' eval='16'>
      <treat line='905' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|contexti'>
       <check card='1' diag='3|0|XTTE0570|contexti'>
        <evaluate dxns=''>
         <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='0' eval='16'>
          <check card='1' diag='0|0||xforms:impose'>
           <cvUntyped to='xs:string'>
            <attVal name='Q{}data-ref' chk='0'/>
           </cvUntyped>
          </check>
         </ufCall>
         <varRef role='cxt' name='Q{}instanceXML' slot='0'/>
         <varRef role='nsCxt' name='Q{}instanceXML' slot='0'/>
         <str role='sa' val='no'/>
         <map role='options' size='0'/>
         <map role='wp' size='0'/>
        </evaluate>
       </check>
      </treat>
      <sequence line='907'>
       <message>
        <sequence role='select'>
         <valueOf>
          <str val='[xforms:check-constraints-on-fields] Evaluating XPath: '/>
         </valueOf>
         <valueOf>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}data-ref' chk='0'/>
          </convert>
         </valueOf>
        </sequence>
        <str role='terminate' val='no'/>
        <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
       </message>
       <let line='909' var='Q{}resulti' as='xs:boolean' slot='3' eval='16'>
        <treat line='910' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='3|0|XTTE0570|resulti'>
         <check card='1' diag='3|0|XTTE0570|resulti'>
          <cvUntyped to='xs:boolean' diag='3|0|XTTE0570|resulti'>
           <data>
            <evaluate dxns=''>
             <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='16'>
              <check card='1' diag='0|0||xforms:impose'>
               <cvUntyped to='xs:string'>
                <attVal name='Q{}data-constraint' chk='0'/>
               </cvUntyped>
              </check>
             </ufCall>
             <varRef role='cxt' name='Q{}contexti' slot='2'/>
             <varRef role='nsCxt' name='Q{}instanceXML' slot='0'/>
             <str role='sa' val='no'/>
             <map role='options' size='0'/>
             <map role='wp' size='0'/>
            </evaluate>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <choose line='912'>
         <fn name='not'>
          <varRef name='Q{}resulti' slot='3'/>
         </fn>
         <dot type='element()'/>
        </choose>
       </let>
      </sequence>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id='79' binds='80 28'>
  <mode name='Q{http://saxonica.com/ns/interactiveXSLT}onchange' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='2' part='2' rank='0' minImp='0' slots='0' flags='s' line='308' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:textarea' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;textarea&#39;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='309'>
     <callT name='Q{}action-setvalue-form-control' bSlot='0'>
      <withParam name='Q{}form-control' flags='c' as='node()'>
       <dot line='310' type='element()'/>
      </withParam>
     </callT>
     <callT line='312' name='Q{}outermost-action-handler' bSlot='1' flags='t'/>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-0.25' seq='2' part='1' rank='0' minImp='0' slots='0' flags='s' line='308' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:select' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;select&#39;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='309'>
     <callT name='Q{}action-setvalue-form-control' bSlot='0'>
      <withParam name='Q{}form-control' flags='c' as='node()'>
       <dot line='310' type='element()'/>
      </withParam>
     </callT>
     <callT line='312' name='Q{}outermost-action-handler' bSlot='1' flags='t'/>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-0.25' seq='2' rank='0' minImp='0' slots='0' flags='s' line='308' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:input' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;input&#39;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='309'>
     <callT name='Q{}action-setvalue-form-control' bSlot='0'>
      <withParam name='Q{}form-control' flags='c' as='node()'>
       <dot line='310' type='element()'/>
      </withParam>
     </callT>
     <callT line='312' name='Q{}outermost-action-handler' bSlot='1' flags='t'/>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='68' binds='42 81 82 82 73 83 39'>
  <template name='Q{}xformsjs-main' flags='os' line='139' module='saxon-xforms.xsl' slots='16'>
   <let role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='241' var='Q{http://saxon.sf.net/generated-variable}v1' as='item()' slot='4' eval='13'>
    <check card='1' diag='0|0||ixsl:call'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
    </check>
    <sequence line='140'>
     <param name='Q{}xforms-doc' slot='0' as='document-node()?'>
      <empty role='select'/>
      <treat role='conversion' as='document-node()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);' diag='8|0|XTTE0590|xforms-doc'>
       <check card='?' diag='8|0|XTTE0590|xforms-doc'>
        <supplied slot='0'/>
       </check>
      </treat>
     </param>
     <param line='141' name='Q{}xforms-file' slot='1' as='xs:string?'>
      <empty role='select'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|xforms-file'>
       <check card='?' diag='8|0|XTTE0590|xforms-file'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|xforms-file'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='142' name='Q{}instance-docs' slot='2' as='map(*)?'>
      <empty role='select'/>
      <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|instance-docs'>
       <check card='?' diag='8|0|XTTE0590|instance-docs'>
        <supplied slot='2'/>
       </check>
      </treat>
     </param>
     <param line='143' name='Q{}xFormsId' slot='3' as='xs:string'>
      <gVarRef role='select' name='Q{}xform-html-id' bSlot='0'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|xFormsId'>
       <check card='1' diag='8|0|XTTE0590|xFormsId'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|xFormsId'>
         <data>
          <supplied slot='3'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <message line='145'>
      <valueOf role='select'>
       <str val='[xformsjs-main] START'/>
      </valueOf>
      <str role='terminate' val='no'/>
      <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
     </message>
     <applyT line='149' mode='Q{}set-js' bSlot='1'>
      <slash role='select' simple='1'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
       <axis name='descendant' nodeTest='*:head' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;head&#39;'/>
      </slash>
     </applyT>
     <let line='158' var='Q{}xforms-doci' as='document-node()?' slot='5' eval='7'>
      <choose line='160'>
       <fn name='exists'>
        <varRef name='Q{}xforms-doc' slot='0'/>
       </fn>
       <varRef line='161' name='Q{}xforms-doc' slot='0'/>
       <fn line='163' name='doc-available'>
        <varRef name='Q{}xforms-file' slot='1'/>
       </fn>
       <fn line='164' name='doc'>
        <varRef name='Q{}xforms-file' slot='1'/>
       </fn>
       <fn line='166' name='exists'>
        <gVarRef name='Q{}xforms-doc-global' bSlot='2'/>
       </fn>
       <gVarRef line='167' name='Q{}xforms-doc-global' bSlot='3'/>
       <fn line='169' name='exists'>
        <varRef name='Q{}xforms-file' slot='1'/>
       </fn>
       <treat line='170' as='document-node()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);' diag='3|0|XTTE0570|xforms-doci'>
        <message>
         <sequence role='select'>
          <valueOf>
           <str val='[xformsjs-main] Unable to locate XForm file at '/>
          </valueOf>
          <varRef name='Q{}xforms-file' slot='1'/>
         </sequence>
         <str role='terminate' val='yes'/>
         <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
        </message>
       </treat>
       <true/>
       <treat line='173' as='document-node()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);' diag='3|0|XTTE0570|xforms-doci'>
        <message>
         <valueOf role='select'>
          <str val='[xformsjs-main] Unable to locate XForm!'/>
         </valueOf>
         <str role='terminate' val='yes'/>
         <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
        </message>
       </treat>
      </choose>
      <let line='181' var='Q{}first-model' as='element(Q{http://www.w3.org/2002/xforms}model)' slot='6' eval='16'>
       <check card='1' diag='3|0|XTTE0570|first-model'>
        <slash>
         <slash simple='1'>
          <varRef name='Q{}xforms-doci' slot='5'/>
          <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
         </slash>
         <first>
          <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
         </first>
        </slash>
       </check>
       <let line='182' var='Q{}first-model-id' as='attribute(Q{}id)?' slot='7' eval='8'>
        <slash simple='1'>
         <varRef name='Q{}first-model' slot='6'/>
         <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
        </slash>
        <let line='198' var='Q{http://saxon.sf.net/generated-variable}v0' as='item()?' slot='8' eval='13'>
         <choose>
          <fn name='exists'>
           <varRef name='Q{}first-model-id' slot='7'/>
          </fn>
          <varRef name='Q{}first-model-id' slot='7'/>
          <true/>
          <str val='saxon-forms-default-model'/>
         </choose>
         <let line='184' var='Q{}first-instance-id' as='attribute(Q{}id)?' slot='9' eval='8'>
          <slash line='183' simple='1'>
           <check card='1' diag='3|0|XTTE0570|first-instance'>
            <slash>
             <varRef name='Q{}first-model' slot='6'/>
             <first>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}instance)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;instance&#39;;'/>
             </first>
            </slash>
           </check>
           <axis line='184' name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
          </slash>
          <let line='185' var='Q{}default-instance-id' as='xs:string' slot='10' eval='16'>
           <choose>
            <fn name='exists'>
             <varRef name='Q{}first-instance-id' slot='9'/>
            </fn>
            <check card='1' diag='3|0|XTTE0570|default-instance-id'>
             <cvUntyped to='xs:string' diag='3|0|XTTE0570|default-instance-id'>
              <data>
               <varRef name='Q{}first-instance-id' slot='9'/>
              </data>
             </cvUntyped>
            </check>
            <true/>
            <str val='saxon-forms-default-instance'/>
           </choose>
           <let line='188' var='Q{}models' as='element(Q{http://www.w3.org/2002/xforms}model)*' slot='11' eval='3'>
            <slash simple='2'>
             <slash simple='1'>
              <varRef name='Q{}xforms-doci' slot='5'/>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
             </slash>
             <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
            </slash>
            <sequence line='190'>
             <choose>
              <fn name='exists'>
               <tail start='2'>
                <filter flags='b'>
                 <varRef name='Q{}models' slot='11'/>
                 <fn name='empty'>
                  <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
                 </fn>
                </filter>
               </tail>
              </fn>
              <message line='192'>
               <str role='select' val='[xformsjs-main] FATAL ERROR: The XForm contains more than one model with no ID. At most one model may have no ID.'/>
               <str role='terminate' val='yes'/>
               <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
              </message>
             </choose>
             <forEach line='194'>
              <varRef name='Q{}models' slot='11'/>
              <sequence line='195'>
               <message>
                <valueOf role='select'>
                 <str val='[xformsjs-main] Construct model ...'/>
                </valueOf>
                <str role='terminate' val='no'/>
                <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
               </message>
               <callT line='196' name='Q{}xforms-model-construct' bSlot='4'>
                <withParam name='Q{}model' flags='t' as='item()'>
                 <dot line='197' type='element(Q{http://www.w3.org/2002/xforms}model)'/>
                </withParam>
                <withParam name='Q{}default-model-id' flags='t' as='item()?'>
                 <varRef line='198' name='Q{http://saxon.sf.net/generated-variable}v0' slot='8'/>
                </withParam>
                <withParam name='Q{}default-instance-id' flags='t' as='xs:string'>
                 <varRef line='199' name='Q{}default-instance-id' slot='10'/>
                </withParam>
               </callT>
              </sequence>
             </forEach>
             <ifCall line='205' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='setXFormsDoc'/>
              <arrayBlock>
               <varRef name='Q{}xforms-doci' slot='5'/>
              </arrayBlock>
             </ifCall>
             <ifCall line='206' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
              <check card='1' diag='0|0||ixsl:call'>
               <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
              </check>
              <str val='setXForm'/>
              <arrayBlock>
               <treat line='179' as='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;' diag='3|0|XTTE0570|xform'>
                <let var='Q{}this' as='element()' slot='12' eval='16'>
                 <check card='1' diag='0|0||xforms:addNamespaceDeclarations'>
                  <slash simple='1'>
                   <varRef name='Q{}xforms-doci' slot='5'/>
                   <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                  </slash>
                 </check>
                 <compElem line='2153'>
                  <fn role='name' name='name'>
                   <varRef name='Q{}this' slot='12'/>
                  </fn>
                  <sequence role='content' line='2154'>
                   <namespace flags='l'>
                    <str role='name' val='xforms'/>
                    <str role='select' val='http://www.w3.org/2002/xforms'/>
                   </namespace>
                   <forEach line='2155'>
                    <filter flags='b'>
                     <filter flags='b'>
                      <slash simple='1'>
                       <varRef name='Q{}this' slot='12'/>
                       <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                      </slash>
                      <fn name='boolean'>
                       <fn name='namespace-uri'>
                        <dot type='element()'/>
                       </fn>
                      </fn>
                     </filter>
                     <fn name='not'>
                      <gc op='=' card='N:1' comp='CCC'>
                       <sequence>
                        <slash>
                         <fn name='reverse'>
                          <axis name='ancestor' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                         </fn>
                         <fn name='namespace-uri'>
                          <dot type='element()'/>
                         </fn>
                        </slash>
                        <slash>
                         <fn name='reverse'>
                          <axis name='preceding' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                         </fn>
                         <fn name='namespace-uri'>
                          <dot type='element()'/>
                         </fn>
                        </slash>
                       </sequence>
                       <fn name='namespace-uri'>
                        <dot type='element()'/>
                       </fn>
                      </gc>
                     </fn>
                    </filter>
                    <namespace line='2158' flags='l'>
                     <fn role='name' line='2157' name='substring-before'>
                      <fn name='name'>
                       <dot type='element()'/>
                      </fn>
                      <str val=':'/>
                     </fn>
                     <convert role='select' from='xs:anyURI' to='xs:string'>
                      <fn line='2156' name='namespace-uri'>
                       <dot type='element()'/>
                      </fn>
                     </convert>
                    </namespace>
                   </forEach>
                   <copyOf line='2160' flags='vc'>
                    <sequence>
                     <slash simple='1'>
                      <varRef name='Q{}this' slot='12'/>
                      <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
                     </slash>
                     <slash simple='1'>
                      <varRef name='Q{}this' slot='12'/>
                      <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
                     </slash>
                    </sequence>
                   </copyOf>
                  </sequence>
                 </compElem>
                </let>
               </treat>
              </arrayBlock>
             </ifCall>
             <choose line='208'>
              <fn name='empty'>
               <varRef name='Q{}instance-docs' slot='2'/>
              </fn>
              <ifCall line='209' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
               <check card='1' diag='0|0||ixsl:call'>
                <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
               </check>
               <str val='clearDeferredUpdateFlags'/>
               <array size='0'/>
              </ifCall>
             </choose>
             <let line='215' var='Q{}submissions' as='map(xs:string, map(*))' slot='13' eval='8'>
              <ifCall line='217' name='Q{http://www.w3.org/2005/xpath-functions/map}merge' type='map(*)'>
               <forEach>
                <slash simple='2'>
                 <slash simple='2'>
                  <slash simple='1'>
                   <varRef name='Q{}xforms-doci' slot='5'/>
                   <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
                  </slash>
                  <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
                 </slash>
                 <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}submission)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;submission&#39;;'/>
                </slash>
                <let line='222' var='Q{}map-key' as='xs:string' slot='14' eval='16'>
                 <choose>
                  <fn name='exists'>
                   <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
                  </fn>
                  <check card='1' diag='3|0|XTTE0570|map-key'>
                   <cast as='xs:string' emptiable='1'>
                    <attVal name='Q{}id' chk='0'/>
                   </cast>
                  </check>
                  <fn name='exists'>
                   <axis name='attribute' nodeTest='attribute(Q{}ref)' jsTest='return item.name===&#39;ref&#39;'/>
                  </fn>
                  <check card='1' diag='3|0|XTTE0570|map-key'>
                   <cast as='xs:string' emptiable='1'>
                    <attVal name='Q{}ref' chk='0'/>
                   </cast>
                  </check>
                  <true/>
                  <str val='saxon-forms-default-submission'/>
                 </choose>
                 <let line='223' var='Q{}map-value' as='map(*)' slot='15' eval='16'>
                  <treat line='224' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|map-value'>
                   <check card='1' diag='3|0|XTTE0570|map-value'>
                    <callT name='Q{}setSubmission' bSlot='5'>
                     <withParam name='Q{}this' flags='c' as='element()'>
                      <dot line='225' type='element(Q{http://www.w3.org/2002/xforms}submission)'/>
                     </withParam>
                     <withParam name='Q{}submission-id' flags='c' as='xs:string'>
                      <varRef line='226' name='Q{}map-key' slot='14'/>
                     </withParam>
                     <withParam name='Q{}default-instance-id' flags='t' as='xs:string'>
                      <varRef line='227' name='Q{}default-instance-id' slot='10'/>
                     </withParam>
                    </callT>
                   </check>
                  </treat>
                  <ifCall line='230' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                   <varRef name='Q{}map-key' slot='14'/>
                   <varRef name='Q{}map-value' slot='15'/>
                  </ifCall>
                 </let>
                </let>
               </forEach>
               <map size='2'>
                <str val='duplicates'/>
                <str val='reject'/>
                <str val='duplicates-error-code'/>
                <str val='XTDE3365'/>
               </map>
              </ifCall>
              <sequence line='239'>
               <forEach>
                <treat line='237' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|submissionKeys'>
                 <cvUntyped to='xs:string' diag='3|0|XTTE0570|submissionKeys'>
                  <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}keys' type='xs:anyAtomicType*'>
                   <varRef name='Q{}submissions' slot='13'/>
                  </ifCall>
                 </cvUntyped>
                </treat>
                <ifCall line='241' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
                 <varRef name='Q{http://saxon.sf.net/generated-variable}v1' slot='4'/>
                 <str val='addSubmission'/>
                 <arrayBlock>
                  <dot type='xs:string'/>
                  <check line='240' card='1' diag='3|0|XTTE0570|submission'>
                   <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                    <varRef name='Q{}submissions' slot='13'/>
                    <dot type='xs:string'/>
                   </ifCall>
                  </check>
                 </arrayBlock>
                </ifCall>
               </forEach>
               <resultDoc line='250' global='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;method=html&#xD;&#xA;indent=no&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;' local='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;'>
                <fn role='href' name='concat'>
                 <str val='#'/>
                 <varRef name='Q{}xFormsId' slot='3'/>
                </fn>
                <applyT role='content' line='251' bSlot='6'>
                 <slash role='select' simple='1'>
                  <varRef name='Q{}xforms-doci' slot='5'/>
                  <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}xform)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;xform&#39;;'/>
                 </slash>
                 <withParam name='Q{}bindings-js' flags='t' as='element(Q{http://www.w3.org/2002/xforms}bind)?'>
                  <treat line='252' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='8|0|XTTE0590|bindings-js'>
                   <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
                    <check card='1' diag='0|0||ixsl:call'>
                     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
                    </check>
                    <str val='getBindings'/>
                    <array size='0'/>
                   </ifCall>
                  </treat>
                 </withParam>
                 <withParam name='Q{}submissions' flags='t' as='map(xs:string, map(*))'>
                  <varRef line='253' name='Q{}submissions' slot='13'/>
                 </withParam>
                 <withParam name='Q{}nodeset' flags='t' as='xs:string'>
                  <str val=''/>
                 </withParam>
                 <withParam name='Q{}default-instance-id' flags='t' as='xs:string'>
                  <varRef line='256' name='Q{}default-instance-id' slot='10'/>
                 </withParam>
                </applyT>
               </resultDoc>
              </sequence>
             </let>
            </sequence>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </let>
  </template>
 </co>
 <co id='81' binds='61 61 56'>
  <mode name='Q{}set-js' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.25' seq='0' rank='0' minImp='0' slots='0' flags='s' line='268' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='*:head' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;head&#39;'/>
    <choose role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='281'>
     <fn name='not'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <slash simple='1'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
          <axis name='descendant' nodeTest='element(Q{}script)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;script&#39;;'/>
         </slash>
         <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
        </slash>
       </data>
       <gVarRef name='Q{}xforms-cache-id' bSlot='0'/>
      </gc>
     </fn>
     <resultDoc line='282' global='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;method=html&#xD;&#xA;indent=no&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;' local='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;'>
      <str role='href' val='?.'/>
      <elem role='content' line='283' name='script' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
       <sequence>
        <att name='type' flags='l'>
         <str val='text/javascript'/>
        </att>
        <att name='id' flags='l'>
         <gVarRef name='Q{}xforms-cache-id' bSlot='1'/>
        </att>
        <gVarRef line='284' name='Q{}saxon-forms-javascript' bSlot='2'/>
       </sequence>
      </elem>
     </resultDoc>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id='74' binds='74'>
  <mode name='Q{}namespace-fix' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.5' seq='34' rank='0' minImp='0' slots='1' flags='s' line='1991' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
    <let role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1992' var='Q{}current-namespace' as='xs:anyURI' slot='0' eval='8'>
     <fn name='namespace-uri'>
      <dot type='element()'/>
     </fn>
     <compElem line='1994'>
      <convert role='name' from='xs:QName' to='xs:string'>
       <fn line='1993' name='QName'>
        <convert from='xs:anyURI' to='xs:string'>
         <varRef name='Q{}current-namespace' slot='0'/>
        </convert>
        <fn name='name'>
         <dot type='element()'/>
        </fn>
       </fn>
      </convert>
      <convert role='namespace' from='xs:anyURI' to='xs:string'>
       <varRef name='Q{}current-namespace' slot='0'/>
      </convert>
      <sequence role='content' line='1995'>
       <namespace flags='l'>
        <str role='name' val='xforms'/>
        <str role='select' val='http://www.w3.org/2002/xforms'/>
       </namespace>
       <copyOf line='1996' flags='vc'>
        <axis name='namespace' nodeTest='namespace-node()' jsTest='return SaxonJS.U.isNamespaceNode(item)'/>
       </copyOf>
       <applyT line='1997' mode='Q{}namespace-fix' bSlot='0'>
        <sequence role='select'>
         <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
         <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
        </sequence>
       </applyT>
      </sequence>
     </compElem>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id='49' binds='78 64'>
  <template name='Q{}HTTPsubmit' cxt='map(*)' jsTest='return SaxonJS.U.isMap(item)' flags='s' line='939' module='saxon-xforms.xsl' slots='4'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='943'>
    <param name='Q{}instance-id' slot='0' as='xs:string'>
     <str role='select' val='saxon-forms-default-instance'/>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|instance-id'>
      <check card='1' diag='8|0|XTTE0590|instance-id'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|instance-id'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line='944' name='Q{}targetref' slot='1' as='xs:string?'>
     <empty role='select'/>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|targetref'>
      <check card='?' diag='8|0|XTTE0590|targetref'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|targetref'>
        <data>
         <supplied slot='1'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line='945' name='Q{}replace' slot='2' as='xs:string?'>
     <empty role='select'/>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|replace'>
      <check card='?' diag='8|0|XTTE0590|replace'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|replace'>
        <data>
         <supplied slot='2'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line='955' var='Q{}response' as='item()?' slot='3' eval='7'>
     <check card='?' diag='3|0|XTTE0570|response'>
      <lookup>
       <dot type='map(*)'/>
       <str val='body'/>
      </lookup>
     </check>
     <choose line='958'>
      <fn name='empty'>
       <varRef name='Q{}response' slot='3'/>
      </fn>
      <callT line='959' name='Q{}serverError' bSlot='0' flags='t'>
       <withParam name='Q{}responseMap' flags='c' as='map(*)'>
        <dot line='960' type='map(*)'/>
       </withParam>
      </callT>
      <and line='972' op='and'>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <varRef name='Q{}replace' slot='2'/>
        <str val='instance'/>
       </vc>
       <filter flags='b'>
        <varRef name='Q{}response' slot='3'/>
        <fn name='exists'>
         <slash simple='1'>
          <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|12|XPTY0020|'>
           <dot/>
          </treat>
          <axis name='self' nodeTest='document-node()' jsTest='return (item.nodeType===9||item.nodeType===11);'/>
         </slash>
        </fn>
       </filter>
      </and>
      <sequence line='973'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
        <check card='1' diag='0|0||ixsl:call'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
        <str val='setInstance'/>
        <arrayBlock>
         <varRef name='Q{}instance-id' slot='0'/>
         <slash simple='1'>
          <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
           <varRef name='Q{}response' slot='3'/>
          </treat>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         </slash>
        </arrayBlock>
       </ifCall>
       <callT line='975' name='Q{}xforms-submit-done' bSlot='1' flags='t'/>
      </sequence>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id='41' vis='PUBLIC' binds=''>
  <function name='Q{http://www.w3.org/2002/xforms}instance' line='127' module='xforms-function-library.xsl' eval='7' flags='pU' as='element()?' slots='1'>
   <arg name='Q{}instance-id' as='xs:string'/>
   <treat role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ map=~' line='129' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='5|0|XTTE0780|xforms:instance#1'>
    <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
     <check card='1' diag='0|0||ixsl:call'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
     </check>
     <str val='getInstance'/>
     <arrayBlock>
      <varRef name='Q{}instance-id' slot='0'/>
     </arrayBlock>
    </ifCall>
   </treat>
  </function>
 </co>
 <co id='84' binds='77 10 50'>
  <mode name='Q{http://saxonica.com/ns/interactiveXSLT}onclick' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='0.5' seq='29' rank='0' minImp='0' slots='0' flags='s' line='1846' module='saxon-xforms.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='*:button' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;button&#39;'/>
     <fn ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1846' name='exists'>
      <axis name='attribute' nodeTest='attribute(Q{}data-action)' jsTest='return item.name===&#39;data-action&#39;'/>
     </fn>
    </p.withPredicate>
    <callT role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1847' name='Q{}DOMActivate' bSlot='0' flags='t'>
     <withParam name='Q{}form-control' flags='c' as='node()'>
      <dot line='1848' type='*:button'/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='10' rank='0' minImp='0' slots='0' flags='s' line='921' module='saxon-xforms.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='*:button' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;button&#39;'/>
     <fn ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='921' name='exists'>
      <axis name='attribute' nodeTest='attribute(Q{}data-submit)' jsTest='return item.name===&#39;data-submit&#39;'/>
     </fn>
    </p.withPredicate>
    <callT role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='923' name='Q{}xforms-submit' bSlot='1' flags='t'>
     <withParam name='Q{}submission' flags='c' as='xs:string'>
      <fn line='924' name='string'>
       <axis name='attribute' nodeTest='attribute(Q{}data-submit)' jsTest='return item.name===&#39;data-submit&#39;'/>
      </fn>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='3' rank='0' minImp='0' slots='1' flags='s' line='321' module='saxon-xforms.xsl'>
    <p.withUpper role='match' axis='ancestor' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
      <or ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='321' op='or'>
       <axis name='self' nodeTest='*:span' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;span&#39;'/>
       <axis name='self' nodeTest='*:input' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;input&#39;'/>
      </or>
     </p.withPredicate>
     <p.withPredicate>
      <p.nodeTest test='*:div' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;div&#39;'/>
      <vc ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='321' op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <data>
         <axis name='attribute' nodeTest='attribute(Q{}data-repeat-item)' jsTest='return item.name===&#39;data-repeat-item&#39;'/>
        </data>
       </cast>
       <str val='true'/>
      </vc>
     </p.withPredicate>
    </p.withUpper>
    <let role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='330' var='Q{http://saxon.sf.net/generated-variable}v0' as='item()' slot='0' eval='13'>
     <check card='1' diag='0|0||ixsl:call'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
     </check>
     <sequence line='322'>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
       <check card='1' diag='0|0||ixsl:call'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
       </check>
       <str val='highlightClicked'/>
       <arrayBlock>
        <fn name='string'>
         <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
        </fn>
       </arrayBlock>
      </ifCall>
      <forEach line='325'>
       <fn name='reverse'>
        <filter flags='b'>
         <axis name='ancestor' nodeTest='*:div' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;div&#39;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}data-repeat-item' chk='0'/>
          </cast>
          <str val='true'/>
         </vc>
        </filter>
       </fn>
       <ifCall line='330' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
        <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='0'/>
        <str val='setRepeatIndex'/>
        <arrayBlock>
         <check line='326' card='1' diag='3|0|XTTE0570|repeat-id'>
          <cvUntyped to='xs:string' diag='3|0|XTTE0570|repeat-id'>
           <data>
            <slash simple='1'>
             <first>
              <filter flags='b'>
               <axis name='ancestor' nodeTest='*:div' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;div&#39;'/>
               <fn name='exists'>
                <axis name='attribute' nodeTest='attribute(Q{}data-repeatable-context)' jsTest='return item.name===&#39;data-repeatable-context&#39;'/>
               </fn>
              </filter>
             </first>
             <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
            </slash>
           </data>
          </cvUntyped>
         </check>
         <arith line='327' op='+' calc='i+i'>
          <fn name='count'>
           <filter flags='b'>
            <axis name='preceding-sibling' nodeTest='*:div' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;div&#39;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}data-repeat-item' chk='0'/>
             </cast>
             <str val='true'/>
            </vc>
           </filter>
          </fn>
          <int val='1'/>
         </arith>
        </arrayBlock>
       </ifCall>
      </forEach>
      <choose line='333'>
       <fn name='exists'>
        <axis name='self' nodeTest='*:span' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;span&#39;'/>
       </fn>
       <callT line='334' name='Q{}refreshElementsUsingIndexFunction-JS' bSlot='2' flags='t'/>
      </choose>
     </sequence>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id='83' binds='54 55 70'>
  <template name='Q{}setSubmission' flags='os' line='2636' module='saxon-xforms.xsl' slots='7'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2637'>
    <param name='Q{}this' slot='0' flags='i' as='element()'>
     <treat role='conversion' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='8|0|XTTE0590|this'>
      <check card='1' diag='8|0|XTTE0590|this'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <param line='2638' name='Q{}submission-id' slot='1' flags='i' as='xs:string'>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|submission-id'>
      <check card='1' diag='8|0|XTTE0590|submission-id'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|submission-id'>
        <data>
         <supplied slot='1'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line='2642' var='Q{}refi' as='xs:string' slot='2' eval='16'>
     <treat line='2643' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|refi'>
      <check card='1' diag='3|0|XTTE0570|refi'>
       <cvUntyped to='xs:string' diag='3|0|XTTE0570|refi'>
        <data>
         <applyT mode='Q{}get-data-ref' bSlot='0'>
          <dot role='select' flags='a'/>
         </applyT>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line='2646' var='Q{}this-instance-id' as='xs:string' slot='3' eval='16'>
      <treat line='2647' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|this-instance-id'>
       <check card='1' diag='3|0|XTTE0570|this-instance-id'>
        <cvUntyped to='xs:string' diag='3|0|XTTE0570|this-instance-id'>
         <data>
          <applyT mode='Q{}get-context-instance-id' bSlot='1'>
           <dot role='select' flags='a'/>
           <withParam name='Q{}nodeset' as='xs:string'>
            <varRef line='2648' name='Q{}refi' slot='2'/>
           </withParam>
          </applyT>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line='2660' var='Q{}actions' as='map(*)*' slot='4' eval='4'>
       <treat line='2661' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='3|0|XTTE0570|actions'>
        <applyT mode='Q{}set-actions' bSlot='2'>
         <dot role='select' flags='a'/>
         <withParam name='Q{}instance-key' flags='t' as='xs:string'>
          <varRef line='2662' name='Q{}this-instance-id' slot='3'/>
         </withParam>
         <withParam name='Q{}nodeset' flags='t' as='xs:string'>
          <varRef line='2663' name='Q{}refi' slot='2'/>
         </withParam>
        </applyT>
       </treat>
       <sequence line='2667'>
        <choose>
         <fn name='exists'>
          <varRef name='Q{}actions' slot='4'/>
         </fn>
         <ifCall line='2668' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
          <check card='1' diag='0|0||ixsl:call'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
          </check>
          <str val='addAction'/>
          <arrayBlock>
           <varRef name='Q{}submission-id' slot='1'/>
           <varRef name='Q{}actions' slot='4'/>
          </arrayBlock>
         </ifCall>
        </choose>
        <ifCall line='2673' name='Q{http://www.w3.org/2005/xpath-functions/map}merge' type='map(*)'>
         <sequence>
          <choose>
           <fn name='exists'>
            <slash simple='1'>
             <varRef name='Q{}this' slot='0'/>
             <axis name='attribute' nodeTest='attribute(Q{}resource)' jsTest='return item.name===&#39;resource&#39;'/>
            </slash>
           </fn>
           <ifCall line='2674' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
            <str val='@resource'/>
            <cast as='xs:string' emptiable='1'>
             <data>
              <slash simple='1'>
               <varRef name='Q{}this' slot='0'/>
               <axis name='attribute' nodeTest='attribute(Q{}resource)' jsTest='return item.name===&#39;resource&#39;'/>
              </slash>
             </data>
            </cast>
           </ifCall>
          </choose>
          <ifCall line='2677' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@ref'/>
           <varRef name='Q{}refi' slot='2'/>
          </ifCall>
          <choose line='2679'>
           <fn name='exists'>
            <slash simple='1'>
             <varRef name='Q{}this' slot='0'/>
             <axis name='attribute' nodeTest='attribute(Q{}bind)' jsTest='return item.name===&#39;bind&#39;'/>
            </slash>
           </fn>
           <ifCall line='2680' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
            <str val='@bind'/>
            <cast as='xs:string' emptiable='1'>
             <data>
              <slash simple='1'>
               <varRef name='Q{}this' slot='0'/>
               <axis name='attribute' nodeTest='attribute(Q{}bind)' jsTest='return item.name===&#39;bind&#39;'/>
              </slash>
             </data>
            </cast>
           </ifCall>
          </choose>
          <ifCall line='2683' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
           <str val='@mode'/>
           <choose>
            <fn name='exists'>
             <slash simple='1'>
              <varRef name='Q{}this' slot='0'/>
              <axis name='attribute' nodeTest='attribute(Q{}mode)' jsTest='return item.name===&#39;mode&#39;'/>
             </slash>
            </fn>
            <cast as='xs:string' emptiable='1'>
             <data>
              <slash simple='1'>
               <varRef name='Q{}this' slot='0'/>
               <axis name='attribute' nodeTest='attribute(Q{}mode)' jsTest='return item.name===&#39;mode&#39;'/>
              </slash>
             </data>
            </cast>
            <true/>
            <str val='asynchronous'/>
           </choose>
          </ifCall>
          <let line='2685' var='Q{}submission-method' as='xs:string' slot='5' eval='16'>
           <choose line='2687'>
            <fn name='exists'>
             <slash simple='2'>
              <slash simple='1'>
               <varRef name='Q{}this' slot='0'/>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}method)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;method&#39;;'/>
              </slash>
              <axis name='attribute' nodeTest='attribute(Q{}value)' jsTest='return item.name===&#39;value&#39;'/>
             </slash>
            </fn>
            <cvUntyped line='2688' to='xs:string' diag='3|0|XTTE0570|submission-method'>
             <cast as='xs:untypedAtomic' emptiable='0'>
              <fn name='string-join'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <data>
                 <slash simple='2'>
                  <slash simple='1'>
                   <varRef name='Q{}this' slot='0'/>
                   <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}method)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;method&#39;;'/>
                  </slash>
                  <axis name='attribute' nodeTest='attribute(Q{}value)' jsTest='return item.name===&#39;value&#39;'/>
                 </slash>
                </data>
               </convert>
               <str val=' '/>
              </fn>
             </cast>
            </cvUntyped>
            <fn line='2690' name='exists'>
             <slash simple='1'>
              <varRef name='Q{}this' slot='0'/>
              <axis name='attribute' nodeTest='attribute(Q{}method)' jsTest='return item.name===&#39;method&#39;'/>
             </slash>
            </fn>
            <fn line='2691' name='string'>
             <slash simple='1'>
              <varRef name='Q{}this' slot='0'/>
              <axis name='attribute' nodeTest='attribute(Q{}method)' jsTest='return item.name===&#39;method&#39;'/>
             </slash>
            </fn>
            <true/>
            <str val='POST'/>
           </choose>
           <sequence line='2699'>
            <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
             <str val='@method'/>
             <varRef name='Q{}submission-method' slot='5'/>
            </ifCall>
            <let line='2702' var='Q{}serialization' as='xs:string' slot='6' eval='16'>
             <choose line='2704'>
              <fn name='exists'>
               <slash simple='1'>
                <varRef name='Q{}this' slot='0'/>
                <axis name='attribute' nodeTest='attribute(Q{}serialization)' jsTest='return item.name===&#39;serialization&#39;'/>
               </slash>
              </fn>
              <cvUntyped line='2705' to='xs:string' diag='3|0|XTTE0570|serialization'>
               <cast as='xs:untypedAtomic' emptiable='0'>
                <fn name='string'>
                 <convert from='xs:untypedAtomic' to='xs:string'>
                  <data>
                   <slash simple='1'>
                    <varRef name='Q{}this' slot='0'/>
                    <axis name='attribute' nodeTest='attribute(Q{}serialization)' jsTest='return item.name===&#39;serialization&#39;'/>
                   </slash>
                  </data>
                 </convert>
                </fn>
               </cast>
              </cvUntyped>
              <gc line='2707' op='=' card='N:1' comp='CCC'>
               <literal count='4'>
                <str val='post'/>
                <str val='POST'/>
                <str val='put'/>
                <str val='PUT'/>
               </literal>
               <varRef name='Q{}submission-method' slot='5'/>
              </gc>
              <str val='application/xml'/>
              <gc line='2710' op='=' card='N:1' comp='CCC'>
               <literal count='6'>
                <str val='get'/>
                <str val='GET'/>
                <str val='delete'/>
                <str val='DELETE'/>
                <str val='urlencoded-post'/>
                <str val='URLENCODED-POST'/>
               </literal>
               <varRef name='Q{}submission-method' slot='5'/>
              </gc>
              <str val='application/x-www-form-urlencoded'/>
              <gc line='2713' op='=' card='N:1' comp='CCC'>
               <literal count='2'>
                <str val='multipart-post'/>
                <str val='MULTIPART-POST'/>
               </literal>
               <varRef name='Q{}submission-method' slot='5'/>
              </gc>
              <str val='multipart/related'/>
              <gc line='2716' op='=' card='N:1' comp='CCC'>
               <literal count='2'>
                <str val='form-data-post'/>
                <str val='FORM-DATA-POST'/>
               </literal>
               <varRef name='Q{}submission-method' slot='5'/>
              </gc>
              <str val='multipart/form-data'/>
              <gc line='2719' op='=' card='N:1' comp='CCC'>
               <literal count='2'>
                <str val='post'/>
                <str val='POST'/>
               </literal>
               <varRef name='Q{}submission-method' slot='5'/>
              </gc>
              <str val='application/xml'/>
              <true/>
              <str val='application/xml'/>
             </choose>
             <sequence line='2730'>
              <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@validate'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}validate)' jsTest='return item.name===&#39;validate&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}validate)' jsTest='return item.name===&#39;validate&#39;'/>
                 </slash>
                </fn>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <varRef name='Q{}serialization' slot='6'/>
                 <str val='none'/>
                </vc>
                <str val='false'/>
                <true/>
                <str val='true'/>
               </choose>
              </ifCall>
              <ifCall line='2735' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@relevant'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                 </slash>
                </fn>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <varRef name='Q{}serialization' slot='6'/>
                 <str val='none'/>
                </vc>
                <str val='false'/>
                <true/>
                <str val='true'/>
               </choose>
              </ifCall>
              <ifCall line='2737' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@serialization'/>
               <varRef name='Q{}serialization' slot='6'/>
              </ifCall>
              <ifCall line='2739' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@version'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}version)' jsTest='return item.name===&#39;version&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}version)' jsTest='return item.name===&#39;version&#39;'/>
                 </slash>
                </fn>
                <true/>
                <str val='1.0'/>
               </choose>
              </ifCall>
              <ifCall line='2741' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@indent'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}indent)' jsTest='return item.name===&#39;indent&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}indent)' jsTest='return item.name===&#39;indent&#39;'/>
                 </slash>
                </fn>
                <true/>
                <str val='false'/>
               </choose>
              </ifCall>
              <ifCall line='2744' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@mediatype'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}mediatype)' jsTest='return item.name===&#39;mediatype&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}mediatype)' jsTest='return item.name===&#39;mediatype&#39;'/>
                 </slash>
                </fn>
                <true/>
                <str val='application/xml'/>
               </choose>
              </ifCall>
              <ifCall line='2747' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@encoding'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}encoding)' jsTest='return item.name===&#39;encoding&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}encoding)' jsTest='return item.name===&#39;encoding&#39;'/>
                 </slash>
                </fn>
                <true/>
                <str val='UTF-8'/>
               </choose>
              </ifCall>
              <ifCall line='2749' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@omit-xml-declaration'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}omit-xml-declaration)' jsTest='return item.name===&#39;omit-xml-declaration&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}omit-xml-declaration)' jsTest='return item.name===&#39;omit-xml-declaration&#39;'/>
                 </slash>
                </fn>
                <true/>
                <str val='false'/>
               </choose>
              </ifCall>
              <choose line='2751'>
               <fn name='exists'>
                <slash simple='1'>
                 <varRef name='Q{}this' slot='0'/>
                 <axis name='attribute' nodeTest='attribute(Q{}standalone)' jsTest='return item.name===&#39;standalone&#39;'/>
                </slash>
               </fn>
               <ifCall line='2752' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                <str val='@standalone'/>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}standalone)' jsTest='return item.name===&#39;standalone&#39;'/>
                 </slash>
                </fn>
               </ifCall>
              </choose>
              <ifCall line='2755' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@cdata-section-elements'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}cdata-section-elements)' jsTest='return item.name===&#39;cdata-section-elements&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}cdata-section-elements)' jsTest='return item.name===&#39;cdata-section-elements&#39;'/>
                 </slash>
                </fn>
                <true/>
                <str val=''/>
               </choose>
              </ifCall>
              <ifCall line='2757' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@replace'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}replace)' jsTest='return item.name===&#39;replace&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}replace)' jsTest='return item.name===&#39;replace&#39;'/>
                 </slash>
                </fn>
                <true/>
                <str val='all'/>
               </choose>
              </ifCall>
              <ifCall line='2759' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@instance'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}instance)' jsTest='return item.name===&#39;instance&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}instance)' jsTest='return item.name===&#39;instance&#39;'/>
                 </slash>
                </fn>
                <true/>
                <varRef name='Q{}this-instance-id' slot='3'/>
               </choose>
              </ifCall>
              <choose line='2762'>
               <fn name='exists'>
                <slash simple='1'>
                 <varRef name='Q{}this' slot='0'/>
                 <axis name='attribute' nodeTest='attribute(Q{}targetref)' jsTest='return item.name===&#39;targetref&#39;'/>
                </slash>
               </fn>
               <ifCall line='2763' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                <str val='@targetref'/>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}targetref)' jsTest='return item.name===&#39;targetref&#39;'/>
                 </slash>
                </fn>
               </ifCall>
              </choose>
              <ifCall line='2766' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
               <str val='@separator'/>
               <choose>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}separator)' jsTest='return item.name===&#39;separator&#39;'/>
                 </slash>
                </fn>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}separator)' jsTest='return item.name===&#39;separator&#39;'/>
                 </slash>
                </fn>
                <true/>
                <str val='&amp;'/>
               </choose>
              </ifCall>
              <choose line='2768'>
               <fn name='exists'>
                <slash simple='1'>
                 <varRef name='Q{}this' slot='0'/>
                 <axis name='attribute' nodeTest='attribute(Q{}includenamespaceprefixes)' jsTest='return item.name===&#39;includenamespaceprefixes&#39;'/>
                </slash>
               </fn>
               <ifCall line='2769' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                <str val='@includenamespaceprefixes'/>
                <fn name='string'>
                 <slash simple='1'>
                  <varRef name='Q{}this' slot='0'/>
                  <axis name='attribute' nodeTest='attribute(Q{}includenamespaceprefixes)' jsTest='return item.name===&#39;includenamespaceprefixes&#39;'/>
                 </slash>
                </fn>
               </ifCall>
              </choose>
             </sequence>
            </let>
           </sequence>
          </let>
         </sequence>
         <map size='2'>
          <str val='duplicates'/>
          <str val='reject'/>
          <str val='duplicates-error-code'/>
          <str val='XTDE3365'/>
         </map>
        </ifCall>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='85' binds='80 28'>
  <mode name='Q{http://saxonica.com/ns/interactiveXSLT}onkeyup' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='0.5' seq='1' rank='0' minImp='0' slots='0' flags='s' line='297' module='saxon-xforms.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='*:input' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;input&#39;'/>
     <gc ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='297' op='=' card='N:1' comp='CCC'>
      <fn name='tokenize'>
       <cvUntyped to='xs:string' diag='3|0|XTTE0570|class'>
        <data>
         <slash simple='1'>
          <dot type='*:input'/>
          <axis line='2195' name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
         </slash>
        </data>
       </cvUntyped>
      </fn>
      <str val='incremental'/>
     </gc>
    </p.withPredicate>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='298'>
     <callT name='Q{}action-setvalue-form-control' bSlot='0'>
      <withParam name='Q{}form-control' flags='c' as='node()'>
       <dot line='299' type='*:input'/>
      </withParam>
     </callT>
     <callT line='301' name='Q{}outermost-action-handler' bSlot='1' flags='t'/>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='22' binds='42'>
  <template name='Q{}logToPage' flags='os' line='2169' module='saxon-xforms.xsl' slots='2'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='2170'>
    <param name='Q{}message' slot='0' flags='i' as='xs:string'>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|message'>
      <check card='1' diag='8|0|XTTE0590|message'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|message'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line='2171' name='Q{}level' slot='1' as='xs:string'>
     <str role='select' val='info'/>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|level'>
      <check card='1' diag='8|0|XTTE0590|level'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|level'>
        <data>
         <supplied slot='1'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <resultDoc line='2173' global='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;method=html&#xD;&#xA;indent=no&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;' local='#&#xD;&#xA;#Sun Apr 11 09:29:38 BST 2021&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}append-content&#xD;&#xA;'>
     <fn role='href' name='concat'>
      <str val='#'/>
      <gVarRef name='Q{}xform-html-id' bSlot='0'/>
     </fn>
     <elem role='content' line='2174' name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
      <sequence>
       <att name='class' flags='l'>
        <fn name='concat'>
         <str val='message-'/>
         <varRef name='Q{}level' slot='1'/>
        </fn>
       </att>
       <elem line='2175' name='p' nsuri='' flags='l'>
        <sequence line='2176'>
         <elem name='b' nsuri='' flags='l'>
          <fn line='2177' name='concat'>
           <fn name='upper-case'>
            <varRef name='Q{}level' slot='1'/>
           </fn>
           <str val=': '/>
          </fn>
         </elem>
         <varRef line='2179' name='Q{}message' slot='0'/>
        </sequence>
       </elem>
      </sequence>
     </elem>
    </resultDoc>
   </sequence>
  </template>
 </co>
 <co id='72' binds=''>
  <template name='Q{}xforms-revalidate' flags='os' line='2961' module='saxon-xforms.xsl' slots='0'>
   <empty role='body'/>
  </template>
 </co>
 <co id='82' binds='45 45 45'>
  <globalParam name='Q{}xforms-doc-global' type='document-node()?' line='83' module='saxon-xforms.xsl' visibility='PUBLIC' jsAcceptor='function test(item) {return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);};if (test(val)) {return val;} else {throw SaxonJS.XError(&#39;Conversion failed&#39;, &#39;XTTE0590&#39;);}' jsCardCheck='function c(n) {return n&lt;=1;};'>
   <choose ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='83'>
    <and op='and'>
     <fn name='exists'>
      <gVarRef name='Q{}xforms-file-global' bSlot='0'/>
     </fn>
     <fn name='doc-available'>
      <gVarRef name='Q{}xforms-file-global' bSlot='1'/>
     </fn>
    </and>
    <fn name='doc'>
     <gVarRef name='Q{}xforms-file-global' bSlot='2'/>
    </fn>
    <vc op='eq' onEmpty='0' comp='CCC'>
     <fn name='namespace-uri'>
      <check card='?' diag='0|0||fn:namespace-uri'>
       <slash simple='1'>
        <root/>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
      </check>
     </fn>
     <str val='http://www.w3.org/2002/xforms'/>
    </vc>
    <root/>
   </choose>
  </globalParam>
 </co>
 <co id='86' binds=''>
  <globalVariable name='Q{}debugTiming' type='xs:boolean' line='86' module='saxon-xforms.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.boolean.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <false/>
  </globalVariable>
 </co>
 <co id='32' binds='32 32'>
  <mode name='Q{}recalculate' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='-0.5' seq='32' rank='0' minImp='0' slots='3' flags='s' line='1942' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1943'>
     <param name='Q{}updated-nodes' slot='0' flags='t' as='node()*'>
      <empty role='select'/>
      <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|updated-nodes'>
       <supplied slot='0'/>
      </treat>
     </param>
     <param line='1944' name='Q{}updated-value' slot='1' flags='t' as='xs:string?'>
      <empty role='select'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|updated-value'>
       <check card='?' diag='8|0|XTTE0590|updated-value'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|updated-value'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <copy line='1950' flags='cin'>
      <sequence role='content'>
       <applyT mode='Q{}recalculate' bSlot='0'>
        <axis role='select' name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       </applyT>
       <choose line='1953'>
        <fn name='exists'>
         <let line='1946' var='Q{http://saxon.sf.net/generated-variable}current1080095163' as='element()' slot='2' eval='16'>
          <dot type='element()'/>
          <treat as='element()' jsTest='return item.nodeType===1;' diag='3|0|XTTE0570|updated-node'>
           <check card='?' diag='3|0|XTTE0570|updated-node'>
            <filter flags=''>
             <varRef name='Q{}updated-nodes' slot='0'/>
             <is op='is'>
              <dot type='node()'/>
              <varRef name='Q{http://saxon.sf.net/generated-variable}current1080095163' slot='2'/>
             </is>
            </filter>
           </check>
          </treat>
         </let>
        </fn>
        <varRef line='1954' name='Q{}updated-value' slot='1'/>
        <true/>
        <applyT line='1957' mode='Q{}recalculate' bSlot='1'>
         <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
        </applyT>
       </choose>
      </sequence>
     </copy>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-0.5' seq='33' rank='0' minImp='0' slots='3' flags='s' line='1970' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1971'>
     <param name='Q{}updated-nodes' slot='0' flags='t' as='node()*'>
      <empty role='select'/>
      <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|updated-nodes'>
       <supplied slot='0'/>
      </treat>
     </param>
     <param line='1972' name='Q{}updated-value' slot='1' flags='t' as='xs:string?'>
      <empty role='select'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|updated-value'>
       <check card='?' diag='8|0|XTTE0590|updated-value'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|updated-value'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line='1977'>
      <fn name='exists'>
       <let line='1974' var='Q{http://saxon.sf.net/generated-variable}current1080095160' as='attribute()' slot='2' eval='16'>
        <dot type='attribute()'/>
        <treat as='attribute()' jsTest='return SaxonJS.U.isAttr(item)' diag='3|0|XTTE0570|updated-node'>
         <check card='?' diag='3|0|XTTE0570|updated-node'>
          <filter flags=''>
           <varRef name='Q{}updated-nodes' slot='0'/>
           <is op='is'>
            <dot type='node()'/>
            <varRef name='Q{http://saxon.sf.net/generated-variable}current1080095160' slot='2'/>
           </is>
          </filter>
         </check>
        </treat>
       </let>
      </fn>
      <compAtt line='1978'>
       <fn role='name' name='name'>
        <dot type='attribute()'/>
       </fn>
       <varRef role='select' name='Q{}updated-value' slot='1'/>
      </compAtt>
      <true/>
      <copyOf line='1981' flags='vc'>
       <dot type='attribute()'/>
      </copyOf>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='80' binds='3 41 1 66 32 16'>
  <template name='Q{}action-setvalue-form-control' flags='os' line='3400' module='saxon-xforms.xsl' slots='8'>
   <sequence role='body' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='3401'>
    <param name='Q{}form-control' slot='0' flags='i' as='node()'>
     <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|form-control'>
      <check card='1' diag='8|0|XTTE0590|form-control'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <let line='3403' var='Q{}refi' as='attribute(Q{}data-ref)?' slot='1' eval='8'>
     <slash simple='1'>
      <varRef name='Q{}form-control' slot='0'/>
      <axis name='attribute' nodeTest='attribute(Q{}data-ref)' jsTest='return item.name===&#39;data-ref&#39;'/>
     </slash>
     <let line='3406' var='Q{}instance-id' as='xs:string' slot='2' eval='16'>
      <ufCall name='Q{http://www.w3.org/2002/xforms}getInstanceId' tailCall='false' bSlot='0' eval='16'>
       <check card='1' diag='0|0||xforms:getInstanceId'>
        <cvUntyped to='xs:string'>
         <data>
          <varRef name='Q{}refi' slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </ufCall>
      <let line='3407' var='Q{}actions' as='item()?' slot='3' eval='8'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
        <check card='1' diag='0|0||ixsl:call'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
        <str val='getAction'/>
        <arrayBlock>
         <fn name='string'>
          <slash simple='1'>
           <varRef name='Q{}form-control' slot='0'/>
           <axis name='attribute' nodeTest='attribute(Q{}data-action)' jsTest='return item.name===&#39;data-action&#39;'/>
          </slash>
         </fn>
        </arrayBlock>
       </ifCall>
       <let line='3412' var='Q{}instanceXML' as='element()' slot='4' eval='16'>
        <check card='1' diag='3|0|XTTE0570|instanceXML'>
         <ufCall name='Q{http://www.w3.org/2002/xforms}instance' tailCall='false' bSlot='1' eval='6'>
          <varRef name='Q{}instance-id' slot='2'/>
         </ufCall>
        </check>
        <let line='3413' var='Q{}updatedNode' as='node()' slot='5' eval='16'>
         <treat line='3414' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|updatedNode'>
          <check card='1' diag='3|0|XTTE0570|updatedNode'>
           <evaluate dxns=''>
            <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='2' eval='16'>
             <check card='1' diag='0|0||xforms:impose'>
              <cvUntyped to='xs:string'>
               <data>
                <varRef name='Q{}refi' slot='1'/>
               </data>
              </cvUntyped>
             </check>
            </ufCall>
            <varRef role='cxt' name='Q{}instanceXML' slot='4'/>
            <varRef role='nsCxt' name='Q{}instanceXML' slot='4'/>
            <str role='sa' val='no'/>
            <map role='options' size='0'/>
            <map role='wp' size='0'/>
           </evaluate>
          </check>
         </treat>
         <let line='3416' var='Q{}new-value' as='xs:string' slot='6' eval='16'>
          <treat line='3417' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|new-value'>
           <check card='1' diag='3|0|XTTE0570|new-value'>
            <cvUntyped to='xs:string' diag='3|0|XTTE0570|new-value'>
             <data>
              <applyT mode='Q{}get-field' bSlot='3'>
               <varRef role='select' name='Q{}form-control' slot='0'/>
              </applyT>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <let line='3419' var='Q{}updatedInstanceXML' as='element()' slot='7' eval='16'>
           <treat line='3420' as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|updatedInstanceXML'>
            <check card='1' diag='3|0|XTTE0570|updatedInstanceXML'>
             <applyT mode='Q{}recalculate' bSlot='4'>
              <varRef role='select' name='Q{}instanceXML' slot='4'/>
              <withParam name='Q{}instance-id' as='xs:string'>
               <varRef line='3421' name='Q{}instance-id' slot='2'/>
              </withParam>
              <withParam name='Q{}updated-nodes' flags='t' as='node()'>
               <varRef line='3422' name='Q{}updatedNode' slot='5'/>
              </withParam>
              <withParam name='Q{}updated-value' flags='t' as='xs:string'>
               <varRef line='3423' name='Q{}new-value' slot='6'/>
              </withParam>
             </applyT>
            </check>
           </treat>
           <sequence line='3429'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
             <check card='1' diag='0|0||ixsl:call'>
              <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
             </check>
             <str val='setInstance'/>
             <arrayBlock>
              <varRef name='Q{}instance-id' slot='2'/>
              <varRef name='Q{}updatedInstanceXML' slot='7'/>
             </arrayBlock>
            </ifCall>
            <ifCall line='3431' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
             <check card='1' diag='0|0||ixsl:call'>
              <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
             </check>
             <str val='setDeferredUpdateFlags'/>
             <array size='1'>
              <literal count='3'>
               <str val='recalculate'/>
               <str val='revalidate'/>
               <str val='refresh'/>
              </literal>
             </array>
            </ifCall>
            <callT line='3439' name='Q{}xforms-value-changed' bSlot='5' flags='t'>
             <withParam name='Q{}when-value-changed' flags='t' as='item()?'>
              <filter line='3440' flags='b'>
               <varRef name='Q{}actions' slot='3'/>
               <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                <data>
                 <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}get' type='item()*'>
                  <treat as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='0|0||map:get'>
                   <dot/>
                  </treat>
                  <str val='@event'/>
                 </ifCall>
                </data>
                <str val='xforms-value-changed'/>
               </gc>
              </filter>
             </withParam>
            </callT>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='87' binds=''>
  <globalVariable name='Q{}global-default-submission-id' type='xs:string' line='89' module='saxon-xforms.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='saxon-forms-default-submission'/>
  </globalVariable>
 </co>
 <co id='71' binds='39 1 1 39 1 39 1 39 39 1 1 1 39 39'>
  <mode name='Q{}get-html' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='0.0' seq='24' rank='0' minImp='0' slots='2' flags='s' line='1591' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}group)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;group&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1592'>
     <param name='Q{}id' slot='0' flags='r' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|id'>
       <check card='1' diag='8|0|XTTE0590|id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1593' name='Q{}nodeset' slot='1' flags='tr' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <elem line='1595' name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
      <sequence line='1596'>
       <att name='id' flags='l'>
        <varRef name='Q{}id' slot='0'/>
       </att>
       <choose line='1597'>
        <varRef name='Q{}nodeset' slot='1'/>
        <att line='1598' name='data-group-ref' flags='l'>
         <varRef name='Q{}nodeset' slot='1'/>
        </att>
       </choose>
       <applyT line='1600' bSlot='0'>
        <axis role='select' name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </applyT>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='16' rank='0' minImp='0' slots='14' flags='s' line='1226' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}input)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;input&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1227'>
     <param name='Q{}id' slot='0' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|id'>
       <check card='1' diag='8|0|XTTE0590|id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1228' name='Q{}nodeset' slot='1' flags='ti' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1229' name='Q{}instance-context' slot='2' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|instance-context'>
       <check card='1' diag='8|0|XTTE0590|instance-context'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|instance-context'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1230' name='Q{}binding' slot='3' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
      <empty role='select'/>
      <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='8|0|XTTE0590|binding'>
       <supplied slot='3'/>
      </treat>
     </param>
     <param line='1231' name='Q{}actions' slot='4' as='map(*)*'>
      <empty role='select'/>
      <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|actions'>
       <supplied slot='4'/>
      </treat>
     </param>
     <let line='1233' var='Q{}instanceField' as='node()?' slot='5' eval='7'>
      <choose line='1234'>
       <varRef name='Q{}nodeset' slot='1'/>
       <let line='1235' var='Q{}instanceXML' as='element()' slot='6' eval='16'>
        <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
         <check card='1' diag='3|0|XTTE0570|instanceXML'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='getInstance'/>
           <arrayBlock>
            <varRef name='Q{}instance-context' slot='2'/>
           </arrayBlock>
          </ifCall>
         </check>
        </treat>
        <treat line='1236' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|instanceField'>
         <check card='?' diag='3|0|XTTE0570|instanceField'>
          <evaluate dxns=''>
           <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='1' eval='6'>
            <varRef name='Q{}nodeset' slot='1'/>
           </ufCall>
           <varRef role='cxt' name='Q{}instanceXML' slot='6'/>
           <varRef role='nsCxt' name='Q{}instanceXML' slot='6'/>
           <str role='sa' val='no'/>
           <map role='options' size='0'/>
           <map role='wp' size='0'/>
          </evaluate>
         </check>
        </treat>
       </let>
      </choose>
      <let line='1247' var='Q{}relevantVar' as='xs:boolean' slot='7' eval='16'>
       <choose line='1249'>
        <and op='and'>
         <and op='and'>
          <fn name='exists'>
           <varRef name='Q{}binding' slot='3'/>
          </fn>
          <fn name='exists'>
           <slash simple='2'>
            <varRef name='Q{}binding' slot='3'/>
            <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
           </slash>
          </fn>
         </and>
         <fn name='exists'>
          <varRef name='Q{}instanceField' slot='5'/>
         </fn>
        </and>
        <treat line='1251' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='3|0|XTTE0570|relevantVar'>
         <check card='1' diag='3|0|XTTE0570|relevantVar'>
          <cvUntyped to='xs:boolean' diag='3|0|XTTE0570|relevantVar'>
           <data>
            <evaluate dxns=''>
             <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='2' eval='16'>
              <check card='1' diag='0|0||xforms:impose'>
               <cvUntyped to='xs:string'>
                <data>
                 <conditionalSort>
                  <fn name='exists'>
                   <tail start='2'>
                    <varRef name='Q{}binding' slot='3'/>
                   </tail>
                  </fn>
                  <docOrder intra='0'>
                   <slash simple='2'>
                    <varRef name='Q{}binding' slot='3'/>
                    <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                   </slash>
                  </docOrder>
                 </conditionalSort>
                </data>
               </cvUntyped>
              </check>
             </ufCall>
             <varRef role='cxt' name='Q{}instanceField' slot='5'/>
             <choose role='nsCxt' line='1243'>
              <fn name='exists'>
               <varRef name='Q{}instanceField' slot='5'/>
              </fn>
              <check card='1' diag='3|0|XTTE0570|namespace-context-item'>
               <varRef name='Q{}instanceField' slot='5'/>
              </check>
              <true/>
              <let var='Q{}this' as='element()' slot='8' eval='16'>
               <check card='1' diag='0|0||xforms:addNamespaceDeclarations'>
                <slash simple='1'>
                 <root/>
                 <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                </slash>
               </check>
               <compElem line='2153'>
                <fn role='name' name='name'>
                 <varRef name='Q{}this' slot='8'/>
                </fn>
                <sequence role='content' line='2154'>
                 <namespace flags='l'>
                  <str role='name' val='xforms'/>
                  <str role='select' val='http://www.w3.org/2002/xforms'/>
                 </namespace>
                 <forEach line='2155'>
                  <filter flags='b'>
                   <filter flags='b'>
                    <slash simple='1'>
                     <varRef name='Q{}this' slot='8'/>
                     <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                    </slash>
                    <fn name='boolean'>
                     <fn name='namespace-uri'>
                      <dot type='element()'/>
                     </fn>
                    </fn>
                   </filter>
                   <fn name='not'>
                    <gc op='=' card='N:1' comp='CCC'>
                     <sequence>
                      <slash>
                       <fn name='reverse'>
                        <axis name='ancestor' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                       </fn>
                       <fn name='namespace-uri'>
                        <dot type='element()'/>
                       </fn>
                      </slash>
                      <slash>
                       <fn name='reverse'>
                        <axis name='preceding' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                       </fn>
                       <fn name='namespace-uri'>
                        <dot type='element()'/>
                       </fn>
                      </slash>
                     </sequence>
                     <fn name='namespace-uri'>
                      <dot type='element()'/>
                     </fn>
                    </gc>
                   </fn>
                  </filter>
                  <namespace line='2158' flags='l'>
                   <fn role='name' line='2157' name='substring-before'>
                    <fn name='name'>
                     <dot type='element()'/>
                    </fn>
                    <str val=':'/>
                   </fn>
                   <convert role='select' from='xs:anyURI' to='xs:string'>
                    <fn line='2156' name='namespace-uri'>
                     <dot type='element()'/>
                    </fn>
                   </convert>
                  </namespace>
                 </forEach>
                 <copyOf line='2160' flags='vc'>
                  <sequence>
                   <slash simple='1'>
                    <varRef name='Q{}this' slot='8'/>
                    <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
                   </slash>
                   <slash simple='1'>
                    <varRef name='Q{}this' slot='8'/>
                    <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
                   </slash>
                  </sequence>
                 </copyOf>
                </sequence>
               </compElem>
              </let>
             </choose>
             <str role='sa' val='no'/>
             <map role='options' size='0'/>
             <map role='wp' size='0'/>
            </evaluate>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <true/>
        <true/>
       </choose>
       <elem line='1259' name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
        <sequence>
         <att name='class' flags='l'>
          <str val='xforms-input'/>
         </att>
         <att line='1260' name='style' flags='l'>
          <choose>
           <varRef name='Q{}relevantVar' slot='7'/>
           <str val='display:block'/>
           <true/>
           <str val='display:none'/>
          </choose>
         </att>
         <applyT line='1262' bSlot='3'>
          <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
         </applyT>
         <let line='1264' var='Q{}hints' as='text()*' slot='9' eval='4'>
          <slash simple='2'>
           <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}hint)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;hint&#39;;'/>
           <axis name='child' nodeTest='text()' jsTest='return item.nodeType===3;'/>
          </slash>
          <elem line='1266' name='input' nsuri='' flags='l' namespaces='xd rdf xhtml js in fn map array ev'>
           <sequence line='1267'>
            <let var='Q{}element' as='element(Q{http://www.w3.org/2002/xforms}input)' slot='10' eval='16'>
             <dot type='element(Q{http://www.w3.org/2002/xforms}input)'/>
             <let line='2215' var='Q{}class' as='xs:string?' slot='11' eval='7'>
              <choose line='2216'>
               <fn name='exists'>
                <slash simple='1'>
                 <varRef name='Q{}element' slot='10'/>
                 <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                </slash>
               </fn>
               <cvUntyped line='2217' to='xs:string' diag='3|0|XTTE0570|class'>
                <cast as='xs:untypedAtomic' emptiable='0'>
                 <fn name='string'>
                  <convert from='xs:untypedAtomic' to='xs:string'>
                   <data>
                    <slash simple='1'>
                     <varRef name='Q{}element' slot='10'/>
                     <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                    </slash>
                   </data>
                  </convert>
                 </fn>
                </cast>
               </cvUntyped>
              </choose>
              <let line='2220' var='Q{}class-mod' as='xs:string?' slot='12' eval='7'>
               <choose line='2222'>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}element' slot='10'/>
                  <axis name='attribute' nodeTest='attribute(Q{}incremental)' jsTest='return item.name===&#39;incremental&#39;'/>
                 </slash>
                </fn>
                <cvUntyped line='2223' to='xs:string' diag='3|0|XTTE0570|class-mod'>
                 <cast as='xs:untypedAtomic' emptiable='0'>
                  <fn name='string-join'>
                   <sequence>
                    <varRef name='Q{}class' slot='11'/>
                    <str val='incremental'/>
                   </sequence>
                   <str val=' '/>
                  </fn>
                 </cast>
                </cvUntyped>
                <true/>
                <varRef line='2226' name='Q{}class' slot='11'/>
               </choose>
               <choose line='2230'>
                <fn name='exists'>
                 <varRef name='Q{}class-mod' slot='12'/>
                </fn>
                <treat line='2231' as='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;' diag='5|0|XTTE0780|xforms:getClass#1'>
                 <att name='class' flags='l'>
                  <varRef name='Q{}class-mod' slot='12'/>
                 </att>
                </treat>
               </choose>
              </let>
             </let>
            </let>
            <att line='1268' name='id' flags='l'>
             <varRef name='Q{}id' slot='0'/>
            </att>
            <att line='1270' name='instance-context' flags='l'>
             <varRef name='Q{}instance-context' slot='2'/>
            </att>
            <att line='1271' name='data-ref' flags='l'>
             <varRef name='Q{}nodeset' slot='1'/>
            </att>
            <choose line='1273'>
             <and op='and'>
              <fn name='exists'>
               <varRef name='Q{}binding' slot='3'/>
              </fn>
              <fn name='exists'>
               <slash simple='2'>
                <varRef name='Q{}binding' slot='3'/>
                <axis name='attribute' nodeTest='attribute(Q{}constraint)' jsTest='return item.name===&#39;constraint&#39;'/>
               </slash>
              </fn>
             </and>
             <att line='1274' name='data-constraint' flags='l'>
              <fn name='string-join'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <data>
                 <slash simple='2'>
                  <varRef name='Q{}binding' slot='3'/>
                  <axis name='attribute' nodeTest='attribute(Q{}constraint)' jsTest='return item.name===&#39;constraint&#39;'/>
                 </slash>
                </data>
               </convert>
               <str val=' '/>
              </fn>
             </att>
            </choose>
            <choose line='1276'>
             <and op='and'>
              <fn name='exists'>
               <varRef name='Q{}binding' slot='3'/>
              </fn>
              <fn name='exists'>
               <slash simple='2'>
                <varRef name='Q{}binding' slot='3'/>
                <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
               </slash>
              </fn>
             </and>
             <att line='1277' name='data-relevant' flags='l'>
              <fn name='string-join'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <data>
                 <slash simple='2'>
                  <varRef name='Q{}binding' slot='3'/>
                  <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                 </slash>
                </data>
               </convert>
               <str val=' '/>
              </fn>
             </att>
            </choose>
            <choose line='1279'>
             <and op='and'>
              <fn name='exists'>
               <varRef name='Q{}binding' slot='3'/>
              </fn>
              <fn name='exists'>
               <slash simple='2'>
                <varRef name='Q{}binding' slot='3'/>
                <axis name='attribute' nodeTest='attribute(Q{}required)' jsTest='return item.name===&#39;required&#39;'/>
               </slash>
              </fn>
             </and>
             <att line='1280' name='data-required' flags='l'>
              <fn name='string-join'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <data>
                 <slash simple='2'>
                  <varRef name='Q{}binding' slot='3'/>
                  <axis name='attribute' nodeTest='attribute(Q{}required)' jsTest='return item.name===&#39;required&#39;'/>
                 </slash>
                </data>
               </convert>
               <str val=' '/>
              </fn>
             </att>
            </choose>
            <choose line='1283'>
             <fn name='exists'>
              <varRef name='Q{}actions' slot='4'/>
             </fn>
             <att line='1284' name='data-action' flags='l'>
              <varRef name='Q{}id' slot='0'/>
             </att>
            </choose>
            <choose line='1287'>
             <fn name='exists'>
              <varRef name='Q{}hints' slot='9'/>
             </fn>
             <att line='1288' name='title' flags='l'>
              <fn name='string-join'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <data>
                 <mergeAdj>
                  <varRef name='Q{}hints' slot='9'/>
                 </mergeAdj>
                </data>
               </convert>
               <str val=' '/>
              </fn>
             </att>
            </choose>
            <choose line='1291'>
             <fn name='exists'>
              <axis name='attribute' nodeTest='attribute(Q{}size)' jsTest='return item.name===&#39;size&#39;'/>
             </fn>
             <att line='1292' name='size' flags='l'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <attVal name='Q{}size' chk='0'/>
              </convert>
             </att>
            </choose>
            <let line='1295' var='Q{}input-value' as='xs:string' slot='13' eval='16'>
             <choose line='1297'>
              <fn name='exists'>
               <varRef name='Q{}instanceField' slot='5'/>
              </fn>
              <cvUntyped line='1298' to='xs:string' diag='3|0|XTTE0570|input-value'>
               <cast as='xs:untypedAtomic' emptiable='0'>
                <fn name='string'>
                 <convert from='xs:anyAtomicType' to='xs:string'>
                  <data>
                   <varRef name='Q{}instanceField' slot='5'/>
                  </data>
                 </convert>
                </fn>
               </cast>
              </cvUntyped>
              <true/>
              <str val=''/>
             </choose>
             <choose line='1312'>
              <choose>
               <fn name='exists'>
                <varRef name='Q{}binding' slot='3'/>
               </fn>
               <vc op='eq' comp='EQC'>
                <cast as='xs:QName' emptiable='1'>
                 <atomSing card='?' diag='2|0||cast as'>
                  <conditionalSort>
                   <fn name='exists'>
                    <tail start='2'>
                     <varRef name='Q{}binding' slot='3'/>
                    </tail>
                   </fn>
                   <docOrder intra='0'>
                    <slash simple='2'>
                     <varRef name='Q{}binding' slot='3'/>
                     <axis name='attribute' nodeTest='attribute(Q{}type)' jsTest='return item.name===&#39;type&#39;'/>
                    </slash>
                   </docOrder>
                  </conditionalSort>
                 </atomSing>
                </cast>
                <qName pre='xs' uri='http://www.w3.org/2001/XMLSchema' loc='date'/>
               </vc>
               <true/>
               <false/>
              </choose>
              <sequence line='1313'>
               <att name='data-type' flags='l'>
                <str val='date'/>
               </att>
               <att line='1315' name='type' flags='l'>
                <str val='date'/>
               </att>
               <att line='1317' name='value' flags='l'>
                <varRef name='Q{}input-value' slot='13'/>
               </att>
              </sequence>
              <choose line='1324'>
               <fn name='exists'>
                <varRef name='Q{}binding' slot='3'/>
               </fn>
               <vc op='eq' comp='EQC'>
                <cast as='xs:QName' emptiable='1'>
                 <atomSing card='?' diag='2|0||cast as'>
                  <conditionalSort>
                   <fn name='exists'>
                    <tail start='2'>
                     <varRef name='Q{}binding' slot='3'/>
                    </tail>
                   </fn>
                   <docOrder intra='0'>
                    <slash simple='2'>
                     <varRef name='Q{}binding' slot='3'/>
                     <axis name='attribute' nodeTest='attribute(Q{}type)' jsTest='return item.name===&#39;type&#39;'/>
                    </slash>
                   </docOrder>
                  </conditionalSort>
                 </atomSing>
                </cast>
                <qName pre='xs' uri='http://www.w3.org/2001/XMLSchema' loc='time'/>
               </vc>
               <true/>
               <false/>
              </choose>
              <sequence line='1325'>
               <att name='data-type' flags='l'>
                <str val='time'/>
               </att>
               <att line='1327' name='type' flags='l'>
                <str val='time'/>
               </att>
               <att line='1330' name='value' flags='l'>
                <varRef name='Q{}input-value' slot='13'/>
               </att>
              </sequence>
              <choose line='1337'>
               <fn name='exists'>
                <varRef name='Q{}binding' slot='3'/>
               </fn>
               <vc op='eq' comp='EQC'>
                <cast as='xs:QName' emptiable='1'>
                 <atomSing card='?' diag='2|0||cast as'>
                  <conditionalSort>
                   <fn name='exists'>
                    <tail start='2'>
                     <varRef name='Q{}binding' slot='3'/>
                    </tail>
                   </fn>
                   <docOrder intra='0'>
                    <slash simple='2'>
                     <varRef name='Q{}binding' slot='3'/>
                     <axis name='attribute' nodeTest='attribute(Q{}type)' jsTest='return item.name===&#39;type&#39;'/>
                    </slash>
                   </docOrder>
                  </conditionalSort>
                 </atomSing>
                </cast>
                <qName pre='xs' uri='http://www.w3.org/2001/XMLSchema' loc='boolean'/>
               </vc>
               <true/>
               <false/>
              </choose>
              <sequence line='1338'>
               <att name='data-type' flags='l'>
                <str val='checkbox'/>
               </att>
               <att line='1340' name='type' flags='l'>
                <str val='checkbox'/>
               </att>
               <choose line='1343'>
                <fn name='exists'>
                 <varRef name='Q{}instanceField' slot='5'/>
                </fn>
                <choose line='1344'>
                 <and op='and'>
                  <varRef name='Q{}input-value' slot='13'/>
                  <cast as='xs:boolean' emptiable='0'>
                   <varRef name='Q{}input-value' slot='13'/>
                  </cast>
                 </and>
                 <att line='1345' name='checked' flags='l'>
                  <varRef name='Q{}input-value' slot='13'/>
                 </att>
                </choose>
               </choose>
              </sequence>
              <true/>
              <sequence line='1351'>
               <choose>
                <varRef name='Q{}relevantVar' slot='7'/>
                <att line='1352' name='type' flags='l'>
                 <str val='text'/>
                </att>
               </choose>
               <att line='1354' name='value' flags='l'>
                <varRef name='Q{}input-value' slot='13'/>
               </att>
              </sequence>
             </choose>
            </let>
           </sequence>
          </elem>
         </let>
        </sequence>
       </elem>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='17' rank='0' minImp='0' slots='11' flags='s' line='1374' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}textarea)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;textarea&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1375'>
     <param name='Q{}id' slot='0' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|id'>
       <check card='1' diag='8|0|XTTE0590|id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1376' name='Q{}nodeset' slot='1' flags='ti' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1377' name='Q{}instance-context' slot='2' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|instance-context'>
       <check card='1' diag='8|0|XTTE0590|instance-context'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|instance-context'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1378' name='Q{}binding' slot='3' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
      <empty role='select'/>
      <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='8|0|XTTE0590|binding'>
       <supplied slot='3'/>
      </treat>
     </param>
     <param line='1379' name='Q{}actions' slot='4' as='map(*)*'>
      <empty role='select'/>
      <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|actions'>
       <supplied slot='4'/>
      </treat>
     </param>
     <let line='1381' var='Q{}instanceField' as='node()?' slot='5' eval='7'>
      <choose line='1382'>
       <varRef name='Q{}nodeset' slot='1'/>
       <let line='1383' var='Q{}instanceXML' as='element()' slot='6' eval='16'>
        <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
         <check card='1' diag='3|0|XTTE0570|instanceXML'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='getInstance'/>
           <arrayBlock>
            <varRef name='Q{}instance-context' slot='2'/>
           </arrayBlock>
          </ifCall>
         </check>
        </treat>
        <treat line='1384' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|instanceField'>
         <check card='?' diag='3|0|XTTE0570|instanceField'>
          <evaluate dxns=''>
           <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='4' eval='6'>
            <varRef name='Q{}nodeset' slot='1'/>
           </ufCall>
           <varRef role='cxt' name='Q{}instanceXML' slot='6'/>
           <varRef role='nsCxt' name='Q{}instanceXML' slot='6'/>
           <str role='sa' val='no'/>
           <map role='options' size='0'/>
           <map role='wp' size='0'/>
          </evaluate>
         </check>
        </treat>
       </let>
      </choose>
      <let line='1388' var='Q{}hints' as='text()*' slot='7' eval='4'>
       <slash simple='2'>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}hint)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;hint&#39;;'/>
        <axis name='child' nodeTest='text()' jsTest='return item.nodeType===3;'/>
       </slash>
       <elem line='1390' name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
        <sequence>
         <att name='class' flags='l'>
          <str val='xforms-textarea'/>
         </att>
         <applyT line='1391' bSlot='5'>
          <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
         </applyT>
         <elem line='1392' name='textarea' nsuri='' flags='l' namespaces='xd rdf xhtml js in fn map array ev'>
          <sequence line='1393'>
           <let var='Q{}element' as='element(Q{http://www.w3.org/2002/xforms}textarea)' slot='8' eval='16'>
            <dot type='element(Q{http://www.w3.org/2002/xforms}textarea)'/>
            <let line='2215' var='Q{}class' as='xs:string?' slot='9' eval='7'>
             <choose line='2216'>
              <fn name='exists'>
               <slash simple='1'>
                <varRef name='Q{}element' slot='8'/>
                <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
               </slash>
              </fn>
              <cvUntyped line='2217' to='xs:string' diag='3|0|XTTE0570|class'>
               <cast as='xs:untypedAtomic' emptiable='0'>
                <fn name='string'>
                 <convert from='xs:untypedAtomic' to='xs:string'>
                  <data>
                   <slash simple='1'>
                    <varRef name='Q{}element' slot='8'/>
                    <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                   </slash>
                  </data>
                 </convert>
                </fn>
               </cast>
              </cvUntyped>
             </choose>
             <let line='2220' var='Q{}class-mod' as='xs:string?' slot='10' eval='7'>
              <choose line='2222'>
               <fn name='exists'>
                <slash simple='1'>
                 <varRef name='Q{}element' slot='8'/>
                 <axis name='attribute' nodeTest='attribute(Q{}incremental)' jsTest='return item.name===&#39;incremental&#39;'/>
                </slash>
               </fn>
               <cvUntyped line='2223' to='xs:string' diag='3|0|XTTE0570|class-mod'>
                <cast as='xs:untypedAtomic' emptiable='0'>
                 <fn name='string-join'>
                  <sequence>
                   <varRef name='Q{}class' slot='9'/>
                   <str val='incremental'/>
                  </sequence>
                  <str val=' '/>
                 </fn>
                </cast>
               </cvUntyped>
               <true/>
               <varRef line='2226' name='Q{}class' slot='9'/>
              </choose>
              <choose line='2230'>
               <fn name='exists'>
                <varRef name='Q{}class-mod' slot='10'/>
               </fn>
               <treat line='2231' as='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;' diag='5|0|XTTE0780|xforms:getClass#1'>
                <att name='class' flags='l'>
                 <varRef name='Q{}class-mod' slot='10'/>
                </att>
               </treat>
              </choose>
             </let>
            </let>
           </let>
           <att line='1394' name='id' flags='l'>
            <varRef name='Q{}id' slot='0'/>
           </att>
           <att line='1396' name='instance-context' flags='l'>
            <varRef name='Q{}instance-context' slot='2'/>
           </att>
           <att line='1397' name='data-ref' flags='l'>
            <varRef name='Q{}nodeset' slot='1'/>
           </att>
           <choose line='1399'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}constraint)' jsTest='return item.name===&#39;constraint&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1400' name='data-constraint' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}constraint)' jsTest='return item.name===&#39;constraint&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1402'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1403' name='data-relevant' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1405'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}required)' jsTest='return item.name===&#39;required&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1406' name='data-required' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}required)' jsTest='return item.name===&#39;required&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1409'>
            <fn name='exists'>
             <varRef name='Q{}actions' slot='4'/>
            </fn>
            <att line='1410' name='data-action' flags='l'>
             <varRef name='Q{}id' slot='0'/>
            </att>
           </choose>
           <choose line='1413'>
            <fn name='exists'>
             <varRef name='Q{}hints' slot='7'/>
            </fn>
            <att line='1414' name='title' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}hints' slot='7'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1417'>
            <fn name='exists'>
             <axis name='attribute' nodeTest='attribute(Q{}size)' jsTest='return item.name===&#39;size&#39;'/>
            </fn>
            <att line='1418' name='size' flags='l'>
             <convert from='xs:untypedAtomic' to='xs:string'>
              <attVal name='Q{}size' chk='0'/>
             </convert>
            </att>
           </choose>
           <choose line='1422'>
            <fn name='exists'>
             <varRef name='Q{}instanceField' slot='5'/>
            </fn>
            <valueOf line='1423' flags='l'>
             <convert from='xs:anyAtomicType' to='xs:string'>
              <data>
               <varRef name='Q{}instanceField' slot='5'/>
              </data>
             </convert>
            </valueOf>
            <true/>
            <sequence line='1425'>
             <valueOf flags='Sl'>
              <str val=''/>
             </valueOf>
             <valueOf flags='l'>
              <str val='  '/>
             </valueOf>
            </sequence>
           </choose>
          </sequence>
         </elem>
        </sequence>
       </elem>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='19' part='1' rank='0' minImp='0' slots='11' flags='s' line='1452' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}select)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;select&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1453'>
     <param name='Q{}id' slot='0' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|id'>
       <check card='1' diag='8|0|XTTE0590|id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1454' name='Q{}nodeset' slot='1' flags='ti' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1455' name='Q{}instance-context' slot='2' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|instance-context'>
       <check card='1' diag='8|0|XTTE0590|instance-context'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|instance-context'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1456' name='Q{}binding' slot='3' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
      <empty role='select'/>
      <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='8|0|XTTE0590|binding'>
       <supplied slot='3'/>
      </treat>
     </param>
     <param line='1457' name='Q{}actions' slot='4' as='map(*)*'>
      <empty role='select'/>
      <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|actions'>
       <supplied slot='4'/>
      </treat>
     </param>
     <let line='1459' var='Q{}instanceField' as='node()?' slot='5' eval='7'>
      <choose line='1460'>
       <varRef name='Q{}nodeset' slot='1'/>
       <let line='1461' var='Q{}instanceXML' as='element()' slot='6' eval='16'>
        <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
         <check card='1' diag='3|0|XTTE0570|instanceXML'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='getInstance'/>
           <arrayBlock>
            <varRef name='Q{}instance-context' slot='2'/>
           </arrayBlock>
          </ifCall>
         </check>
        </treat>
        <treat line='1462' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|instanceField'>
         <check card='?' diag='3|0|XTTE0570|instanceField'>
          <evaluate dxns=''>
           <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='6' eval='6'>
            <varRef name='Q{}nodeset' slot='1'/>
           </ufCall>
           <varRef role='cxt' name='Q{}instanceXML' slot='6'/>
           <varRef role='nsCxt' name='Q{}instanceXML' slot='6'/>
           <str role='sa' val='no'/>
           <map role='options' size='0'/>
           <map role='wp' size='0'/>
          </evaluate>
         </check>
        </treat>
       </let>
      </choose>
      <elem line='1477' name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
       <sequence>
        <att name='class' flags='l'>
         <str val='xforms-select'/>
        </att>
        <applyT line='1478' bSlot='7'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
        </applyT>
        <let line='1479' var='Q{}hints' as='text()*' slot='7' eval='4'>
         <slash simple='2'>
          <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}hint)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;hint&#39;;'/>
          <axis name='child' nodeTest='text()' jsTest='return item.nodeType===3;'/>
         </slash>
         <elem line='1481' name='select' nsuri='' flags='l' namespaces='xd rdf xhtml js in fn map array ev'>
          <sequence line='1482'>
           <let var='Q{}element' as='element()' slot='8' eval='16'>
            <dot type='element()'/>
            <let line='2215' var='Q{}class' as='xs:string?' slot='9' eval='7'>
             <choose line='2216'>
              <fn name='exists'>
               <slash simple='1'>
                <varRef name='Q{}element' slot='8'/>
                <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
               </slash>
              </fn>
              <cvUntyped line='2217' to='xs:string' diag='3|0|XTTE0570|class'>
               <cast as='xs:untypedAtomic' emptiable='0'>
                <fn name='string'>
                 <convert from='xs:untypedAtomic' to='xs:string'>
                  <data>
                   <slash simple='1'>
                    <varRef name='Q{}element' slot='8'/>
                    <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                   </slash>
                  </data>
                 </convert>
                </fn>
               </cast>
              </cvUntyped>
             </choose>
             <let line='2220' var='Q{}class-mod' as='xs:string?' slot='10' eval='7'>
              <choose line='2222'>
               <fn name='exists'>
                <slash simple='1'>
                 <varRef name='Q{}element' slot='8'/>
                 <axis name='attribute' nodeTest='attribute(Q{}incremental)' jsTest='return item.name===&#39;incremental&#39;'/>
                </slash>
               </fn>
               <cvUntyped line='2223' to='xs:string' diag='3|0|XTTE0570|class-mod'>
                <cast as='xs:untypedAtomic' emptiable='0'>
                 <fn name='string-join'>
                  <sequence>
                   <varRef name='Q{}class' slot='9'/>
                   <str val='incremental'/>
                  </sequence>
                  <str val=' '/>
                 </fn>
                </cast>
               </cvUntyped>
               <true/>
               <varRef line='2226' name='Q{}class' slot='9'/>
              </choose>
              <choose line='2230'>
               <fn name='exists'>
                <varRef name='Q{}class-mod' slot='10'/>
               </fn>
               <treat line='2231' as='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;' diag='5|0|XTTE0780|xforms:getClass#1'>
                <att name='class' flags='l'>
                 <varRef name='Q{}class-mod' slot='10'/>
                </att>
               </treat>
              </choose>
             </let>
            </let>
           </let>
           <att line='1484' name='instance-context' flags='l'>
            <varRef name='Q{}instance-context' slot='2'/>
           </att>
           <att line='1485' name='data-ref' flags='l'>
            <varRef name='Q{}nodeset' slot='1'/>
           </att>
           <choose line='1487'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}constraint)' jsTest='return item.name===&#39;constraint&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1488' name='data-constraint' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}constraint)' jsTest='return item.name===&#39;constraint&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1490'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1491' name='data-relevant' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1493'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}required)' jsTest='return item.name===&#39;required&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1494' name='data-required' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}required)' jsTest='return item.name===&#39;required&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1497'>
            <fn name='exists'>
             <varRef name='Q{}actions' slot='4'/>
            </fn>
            <att line='1498' name='data-action' flags='l'>
             <varRef name='Q{}id' slot='0'/>
            </att>
           </choose>
           <choose line='1501'>
            <fn name='exists'>
             <varRef name='Q{}hints' slot='7'/>
            </fn>
            <att line='1502' name='title' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}hints' slot='7'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1506'>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <fn name='local-name'>
              <dot type='element()'/>
             </fn>
             <str val='select'/>
            </vc>
            <sequence line='1507'>
             <att name='multiple' flags='l'>
              <str val='true'/>
             </att>
             <att line='1508' name='size' flags='l'>
              <convert line='1509' from='xs:integer' to='xs:string'>
               <fn name='count'>
                <axis name='descendant' nodeTest='element(Q{http://www.w3.org/2002/xforms}item)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;item&#39;;'/>
               </fn>
              </convert>
             </att>
            </sequence>
           </choose>
           <applyT line='1513' bSlot='8'>
            <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}item)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;item&#39;;'/>
            <withParam name='Q{}selectedValue' as='xs:string'>
             <choose line='1468'>
              <fn name='exists'>
               <varRef name='Q{}instanceField' slot='5'/>
              </fn>
              <cvUntyped line='1469' to='xs:string' diag='3|0|XTTE0570|selectedValue'>
               <cast as='xs:untypedAtomic' emptiable='0'>
                <fn name='string'>
                 <convert from='xs:anyAtomicType' to='xs:string'>
                  <data>
                   <varRef name='Q{}instanceField' slot='5'/>
                  </data>
                 </convert>
                </fn>
               </cast>
              </cvUntyped>
              <true/>
              <str val=''/>
             </choose>
            </withParam>
           </applyT>
          </sequence>
         </elem>
        </let>
       </sequence>
      </elem>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='15' rank='0' minImp='0' slots='13' flags='s' line='1112' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}output)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;output&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1113'>
     <param name='Q{}id' slot='0' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|id'>
       <check card='1' diag='8|0|XTTE0590|id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1114' name='Q{}nodeset' slot='1' flags='ti' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1115' name='Q{}instance-context' slot='2' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|instance-context'>
       <check card='1' diag='8|0|XTTE0590|instance-context'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|instance-context'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1116' name='Q{}binding' slot='3' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
      <empty role='select'/>
      <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='8|0|XTTE0590|binding'>
       <supplied slot='3'/>
      </treat>
     </param>
     <let line='1118' var='Q{}instanceField' as='node()?' slot='4' eval='7'>
      <choose line='1120'>
       <varRef name='Q{}nodeset' slot='1'/>
       <let line='1121' var='Q{}instanceXML' as='element()' slot='5' eval='16'>
        <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
         <check card='1' diag='3|0|XTTE0570|instanceXML'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='getInstance'/>
           <arrayBlock>
            <varRef name='Q{}instance-context' slot='2'/>
           </arrayBlock>
          </ifCall>
         </check>
        </treat>
        <treat line='1122' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|instanceField'>
         <check card='?' diag='3|0|XTTE0570|instanceField'>
          <evaluate dxns=''>
           <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='9' eval='6'>
            <varRef name='Q{}nodeset' slot='1'/>
           </ufCall>
           <varRef role='cxt' name='Q{}instanceXML' slot='5'/>
           <varRef role='nsCxt' name='Q{}instanceXML' slot='5'/>
           <str role='sa' val='no'/>
           <map role='options' size='0'/>
           <map role='wp' size='0'/>
          </evaluate>
         </check>
        </treat>
       </let>
       <fn line='1124' name='exists'>
        <varRef name='Q{}binding' slot='3'/>
       </fn>
       <treat line='1125' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|instanceField'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
         <check card='1' diag='0|0||ixsl:call'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
         </check>
         <str val='getInstance'/>
         <arrayBlock>
          <cast as='xs:string' emptiable='1'>
           <atomSing card='?' diag='2|0||cast as'>
            <conditionalSort>
             <fn name='exists'>
              <tail start='2'>
               <varRef name='Q{}binding' slot='3'/>
              </tail>
             </fn>
             <docOrder intra='0'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}instance-context)' jsTest='return item.name===&#39;instance-context&#39;'/>
              </slash>
             </docOrder>
            </conditionalSort>
           </atomSing>
          </cast>
         </arrayBlock>
        </ifCall>
       </treat>
      </choose>
      <let line='1139' var='Q{}namespace-context-item' as='node()' slot='6' eval='16'>
       <choose>
        <fn name='exists'>
         <varRef name='Q{}instanceField' slot='4'/>
        </fn>
        <choose>
         <fn name='exists'>
          <filter flags='b'>
           <varRef name='Q{}instanceField' slot='4'/>
           <fn name='exists'>
            <axis name='self' nodeTest='text()' jsTest='return item.nodeType===3;'/>
           </fn>
          </filter>
         </fn>
         <check card='1' diag='3|0|XTTE0570|namespace-context-item'>
          <slash simple='1'>
           <varRef name='Q{}instanceField' slot='4'/>
           <axis name='parent' nodeTest='element()' jsTest='return item.nodeType===1;'/>
          </slash>
         </check>
         <true/>
         <check card='1' diag='3|0|XTTE0570|namespace-context-item'>
          <varRef name='Q{}instanceField' slot='4'/>
         </check>
        </choose>
        <true/>
        <let var='Q{}this' as='element()' slot='7' eval='16'>
         <check card='1' diag='0|0||xforms:addNamespaceDeclarations'>
          <slash simple='1'>
           <root/>
           <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
          </slash>
         </check>
         <compElem line='2153'>
          <fn role='name' name='name'>
           <varRef name='Q{}this' slot='7'/>
          </fn>
          <sequence role='content' line='2154'>
           <namespace flags='l'>
            <str role='name' val='xforms'/>
            <str role='select' val='http://www.w3.org/2002/xforms'/>
           </namespace>
           <forEach line='2155'>
            <filter flags='b'>
             <filter flags='b'>
              <slash simple='1'>
               <varRef name='Q{}this' slot='7'/>
               <axis name='descendant' nodeTest='element()' jsTest='return item.nodeType===1;'/>
              </slash>
              <fn name='boolean'>
               <fn name='namespace-uri'>
                <dot type='element()'/>
               </fn>
              </fn>
             </filter>
             <fn name='not'>
              <gc op='=' card='N:1' comp='CCC'>
               <sequence>
                <slash>
                 <fn name='reverse'>
                  <axis name='ancestor' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                 </fn>
                 <fn name='namespace-uri'>
                  <dot type='element()'/>
                 </fn>
                </slash>
                <slash>
                 <fn name='reverse'>
                  <axis name='preceding' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                 </fn>
                 <fn name='namespace-uri'>
                  <dot type='element()'/>
                 </fn>
                </slash>
               </sequence>
               <fn name='namespace-uri'>
                <dot type='element()'/>
               </fn>
              </gc>
             </fn>
            </filter>
            <namespace line='2158' flags='l'>
             <fn role='name' line='2157' name='substring-before'>
              <fn name='name'>
               <dot type='element()'/>
              </fn>
              <str val=':'/>
             </fn>
             <convert role='select' from='xs:anyURI' to='xs:string'>
              <fn line='2156' name='namespace-uri'>
               <dot type='element()'/>
              </fn>
             </convert>
            </namespace>
           </forEach>
           <copyOf line='2160' flags='vc'>
            <sequence>
             <slash simple='1'>
              <varRef name='Q{}this' slot='7'/>
              <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
             </slash>
             <slash simple='1'>
              <varRef name='Q{}this' slot='7'/>
              <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
             </slash>
            </sequence>
           </copyOf>
          </sequence>
         </compElem>
        </let>
       </choose>
       <let line='1141' var='Q{}valueExecuted' as='xs:string' slot='8' eval='16'>
        <choose line='1143'>
         <fn name='exists'>
          <axis name='attribute' nodeTest='attribute(Q{}value)' jsTest='return item.name===&#39;value&#39;'/>
         </fn>
         <evaluate line='1144' as='xs:string' dxns=''>
          <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='10' eval='16'>
           <check card='1' diag='0|0||xforms:impose'>
            <cvUntyped to='xs:string'>
             <attVal name='Q{}value' chk='0'/>
            </cvUntyped>
           </check>
          </ufCall>
          <varRef role='cxt' name='Q{}instanceField' slot='4'/>
          <varRef role='nsCxt' name='Q{}namespace-context-item' slot='6'/>
          <str role='sa' val='no'/>
          <map role='options' size='0'/>
          <map role='wp' size='0'/>
         </evaluate>
         <true/>
         <cvUntyped line='1147' to='xs:string' diag='3|0|XTTE0570|valueExecuted'>
          <cast as='xs:untypedAtomic' emptiable='0'>
           <fn name='string'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <varRef name='Q{}instanceField' slot='4'/>
             </data>
            </convert>
           </fn>
          </cast>
         </cvUntyped>
        </choose>
        <let line='1153' var='Q{}relevantVar' as='xs:boolean' slot='9' eval='16'>
         <choose line='1155'>
          <and op='and'>
           <fn name='exists'>
            <varRef name='Q{}binding' slot='3'/>
           </fn>
           <fn name='exists'>
            <slash simple='2'>
             <varRef name='Q{}binding' slot='3'/>
             <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
            </slash>
           </fn>
          </and>
          <treat line='1156' as='xs:boolean' jsTest='return SaxonJS.U.Atomic.boolean.matches(item);' diag='3|0|XTTE0570|relevantVar'>
           <check card='1' diag='3|0|XTTE0570|relevantVar'>
            <cvUntyped to='xs:boolean' diag='3|0|XTTE0570|relevantVar'>
             <data>
              <evaluate dxns=''>
               <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='11' eval='16'>
                <check card='1' diag='0|0||xforms:impose'>
                 <cvUntyped to='xs:string'>
                  <data>
                   <conditionalSort>
                    <fn name='exists'>
                     <tail start='2'>
                      <varRef name='Q{}binding' slot='3'/>
                     </tail>
                    </fn>
                    <docOrder intra='0'>
                     <slash simple='2'>
                      <varRef name='Q{}binding' slot='3'/>
                      <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                     </slash>
                    </docOrder>
                   </conditionalSort>
                  </data>
                 </cvUntyped>
                </check>
               </ufCall>
               <varRef role='cxt' name='Q{}instanceField' slot='4'/>
               <varRef role='nsCxt' name='Q{}namespace-context-item' slot='6'/>
               <str role='sa' val='no'/>
               <map role='options' size='0'/>
               <map role='wp' size='0'/>
              </evaluate>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <true/>
          <true/>
         </choose>
         <sequence line='1167'>
          <elem name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
           <sequence line='1168'>
            <let var='Q{}element' as='element(Q{http://www.w3.org/2002/xforms}output)' slot='10' eval='16'>
             <dot type='element(Q{http://www.w3.org/2002/xforms}output)'/>
             <let line='2215' var='Q{}class' as='xs:string?' slot='11' eval='7'>
              <choose line='2216'>
               <fn name='exists'>
                <slash simple='1'>
                 <varRef name='Q{}element' slot='10'/>
                 <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                </slash>
               </fn>
               <cvUntyped line='2217' to='xs:string' diag='3|0|XTTE0570|class'>
                <cast as='xs:untypedAtomic' emptiable='0'>
                 <fn name='string'>
                  <convert from='xs:untypedAtomic' to='xs:string'>
                   <data>
                    <slash simple='1'>
                     <varRef name='Q{}element' slot='10'/>
                     <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                    </slash>
                   </data>
                  </convert>
                 </fn>
                </cast>
               </cvUntyped>
              </choose>
              <let line='2220' var='Q{}class-mod' as='xs:string?' slot='12' eval='7'>
               <choose line='2222'>
                <fn name='exists'>
                 <slash simple='1'>
                  <varRef name='Q{}element' slot='10'/>
                  <axis name='attribute' nodeTest='attribute(Q{}incremental)' jsTest='return item.name===&#39;incremental&#39;'/>
                 </slash>
                </fn>
                <cvUntyped line='2223' to='xs:string' diag='3|0|XTTE0570|class-mod'>
                 <cast as='xs:untypedAtomic' emptiable='0'>
                  <fn name='string-join'>
                   <sequence>
                    <varRef name='Q{}class' slot='11'/>
                    <str val='incremental'/>
                   </sequence>
                   <str val=' '/>
                  </fn>
                 </cast>
                </cvUntyped>
                <true/>
                <varRef line='2226' name='Q{}class' slot='11'/>
               </choose>
               <choose line='2230'>
                <fn name='exists'>
                 <varRef name='Q{}class-mod' slot='12'/>
                </fn>
                <treat line='2231' as='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;' diag='5|0|XTTE0780|xforms:getClass#1'>
                 <att name='class' flags='l'>
                  <varRef name='Q{}class-mod' slot='12'/>
                 </att>
                </treat>
               </choose>
              </let>
             </let>
            </let>
            <applyT line='1170' bSlot='12'>
             <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
            </applyT>
            <elem line='1172' name='span' nsuri='' flags='l' namespaces='xd rdf xhtml js in fn map array ev'>
             <sequence line='1173'>
              <att name='id' flags='l'>
               <varRef name='Q{}id' slot='0'/>
              </att>
              <att line='1174' name='style' flags='l'>
               <choose>
                <varRef name='Q{}relevantVar' slot='9'/>
                <str val='display:inline'/>
                <true/>
                <str val='display:none'/>
               </choose>
              </att>
              <att line='1175' name='instance-context' flags='l'>
               <varRef name='Q{}instance-context' slot='2'/>
              </att>
              <att line='1176' name='data-ref' flags='l'>
               <varRef name='Q{}nodeset' slot='1'/>
              </att>
              <choose line='1178'>
               <and op='and'>
                <fn name='exists'>
                 <varRef name='Q{}binding' slot='3'/>
                </fn>
                <fn name='exists'>
                 <slash simple='2'>
                  <varRef name='Q{}binding' slot='3'/>
                  <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                 </slash>
                </fn>
               </and>
               <att line='1179' name='data-relevant' flags='l'>
                <fn name='string-join'>
                 <convert from='xs:untypedAtomic' to='xs:string'>
                  <data>
                   <slash simple='2'>
                    <varRef name='Q{}binding' slot='3'/>
                    <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                   </slash>
                  </data>
                 </convert>
                 <str val=' '/>
                </fn>
               </att>
              </choose>
              <varRef line='1183' name='Q{}valueExecuted' slot='8'/>
             </sequence>
            </elem>
           </sequence>
          </elem>
          <choose line='1188'>
           <fn name='empty'>
            <slash simple='1'>
             <dot type='element(Q{http://www.w3.org/2002/xforms}output)'/>
             <axis name='ancestor' nodeTest='element(Q{http://www.w3.org/2002/xforms}repeat)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;repeat&#39;;'/>
            </slash>
           </fn>
           <ifCall line='1209' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
            <check card='1' diag='0|0||ixsl:call'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
            </check>
            <str val='addOutput'/>
            <arrayBlock>
             <varRef name='Q{}id' slot='0'/>
             <ifCall line='1191' name='Q{http://www.w3.org/2005/xpath-functions/map}merge' type='map(*)'>
              <sequence>
               <ifCall name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                <str val='@instance-context'/>
                <varRef name='Q{}instance-context' slot='2'/>
               </ifCall>
               <choose line='1193'>
                <varRef name='Q{}nodeset' slot='1'/>
                <ifCall line='1194' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                 <str val='@ref'/>
                 <varRef name='Q{}nodeset' slot='1'/>
                </ifCall>
               </choose>
               <choose line='1197'>
                <fn name='exists'>
                 <axis name='attribute' nodeTest='attribute(Q{}value)' jsTest='return item.name===&#39;value&#39;'/>
                </fn>
                <ifCall line='1198' name='Q{http://www.w3.org/2005/xpath-functions/map}entry' type='map(*)'>
                 <str val='@value'/>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}value' chk='0'/>
                 </cast>
                </ifCall>
               </choose>
              </sequence>
              <map size='2'>
               <str val='duplicates'/>
               <str val='reject'/>
               <str val='duplicates-error-code'/>
               <str val='XTDE3365'/>
              </map>
             </ifCall>
            </arrayBlock>
           </ifCall>
          </choose>
         </sequence>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='30' rank='0' minImp='0' slots='3' flags='s' line='1862' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}trigger)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;trigger&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1863'>
     <param name='Q{}id' slot='0' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|id'>
       <check card='1' diag='8|0|XTTE0590|id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1864' name='Q{}nodeset' slot='1' flags='ti' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line='1866' var='Q{}innerbody' as='document-node()' slot='2' eval='16'>
      <doc line='1868' validation='preserve'>
       <choose>
        <fn name='exists'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
        </fn>
        <applyT line='1869' bSlot='13'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
        </applyT>
        <true/>
        <valueOf line='1871' flags='l'>
         <str val=' '/>
        </valueOf>
       </choose>
      </doc>
      <elem line='1875' name='span' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
       <sequence>
        <att name='style' flags='l'>
         <str val='display:&#39;inline&#39;'/>
        </att>
        <compElem line='1886' flags='l'>
         <choose role='name' line='1878'>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}appearance' chk='0'/>
           </cast>
           <str val='minimal'/>
          </vc>
          <str val='a'/>
          <true/>
          <str val='button'/>
         </choose>
         <sequence role='content' line='1887'>
          <choose>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}appearance' chk='0'/>
            </cast>
            <str val='minimal'/>
           </vc>
           <att line='1888' name='type' flags='l'>
            <str val='button'/>
           </att>
          </choose>
          <att line='1891' name='data-ref' flags='l'>
           <varRef name='Q{}nodeset' slot='1'/>
          </att>
          <att line='1892' name='data-action' flags='l'>
           <varRef name='Q{}id' slot='0'/>
          </att>
          <copyOf line='1893' flags='vc'>
           <varRef name='Q{}innerbody' slot='2'/>
          </copyOf>
         </sequence>
        </compElem>
       </sequence>
      </elem>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='19' rank='0' minImp='0' slots='11' flags='s' line='1452' module='saxon-xforms.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2002/xforms}select1)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;select1&#39;;'/>
    <sequence role='action' ns='xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=~ sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=~ sfp=http://saxon.sf.net/ns/packages map=~' line='1453'>
     <param name='Q{}id' slot='0' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|id'>
       <check card='1' diag='8|0|XTTE0590|id'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|id'>
         <data>
          <supplied slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1454' name='Q{}nodeset' slot='1' flags='ti' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|nodeset'>
       <check card='1' diag='8|0|XTTE0590|nodeset'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|nodeset'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1455' name='Q{}instance-context' slot='2' flags='i' as='xs:string'>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|instance-context'>
       <check card='1' diag='8|0|XTTE0590|instance-context'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|instance-context'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line='1456' name='Q{}binding' slot='3' as='element(Q{http://www.w3.org/2002/xforms}bind)*'>
      <empty role='select'/>
      <treat role='conversion' as='element(Q{http://www.w3.org/2002/xforms}bind)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;bind&#39;;' diag='8|0|XTTE0590|binding'>
       <supplied slot='3'/>
      </treat>
     </param>
     <param line='1457' name='Q{}actions' slot='4' as='map(*)*'>
      <empty role='select'/>
      <treat role='conversion' as='map(*)' jsTest='return SaxonJS.U.isMap(item)' diag='8|0|XTTE0590|actions'>
       <supplied slot='4'/>
      </treat>
     </param>
     <let line='1459' var='Q{}instanceField' as='node()?' slot='5' eval='7'>
      <choose line='1460'>
       <varRef name='Q{}nodeset' slot='1'/>
       <let line='1461' var='Q{}instanceXML' as='element()' slot='6' eval='16'>
        <treat as='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;' diag='3|0|XTTE0570|instanceXML'>
         <check card='1' diag='3|0|XTTE0570|instanceXML'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='getInstance'/>
           <arrayBlock>
            <varRef name='Q{}instance-context' slot='2'/>
           </arrayBlock>
          </ifCall>
         </check>
        </treat>
        <treat line='1462' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='3|0|XTTE0570|instanceField'>
         <check card='?' diag='3|0|XTTE0570|instanceField'>
          <evaluate dxns=''>
           <ufCall role='xpath' name='Q{http://www.w3.org/2002/xforms}impose' tailCall='false' bSlot='6' eval='6'>
            <varRef name='Q{}nodeset' slot='1'/>
           </ufCall>
           <varRef role='cxt' name='Q{}instanceXML' slot='6'/>
           <varRef role='nsCxt' name='Q{}instanceXML' slot='6'/>
           <str role='sa' val='no'/>
           <map role='options' size='0'/>
           <map role='wp' size='0'/>
          </evaluate>
         </check>
        </treat>
       </let>
      </choose>
      <elem line='1477' name='div' nsuri='' namespaces='xd rdf xhtml js in fn map array ev'>
       <sequence>
        <att name='class' flags='l'>
         <str val='xforms-select'/>
        </att>
        <applyT line='1478' bSlot='7'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
        </applyT>
        <let line='1479' var='Q{}hints' as='text()*' slot='7' eval='4'>
         <slash simple='2'>
          <axis name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}hint)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;hint&#39;;'/>
          <axis name='child' nodeTest='text()' jsTest='return item.nodeType===3;'/>
         </slash>
         <elem line='1481' name='select' nsuri='' flags='l' namespaces='xd rdf xhtml js in fn map array ev'>
          <sequence line='1482'>
           <let var='Q{}element' as='element()' slot='8' eval='16'>
            <dot type='element()'/>
            <let line='2215' var='Q{}class' as='xs:string?' slot='9' eval='7'>
             <choose line='2216'>
              <fn name='exists'>
               <slash simple='1'>
                <varRef name='Q{}element' slot='8'/>
                <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
               </slash>
              </fn>
              <cvUntyped line='2217' to='xs:string' diag='3|0|XTTE0570|class'>
               <cast as='xs:untypedAtomic' emptiable='0'>
                <fn name='string'>
                 <convert from='xs:untypedAtomic' to='xs:string'>
                  <data>
                   <slash simple='1'>
                    <varRef name='Q{}element' slot='8'/>
                    <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
                   </slash>
                  </data>
                 </convert>
                </fn>
               </cast>
              </cvUntyped>
             </choose>
             <let line='2220' var='Q{}class-mod' as='xs:string?' slot='10' eval='7'>
              <choose line='2222'>
               <fn name='exists'>
                <slash simple='1'>
                 <varRef name='Q{}element' slot='8'/>
                 <axis name='attribute' nodeTest='attribute(Q{}incremental)' jsTest='return item.name===&#39;incremental&#39;'/>
                </slash>
               </fn>
               <cvUntyped line='2223' to='xs:string' diag='3|0|XTTE0570|class-mod'>
                <cast as='xs:untypedAtomic' emptiable='0'>
                 <fn name='string-join'>
                  <sequence>
                   <varRef name='Q{}class' slot='9'/>
                   <str val='incremental'/>
                  </sequence>
                  <str val=' '/>
                 </fn>
                </cast>
               </cvUntyped>
               <true/>
               <varRef line='2226' name='Q{}class' slot='9'/>
              </choose>
              <choose line='2230'>
               <fn name='exists'>
                <varRef name='Q{}class-mod' slot='10'/>
               </fn>
               <treat line='2231' as='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;' diag='5|0|XTTE0780|xforms:getClass#1'>
                <att name='class' flags='l'>
                 <varRef name='Q{}class-mod' slot='10'/>
                </att>
               </treat>
              </choose>
             </let>
            </let>
           </let>
           <att line='1484' name='instance-context' flags='l'>
            <varRef name='Q{}instance-context' slot='2'/>
           </att>
           <att line='1485' name='data-ref' flags='l'>
            <varRef name='Q{}nodeset' slot='1'/>
           </att>
           <choose line='1487'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}constraint)' jsTest='return item.name===&#39;constraint&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1488' name='data-constraint' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}constraint)' jsTest='return item.name===&#39;constraint&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1490'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1491' name='data-relevant' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}relevant)' jsTest='return item.name===&#39;relevant&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1493'>
            <and op='and'>
             <fn name='exists'>
              <varRef name='Q{}binding' slot='3'/>
             </fn>
             <fn name='exists'>
              <slash simple='2'>
               <varRef name='Q{}binding' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}required)' jsTest='return item.name===&#39;required&#39;'/>
              </slash>
             </fn>
            </and>
            <att line='1494' name='data-required' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash simple='2'>
                 <varRef name='Q{}binding' slot='3'/>
                 <axis name='attribute' nodeTest='attribute(Q{}required)' jsTest='return item.name===&#39;required&#39;'/>
                </slash>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1497'>
            <fn name='exists'>
             <varRef name='Q{}actions' slot='4'/>
            </fn>
            <att line='1498' name='data-action' flags='l'>
             <varRef name='Q{}id' slot='0'/>
            </att>
           </choose>
           <choose line='1501'>
            <fn name='exists'>
             <varRef name='Q{}hints' slot='7'/>
            </fn>
            <att line='1502' name='title' flags='l'>
             <fn name='string-join'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <mergeAdj>
                 <varRef name='Q{}hints' slot='7'/>
                </mergeAdj>
               </data>
              </convert>
              <str val=' '/>
             </fn>
            </att>
           </choose>
           <choose line='1506'>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <fn name='local-name'>
              <dot type='element()'/>
             </fn>
             <str val='select'/>
            </vc>
            <sequence line='1507'>
             <att name='multiple' flags='l'>
              <str val='true'/>
             </att>
             <att line='1508' name='size' flags='l'>
              <convert line='1509' from='xs:integer' to='xs:string'>
               <fn name='count'>
                <axis name='descendant' nodeTest='element(Q{http://www.w3.org/2002/xforms}item)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;item&#39;;'/>
               </fn>
              </convert>
             </att>
            </sequence>
           </choose>
           <applyT line='1513' bSlot='8'>
            <axis role='select' name='child' nodeTest='element(Q{http://www.w3.org/2002/xforms}item)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2002/xforms&#39;&amp;&amp;q.local===&#39;item&#39;;'/>
            <withParam name='Q{}selectedValue' as='xs:string'>
             <choose line='1468'>
              <fn name='exists'>
               <varRef name='Q{}instanceField' slot='5'/>
              </fn>
              <cvUntyped line='1469' to='xs:string' diag='3|0|XTTE0570|selectedValue'>
               <cast as='xs:untypedAtomic' emptiable='0'>
                <fn name='string'>
                 <convert from='xs:anyAtomicType' to='xs:string'>
                  <data>
                   <varRef name='Q{}instanceField' slot='5'/>
                  </data>
                 </convert>
                </fn>
               </cast>
              </cvUntyped>
              <true/>
              <str val=''/>
             </choose>
            </withParam>
           </applyT>
          </sequence>
         </elem>
        </let>
       </sequence>
      </elem>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <output>
  <property name='doctype-system' value='http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'/>
  <property name='method' value='html'/>
  <property name='indent' value='no'/>
  <property name='omit-xml-declaration' value='no'/>
  <property name='encoding' value='utf-8'/>
  <property name='doctype-public' value='-//W3C//DTD XHTML 1.0 Transitional//EN'/>
  <property name='{http://saxon.sf.net/}stylesheet-version' value='30'/>
 </output>
 <decimalFormat/>
</package>
<?Σ d81a67e9?>
