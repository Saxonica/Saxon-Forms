<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="true">
 <co id="0" binds="1 2 3 4 5 6 7">
  <template name="Q{}action-insert" flags="os" line="4137" module="saxon-xforms.xsl" slots="9">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="4138">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="4139" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="4140" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="4142" var="ref" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="4143" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="4145" var="origin" as="node()?" slot="5" eval="7">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|origin">
        <check card="?" diag="3|0|XTTE0570|origin">
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="action-map" slot="0"/>
          <str val="@origin"/>
         </ifCall>
        </check>
       </treat>
       <let line="4160" var="instanceXML2" as="element()" slot="6" eval="7">
        <choose line="4162">
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <ufCall line="4158" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
            <varRef name="ref" slot="3"/>
           </ufCall>
           <str val="saxon-forms-default"/>
          </vc>
          <fn name="exists">
           <varRef name="instanceXML" slot="1"/>
          </fn>
         </and>
         <check line="4163" card="1" diag="3|0|XTTE0570|instanceXML2">
          <varRef name="instanceXML" slot="1"/>
         </check>
         <true/>
         <check line="4166" card="1" diag="3|0|XTTE0570|instanceXML2">
          <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="2" eval="6">
           <varRef name="ref" slot="3"/>
          </ufCall>
         </check>
        </choose>
        <let line="4174" var="insert-node-location" as="node()" slot="7" eval="7">
         <treat line="4175" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|insert-node-location">
          <check card="1" diag="3|0|XTTE0570|insert-node-location">
           <evaluate dxns="">
            <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="4">
             <check card="1" diag="0|0||xforms:impose">
              <choose line="4156">
               <and op="and">
                <fn name="exists">
                 <varRef name="ref" slot="3"/>
                </fn>
                <vc op="ne" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                 <varRef name="ref" slot="3"/>
                 <str val=""/>
                </vc>
               </and>
               <choose>
                <fn name="exists">
                 <varRef name="at" slot="4"/>
                </fn>
                <fn name="concat">
                 <varRef name="ref" slot="3"/>
                 <str val="["/>
                 <varRef name="at" slot="4"/>
                 <str val="]"/>
                </fn>
                <true/>
                <varRef name="ref" slot="3"/>
               </choose>
              </choose>
             </check>
            </ufCall>
            <varRef role="cxt" name="instanceXML2" slot="6"/>
            <varRef role="nsCxt" name="instanceXML2" slot="6"/>
            <str role="sa" val="no"/>
            <map role="wp" size="0"/>
           </evaluate>
          </check>
         </treat>
         <let line="4191" var="instance-with-insert" as="element()" slot="8" eval="7">
          <treat line="4192" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|instance-with-insert">
           <check card="1" diag="3|0|XTTE0570|instance-with-insert">
            <applyT mode="Q{}insert-node" bSlot="4">
             <varRef role="select" name="instanceXML2" slot="6"/>
             <withParam name="Q{}insert-node-location" flags="t" as="node()">
              <varRef line="4193" name="insert-node-location" slot="7"/>
             </withParam>
             <withParam name="Q{}node-to-insert" flags="t" as="node()?">
              <choose line="4180">
               <fn name="exists">
                <varRef name="origin" slot="5"/>
               </fn>
               <copyOf line="4181" flags="vc">
                <varRef name="origin" slot="5"/>
               </copyOf>
               <true/>
               <copyOf line="4184" flags="vc">
                <varRef name="insert-node-location" slot="7"/>
               </copyOf>
              </choose>
             </withParam>
             <withParam name="Q{}position-relative" flags="t" as="xs:string?">
              <treat line="4144" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|position">
               <check card="?" diag="3|0|XTTE0570|position">
                <cvUntyped to="xs:string">
                 <data>
                  <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                   <varRef name="action-map" slot="0"/>
                   <str val="@position"/>
                  </ifCall>
                 </data>
                </cvUntyped>
               </check>
              </treat>
             </withParam>
            </applyT>
           </check>
          </treat>
          <sequence line="4199">
           <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="5" eval="6 6">
            <varRef name="ref" slot="3"/>
            <varRef name="instance-with-insert" slot="8"/>
           </ufCall>
           <callT line="4200" name="xforms-rebuild" bSlot="6" flags="t"/>
          </sequence>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="8" binds="1 2 3 4 4 9 6 7">
  <template name="Q{}action-delete" flags="os" line="4213" module="saxon-xforms.xsl" slots="11">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="4214">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="4215" name="Q{}instanceXML" slot="1" flags="ti" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="1" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="4216" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="4218" var="ref" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="4219" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="4229" var="ref-qualified" as="xs:string?" slot="5" eval="7">
       <choose>
        <fn name="exists">
         <varRef name="ref" slot="3"/>
        </fn>
        <choose>
         <fn name="exists">
          <varRef name="at" slot="4"/>
         </fn>
         <fn name="concat">
          <varRef name="ref" slot="3"/>
          <str val="["/>
          <varRef name="at" slot="4"/>
          <str val="]"/>
         </fn>
         <true/>
         <varRef name="ref" slot="3"/>
        </choose>
       </choose>
       <let line="4233" var="instanceXML2" as="element()" slot="6" eval="7">
        <choose line="4235">
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <ufCall line="4231" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
            <varRef name="ref" slot="3"/>
           </ufCall>
           <str val="saxon-forms-default"/>
          </vc>
          <fn name="exists">
           <varRef name="instanceXML" slot="1"/>
          </fn>
         </and>
         <varRef line="4236" name="instanceXML" slot="1"/>
         <true/>
         <check line="4239" card="1" diag="3|0|XTTE0570|instanceXML2">
          <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="2" eval="6">
           <varRef name="ref" slot="3"/>
          </ufCall>
         </check>
        </choose>
        <let line="4244" var="ifVar" as="xs:string?" slot="7" eval="7">
         <choose line="715">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
           <varRef line="4244" name="action-map" slot="0"/>
           <str val="@if"/>
          </ifCall>
          <treat line="716" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
           <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
            <cvUntyped to="xs:string">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <varRef line="4244" name="action-map" slot="0"/>
               <str val="@if"/>
              </ifCall>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </choose>
         <let line="4247" var="delete-node" as="node()?" slot="8" eval="7">
          <choose line="4249">
           <and op="and">
            <fn name="exists">
             <varRef name="ref-qualified" slot="5"/>
            </fn>
            <fn name="not">
             <gc op="=" card="1:1" comp="CCC">
              <varRef name="ref-qualified" slot="5"/>
              <str val=""/>
             </gc>
            </fn>
           </and>
           <treat line="4250" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|delete-node">
            <check card="?" diag="3|0|XTTE0570|delete-node">
             <evaluate dxns="">
              <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="7">
               <check card="1" diag="0|0||xforms:impose">
                <varRef name="ref-qualified" slot="5"/>
               </check>
              </ufCall>
              <varRef role="cxt" name="instanceXML2" slot="6"/>
              <varRef role="nsCxt" name="instanceXML2" slot="6"/>
              <str role="sa" val="no"/>
              <map role="wp" size="0"/>
             </evaluate>
            </check>
           </treat>
          </choose>
          <let line="4255" var="ifExecuted" as="xs:boolean" slot="9" eval="7">
           <choose line="4257">
            <fn name="exists">
             <varRef name="ifVar" slot="7"/>
            </fn>
            <treat line="4258" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|ifExecuted">
             <check card="1" diag="3|0|XTTE0570|ifExecuted">
              <cvUntyped to="xs:boolean">
               <data>
                <evaluate dxns="">
                 <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="4" eval="7">
                  <check card="1" diag="0|0||xforms:impose">
                   <varRef name="ifVar" slot="7"/>
                  </check>
                 </ufCall>
                 <varRef role="cxt" name="delete-node" slot="8"/>
                 <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
                  <varRef name="delete-node" slot="8"/>
                 </check>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <true/>
            <true/>
           </choose>
           <choose line="4266">
            <varRef name="ifExecuted" slot="9"/>
            <let line="4267" var="instance-with-delete" as="element()" slot="10" eval="7">
             <treat line="4268" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|instance-with-delete">
              <check card="1" diag="3|0|XTTE0570|instance-with-delete">
               <applyT mode="Q{}delete-node" bSlot="5">
                <varRef role="select" name="instanceXML2" slot="6"/>
                <withParam name="Q{}delete-node" flags="t" as="node()?">
                 <varRef line="4269" name="delete-node" slot="8"/>
                </withParam>
               </applyT>
              </check>
             </treat>
             <sequence line="4273">
              <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="6" eval="6 6">
               <varRef name="ref" slot="3"/>
               <varRef name="instance-with-delete" slot="10"/>
              </ufCall>
              <callT line="4274" name="xforms-rebuild" bSlot="7" flags="t"/>
             </sequence>
            </let>
           </choose>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="10" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" line="2816" module="saxon-xforms.xsl" eval="8" flags="pU" as="xs:boolean" slots="1">
   <arg name="this" as="element()"/>
   <fn role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2852" name="exists">
    <sequence line="2827">
     <analyzeString>
      <cvUntyped role="select" to="xs:string">
       <data>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
        </slash>
       </data>
      </cvUntyped>
      <str role="regex" val="\i\c*\("/>
      <str role="flags" val=""/>
      <choose role="matching" line="2830">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="substring-before">
         <dot type="xs:string"/>
         <str val="("/>
        </fn>
        <str val="index"/>
       </vc>
       <str val="i"/>
      </choose>
      <empty role="nonMatching"/>
     </analyzeString>
     <analyzeString line="2839">
      <cvUntyped role="select" to="xs:string">
       <data>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
        </slash>
       </data>
      </cvUntyped>
      <str role="regex" val="\i\c*\("/>
      <str role="flags" val=""/>
      <choose role="matching" line="2842">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="substring-before">
         <dot type="xs:string"/>
         <str val="("/>
        </fn>
        <str val="index"/>
       </vc>
       <str val="i"/>
      </choose>
      <empty role="nonMatching"/>
     </analyzeString>
    </sequence>
   </fn>
  </function>
 </co>
 <co id="11" binds="11 12 11 11 12">
  <mode name="Q{}form-check" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="10" flags="s" line="2468" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2469">
     <param name="Q{}curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="2470" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <param line="2471" name="Q{}pendingUpdates" slot="2" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="2477" var="updatedPath" as="xs:string" slot="3" eval="7">
      <choose>
       <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="position" slot="1"/>
        </data>
        <int val="0"/>
       </gc>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="name">
         <dot type="element()"/>
        </fn>
        <str val="["/>
        <atomSing card="?" diag="0|3||fn:concat">
         <varRef name="position" slot="1"/>
        </atomSing>
        <str val="]"/>
       </fn>
       <true/>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="name">
         <dot type="element()"/>
        </fn>
       </fn>
      </choose>
      <copy line="2485" flags="cin">
       <sequence role="content">
        <applyT mode="Q{}form-check" bSlot="0">
         <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <withParam name="Q{}curPath" as="xs:string">
          <fn line="2486" name="concat">
           <varRef name="updatedPath" slot="3"/>
           <str val="/"/>
          </fn>
         </withParam>
        </applyT>
        <let line="2492" var="associated-form-control" as="element()*" slot="4" eval="8">
         <filter flags="b">
          <filter flags="b">
           <slash simple="1">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <or op="or">
            <or op="or">
             <fn name="exists">
              <axis name="self" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
             </fn>
             <fn name="exists">
              <axis name="self" nodeTest="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='select';"/>
             </fn>
            </or>
            <fn name="exists">
             <axis name="self" nodeTest="element(Q{}textarea)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='textarea';"/>
            </fn>
           </or>
          </filter>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}data-ref" chk="0"/>
           <varRef name="updatedPath" slot="3"/>
          </gc>
         </filter>
         <sequence line="2494">
          <choose>
           <fn name="exists">
            <tail start="2">
             <varRef name="associated-form-control" slot="4"/>
            </tail>
           </fn>
           <message line="2495">
            <sequence role="select">
             <valueOf>
              <str val="[form-check] More than one form element controls the value of XForm node at "/>
             </valueOf>
             <valueOf>
              <varRef name="updatedPath" slot="3"/>
             </valueOf>
             <valueOf>
              <str val="; Saxon-Forms will apply the value of the first"/>
             </valueOf>
            </sequence>
            <str role="terminate" val="no"/>
            <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
           </message>
          </choose>
          <choose line="2499">
           <fn name="exists">
            <varRef name="associated-form-control" slot="4"/>
           </fn>
           <valueOf line="2503" flags="l">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <applyT mode="Q{}get-field" bSlot="1">
                 <first role="select">
                  <varRef name="associated-form-control" slot="4"/>
                 </first>
                </applyT>
               </mergeAdj>
              </data>
             </convert>
             <str val=""/>
            </fn>
           </valueOf>
           <and line="2506" op="and">
            <fn name="exists">
             <varRef name="pendingUpdates" slot="2"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
             <check card="1" diag="0|0||map:contains">
              <varRef name="pendingUpdates" slot="2"/>
             </check>
             <varRef name="updatedPath" slot="3"/>
            </ifCall>
           </and>
           <valueOf line="2514" flags="l">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
             <check card="1" diag="0|0||map:get">
              <varRef name="pendingUpdates" slot="2"/>
             </check>
             <varRef name="updatedPath" slot="3"/>
            </ifCall>
           </valueOf>
           <true/>
           <valueOf line="2523" flags="l">
            <fn name="normalize-space">
             <fn name="string-join">
              <data>
               <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
              </data>
              <str val=""/>
             </fn>
            </fn>
           </valueOf>
          </choose>
          <forEachGroup line="2528" algorithm="by">
           <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           <fn role="key" name="local-name">
            <dot type="element()"/>
           </fn>
           <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
           <let role="content" line="2530" var="updatedChildPath" as="xs:string" slot="5" eval="8">
            <fn name="concat">
             <varRef name="updatedPath" slot="3"/>
             <str val="/"/>
             <check card="?" diag="0|2||fn:concat">
              <currentGroupingKey/>
             </check>
            </fn>
            <let line="2535" var="vv:v0" as="xs:string" slot="6" eval="13">
             <fn name="concat">
              <varRef name="updatedChildPath" slot="5"/>
              <str val="["/>
             </fn>
             <let var="dataRefWithFilter" as="element()*" slot="7" eval="8">
              <filter flags="b">
               <slash simple="1">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <fn name="starts-with">
                <cvUntyped to="xs:string">
                 <attVal name="Q{}data-ref" chk="0"/>
                </cvUntyped>
                <varRef name="vv:v0" slot="6"/>
               </fn>
              </filter>
              <choose line="2538">
               <or op="or">
                <fn name="exists">
                 <tail start="2">
                  <currentGroup/>
                 </tail>
                </fn>
                <fn name="exists">
                 <varRef name="dataRefWithFilter" slot="7"/>
                </fn>
               </or>
               <let line="2541" var="vv:v1" as="xs:string" slot="8" eval="13">
                <fn name="concat">
                 <varRef name="updatedPath" slot="3"/>
                 <str val="/"/>
                </fn>
                <forEach line="2539">
                 <currentGroup/>
                 <applyT line="2540" mode="Q{}form-check" bSlot="2">
                  <dot role="select"/>
                  <withParam name="Q{}curPath" as="xs:string">
                   <varRef line="2541" name="vv:v1" slot="8"/>
                  </withParam>
                  <withParam name="Q{}position" as="xs:integer">
                   <fn line="2542" name="position"/>
                  </withParam>
                 </applyT>
                </forEach>
               </let>
               <true/>
               <let line="2550" var="vv:v2" as="xs:string" slot="9" eval="13">
                <fn name="concat">
                 <varRef name="updatedPath" slot="3"/>
                 <str val="/"/>
                </fn>
                <forEach line="2548">
                 <currentGroup/>
                 <applyT line="2549" mode="Q{}form-check" bSlot="3">
                  <dot role="select"/>
                  <withParam name="Q{}curPath" as="xs:string">
                   <varRef line="2550" name="vv:v2" slot="9"/>
                  </withParam>
                 </applyT>
                </forEach>
               </let>
              </choose>
             </let>
            </let>
           </let>
          </forEachGroup>
         </sequence>
        </let>
       </sequence>
      </copy>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="4" flags="s" line="2688" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2689">
     <param name="Q{}curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="2690" name="Q{}pendingUpdates" slot="1" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <let line="2691" var="updatedPath" as="xs:string" slot="2" eval="8">
      <fn name="concat">
       <atomSing card="?" diag="0|0||fn:concat">
        <varRef name="curPath" slot="0"/>
       </atomSing>
       <str val="@"/>
       <fn name="local-name">
        <dot type="attribute()"/>
       </fn>
      </fn>
      <let line="2700" var="associated-form-control" as="node()*" slot="3" eval="8">
       <slash>
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
        <fn name="key">
         <str val="Q{http://saxon.sf.net/}kk101"/>
         <varRef name="updatedPath" slot="2"/>
         <dot type="document-node()"/>
        </fn>
       </slash>
       <choose line="2703">
        <fn name="exists">
         <varRef name="associated-form-control" slot="3"/>
        </fn>
        <compAtt line="2706">
         <fn role="name" name="local-name">
          <dot type="attribute()"/>
         </fn>
         <fn role="select" line="2707" name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <mergeAdj>
             <applyT mode="Q{}get-field" bSlot="4">
              <varRef role="select" name="associated-form-control" slot="3"/>
             </applyT>
            </mergeAdj>
           </data>
          </convert>
          <str val=""/>
         </fn>
        </compAtt>
        <and line="2710" op="and">
         <fn name="exists">
          <varRef name="pendingUpdates" slot="1"/>
         </fn>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <check card="1" diag="0|0||map:contains">
           <varRef name="pendingUpdates" slot="1"/>
          </check>
          <varRef name="updatedPath" slot="2"/>
         </ifCall>
        </and>
        <compAtt line="2711">
         <fn role="name" name="local-name">
          <dot type="attribute()"/>
         </fn>
         <ifCall role="select" line="2712" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <check card="1" diag="0|0||map:get">
           <varRef name="pendingUpdates" slot="1"/>
          </check>
          <varRef name="updatedPath" slot="2"/>
         </ifCall>
        </compAtt>
        <true/>
        <forEach line="2716">
         <dot type="attribute()"/>
         <copy flags="cin">
          <empty role="content"/>
         </copy>
        </forEach>
       </choose>
      </let>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="13" binds="11 11">
  <mode name="Q{}form-check-initial" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="6" flags="s" line="2406" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2407">
     <param name="Q{}instance-id" slot="0" as="xs:string">
      <str role="select" val="saxon-forms-default"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
       <check card="1" diag="8|0|XTTE0590|instance-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="2408" name="Q{}pendingUpdates" slot="1" flags="t" as="map(xs:string, xs:string)?">
      <empty role="select"/>
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|pendingUpdates">
       <check card="?" diag="8|0|XTTE0590|pendingUpdates">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <let line="2414" var="curPath" as="xs:string" slot="2" eval="7">
      <choose line="2416">
       <vc op="eq" onEmpty="0" comp="CCC">
        <varRef name="instance-id" slot="0"/>
        <str val="saxon-forms-default"/>
       </vc>
       <str val=""/>
       <true/>
       <cvUntyped line="2420" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="concat">
          <str val="instance('"/>
          <varRef name="instance-id" slot="0"/>
          <str val="')/"/>
         </fn>
        </cast>
       </cvUntyped>
      </choose>
      <copy line="2427" flags="cin">
       <forEachGroup role="content" algorithm="by">
        <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <fn role="key" name="local-name">
         <dot type="element()"/>
        </fn>
        <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
        <let role="content" line="2429" var="updatedChildPath" as="xs:string" slot="3" eval="8">
         <fn name="concat">
          <varRef name="curPath" slot="2"/>
          <check card="?" diag="0|1||fn:concat">
           <currentGroupingKey/>
          </check>
         </fn>
         <let line="2434" var="vv:v0" as="xs:string" slot="4" eval="13">
          <fn name="concat">
           <varRef name="updatedChildPath" slot="3"/>
           <str val="["/>
          </fn>
          <let var="dataRefWithFilter" as="element()*" slot="5" eval="8">
           <filter flags="b">
            <slash simple="1">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
             <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <fn name="starts-with">
             <cvUntyped to="xs:string">
              <attVal name="Q{}data-ref" chk="0"/>
             </cvUntyped>
             <varRef name="vv:v0" slot="4"/>
            </fn>
           </filter>
           <choose line="2436">
            <or op="or">
             <fn name="exists">
              <tail start="2">
               <currentGroup/>
              </tail>
             </fn>
             <fn name="exists">
              <varRef name="dataRefWithFilter" slot="5"/>
             </fn>
            </or>
            <forEach line="2437">
             <currentGroup/>
             <applyT line="2438" mode="Q{}form-check" bSlot="0">
              <dot role="select"/>
              <withParam name="Q{}curPath" as="xs:string">
               <varRef line="2439" name="curPath" slot="2"/>
              </withParam>
              <withParam name="Q{}position" as="xs:integer">
               <fn line="2440" name="position"/>
              </withParam>
             </applyT>
            </forEach>
            <true/>
            <forEach line="2446">
             <currentGroup/>
             <applyT line="2447" mode="Q{}form-check" bSlot="1">
              <dot role="select"/>
              <withParam name="Q{}curPath" as="xs:string">
               <varRef line="2448" name="curPath" slot="2"/>
              </withParam>
             </applyT>
            </forEach>
           </choose>
          </let>
         </let>
        </let>
       </forEachGroup>
      </copy>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="14" binds="">
  <template name="Q{}action-reset" flags="os" line="4340" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="4341">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="4343">
     <valueOf role="select">
      <str val="[action-reset] Reset triggered!"/>
     </valueOf>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="15" binds="13 3 2 6 16 17 18">
  <template name="Q{}xforms-value-changed" flags="os" line="3801" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3802">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="3804" var="refi" as="attribute(Q{}data-ref)?" slot="1" eval="8">
     <slash simple="1">
      <varRef name="form-control" slot="0"/>
      <axis name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
     </slash>
     <let line="3808" var="actions" as="item()?" slot="2" eval="8">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getAction"/>
       <arrayBlock>
        <fn name="string">
         <slash simple="1">
          <varRef name="form-control" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
         </slash>
        </fn>
       </arrayBlock>
      </ifCall>
      <let line="3812" var="updatedInstanceXML" as="element()" slot="3" eval="7">
       <treat line="3813" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
        <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
         <applyT mode="Q{}form-check-initial" bSlot="0">
          <check role="select" line="3811" card="1" diag="3|0|XTTE0570|instanceXML">
           <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="1" eval="7">
            <check card="1" diag="0|0||xforms:getInstance-JS">
             <cvUntyped to="xs:string">
              <data>
               <varRef name="refi" slot="1"/>
              </data>
             </cvUntyped>
            </check>
           </ufCall>
          </check>
          <withParam name="Q{}instance-id" as="xs:string">
           <ufCall line="3807" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="2" eval="7">
            <check card="1" diag="0|0||xforms:getInstanceId">
             <cvUntyped to="xs:string">
              <data>
               <varRef name="refi" slot="1"/>
              </data>
             </cvUntyped>
            </check>
           </ufCall>
          </withParam>
         </applyT>
        </check>
       </treat>
       <sequence line="3819">
        <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="3" eval="7 6">
         <check card="1" diag="0|0||xforms:setInstance-JS">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="refi" slot="1"/>
           </data>
          </cvUntyped>
         </check>
         <varRef name="updatedInstanceXML" slot="3"/>
        </ufCall>
        <ifCall line="3826" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setPendingUpdates"/>
         <arrayBlock>
          <treat line="3823" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||pendingInstanceUpdates">
           <map size="0"/>
          </treat>
         </arrayBlock>
        </ifCall>
        <ifCall line="3827" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setUpdates"/>
         <arrayBlock>
          <treat line="3824" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||instanceUpdates">
           <map size="0"/>
          </treat>
         </arrayBlock>
        </ifCall>
        <forEach line="3829">
         <varRef name="actions" slot="2"/>
         <let line="3830" var="action-map" as="item()" slot="4" eval="7">
          <dot/>
          <choose line="3832">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:contains">
             <varRef name="action-map" slot="4"/>
            </treat>
            <str val="@event"/>
           </ifCall>
           <choose line="3833">
            <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:get">
                <varRef name="action-map" slot="4"/>
               </treat>
               <str val="@event"/>
              </ifCall>
             </data>
             <str val="xforms-value-changed"/>
            </gc>
            <callT line="3835" name="applyActions" bSlot="4">
             <withParam name="Q{}action-map" flags="t" as="item()">
              <varRef line="3836" name="action-map" slot="4"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string">
              <check line="3837" card="1" diag="8|0|XTTE0590|nodeset">
               <cvUntyped to="xs:string">
                <data>
                 <varRef name="refi" slot="1"/>
                </data>
               </cvUntyped>
              </check>
             </withParam>
             <withParam name="Q{}instanceXML" flags="t" as="element()">
              <varRef line="3838" name="updatedInstanceXML" slot="3"/>
             </withParam>
            </callT>
           </choose>
          </choose>
         </let>
        </forEach>
        <callT line="3844" name="xforms-recalculate" bSlot="5"/>
        <ufCall line="3846" name="Q{http://www.w3.org/2002/xforms}checkRelevantFields" tailCall="false" bSlot="6" eval="4">
         <check card="1" diag="0|0||xforms:checkRelevantFields">
          <cvUntyped to="xs:string">
           <data>
            <slash line="3805" simple="1">
             <varRef name="form-control" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}data-element)" jsTest="return item.name==='data-element'"/>
            </slash>
           </data>
          </cvUntyped>
         </check>
        </ufCall>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="19" binds="20 21 4 21">
  <template name="Q{}getReferencedInstanceField" flags="os" line="3160" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3161">
    <param name="Q{}refi" slot="0" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|refi">
      <check card="1" diag="8|0|XTTE0590|refi">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3165" var="field" as="node()*" slot="1" eval="8">
     <choose line="3167">
      <varRef name="refi" slot="0"/>
      <let line="3168" var="instance-map" as="map(xs:string, xs:string)" slot="2" eval="7">
       <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
        <varRef name="refi" slot="0"/>
       </ufCall>
       <let line="3175" var="this-instance" as="element()?" slot="3" eval="9">
        <callT line="3176" name="getInstance" bSlot="1">
         <withParam name="Q{}instance-id" flags="c" as="xs:string">
          <check line="3177" card="1" diag="8|0|XTTE0590|instance-id">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="instance-map" slot="2"/>
            <str val="instance-id"/>
           </ifCall>
          </check>
         </withParam>
        </callT>
        <treat line="3184" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|field">
         <evaluate dxns="">
          <ufCall role="xpath" line="3181" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="2" eval="7">
           <check card="1" diag="0|0||xforms:impose">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
             <varRef name="instance-map" slot="2"/>
             <str val="xpath"/>
            </ifCall>
           </check>
          </ufCall>
          <varRef role="cxt" name="this-instance" slot="3"/>
          <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
           <varRef name="this-instance" slot="3"/>
          </check>
          <str role="sa" val="no"/>
          <map role="wp" size="0"/>
         </evaluate>
        </treat>
       </let>
      </let>
      <true/>
      <let line="3189" var="default-instance" as="element()?" slot="4" eval="9">
       <callT line="3190" name="getInstance" bSlot="3">
        <withParam name="Q{}instance-id" flags="c" as="xs:string">
         <str val="saxon-forms-default"/>
        </withParam>
       </callT>
       <varRef line="3194" name="default-instance" slot="4"/>
      </let>
     </choose>
     <varRef line="3199" name="field" slot="1"/>
    </let>
   </sequence>
  </template>
 </co>
 <co id="22" binds="">
  <template name="Q{}action-message" flags="os" line="4286" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="4287">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="4291">
     <sequence role="select">
      <valueOf>
       <str val="[action-message] Message reads &#34;"/>
      </valueOf>
      <valueOf>
       <treat line="4289" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|message-value">
        <check card="1" diag="3|0|XTTE0570|message-value">
         <cvUntyped to="xs:string">
          <data>
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
            <varRef name="action-map" slot="0"/>
            <str val="value"/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </valueOf>
      <valueOf flags="S">
       <str val="&#34;"/>
      </valueOf>
     </sequence>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="1" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" line="753" module="saxon-xforms.xsl" eval="8" flags="pU" as="xs:string" slots="7">
   <arg name="base" as="xs:string"/>
   <arg name="relative" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="825" var="full-path-parsed-components" as="xs:string+" slot="2" eval="8">
    <check line="826" card="+" diag="3|0|XTTE0570|full-path-parsed-components">
     <analyzeString>
      <choose role="select" line="760">
       <fn name="starts-with">
        <varRef name="relative" slot="1"/>
        <str val="/"/>
       </fn>
       <varRef line="761" name="relative" slot="1"/>
       <fn line="763" name="starts-with">
        <varRef name="relative" slot="1"/>
        <str val="instance("/>
       </fn>
       <varRef line="764" name="relative" slot="1"/>
       <fn line="766" name="not">
        <varRef name="base" slot="0"/>
       </fn>
       <varRef line="767" name="relative" slot="1"/>
       <or line="769" op="or">
        <fn name="not">
         <varRef name="relative" slot="1"/>
        </fn>
        <vc op="eq" onEmpty="0" comp="CCC">
         <varRef name="relative" slot="1"/>
         <str val="."/>
        </vc>
       </or>
       <varRef line="770" name="base" slot="0"/>
       <true/>
       <let line="774" var="parentCallCount" as="xs:integer" slot="3" eval="7">
        <choose>
         <fn name="contains">
          <varRef name="relative" slot="1"/>
          <str val="/"/>
         </fn>
         <fn name="count">
          <filter flags="b">
           <fn name="tokenize">
            <varRef name="relative" slot="1"/>
            <str val="/"/>
            <str val=""/>
           </fn>
           <vc op="eq" comp="CCC">
            <dot type="xs:string"/>
            <str val=".."/>
           </vc>
          </filter>
         </fn>
         <fn name="contains">
          <varRef name="relative" slot="1"/>
          <str val=".."/>
         </fn>
         <int val="1"/>
         <true/>
         <int val="0"/>
        </choose>
        <let line="777" var="slashes" as="xs:integer*" slot="4" eval="3">
         <choose>
          <fn name="contains">
           <varRef name="base" slot="0"/>
           <str val="/"/>
          </fn>
          <fn name="index-of">
           <fn name="string-to-codepoints">
            <varRef name="base" slot="0"/>
           </fn>
           <int val="47"/>
          </fn>
          <true/>
          <int val="0"/>
         </choose>
         <choose line="809">
          <compareToInt op="gt" val="0">
           <varRef name="parentCallCount" slot="3"/>
          </compareToInt>
          <fn line="813" name="concat">
           <fn name="substring">
            <varRef name="base" slot="0"/>
            <int val="1"/>
            <choose line="788">
             <and op="and">
              <vc op="ge" onEmpty="0" comp="CAVC">
               <fn name="count">
                <varRef name="slashes" slot="4"/>
               </fn>
               <varRef name="parentCallCount" slot="3"/>
              </vc>
              <compareToInt op="gt" val="0">
               <varRef name="parentCallCount" slot="3"/>
              </compareToInt>
             </and>
             <let line="789" var="vv:v0" as="xs:integer" slot="5" eval="13">
              <arith op="-" calc="i-i">
               <varRef name="parentCallCount" slot="3"/>
               <int val="1"/>
              </arith>
              <check card="1" diag="3|0|XTTE0570|parentSlash">
               <filter flags="p">
                <varRef name="slashes" slot="4"/>
                <arith op="-" calc="i-i">
                 <fn name="last"/>
                 <varRef name="vv:v0" slot="5"/>
                </arith>
               </filter>
              </check>
             </let>
             <true/>
             <check line="792" card="1" diag="3|0|XTTE0570|parentSlash">
              <lastOf>
               <varRef name="slashes" slot="4"/>
              </lastOf>
             </check>
            </choose>
           </fn>
           <fn name="replace">
            <varRef name="relative" slot="1"/>
            <str val="\.\./"/>
            <str val=""/>
            <str val=""/>
           </fn>
          </fn>
          <true/>
          <fn line="816" name="concat">
           <varRef name="base" slot="0"/>
           <str val="/"/>
           <varRef name="relative" slot="1"/>
          </fn>
         </choose>
        </let>
       </let>
      </choose>
      <str role="regex" val="(index\('([^']+)'\)|/\.$)"/>
      <str role="flags" val=""/>
      <let role="matching" line="828" var="match" as="xs:string" slot="6" eval="8">
       <fn name="regex-group">
        <int val="1"/>
       </fn>
       <choose line="830">
        <vc op="eq" onEmpty="0" comp="CCC">
         <varRef name="match" slot="6"/>
         <str val="/."/>
        </vc>
        <empty/>
        <true/>
        <cast line="832" as="xs:string" emptiable="1">
         <atomSing card="?" diag="2|0||cast as">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
           <check card="1" diag="0|0||ixsl:call">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
           </check>
           <str val="getRepeatIndex"/>
           <arrayBlock>
            <fn name="regex-group">
             <int val="2"/>
            </fn>
           </arrayBlock>
          </ifCall>
         </atomSing>
        </cast>
       </choose>
      </let>
      <fn role="nonMatching" line="837" name="normalize-space">
       <dot type="xs:string"/>
      </fn>
     </analyzeString>
    </check>
    <fn line="842" name="string-join">
     <varRef name="full-path-parsed-components" slot="2"/>
    </fn>
   </let>
  </function>
 </co>
 <co id="23" binds="">
  <function name="Q{http://saxonica.com/ns/forms-local}current-date" line="96" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:string" slots="0">
   <treat role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="97" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|today">
    <check card="1" diag="3|0|XTTE0570|today">
     <cvUntyped to="xs:string">
      <data>
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getCurrentDate"/>
        <arrayBlock/>
       </ifCall>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </function>
 </co>
 <co id="24" binds="">
  <template name="Q{}action-setindex" flags="os" line="4317" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="4318">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <ifCall line="4326" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="setRepeatIndex"/>
     <arrayBlock>
      <treat line="4320" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|repeatID">
       <check card="1" diag="3|0|XTTE0570|repeatID">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@repeat"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <treat line="4321" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="3|0|XTTE0570|new-index">
       <check card="1" diag="3|0|XTTE0570|new-index">
        <cvUntyped to="xs:integer">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@index"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </arrayBlock>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id="25" binds="">
  <template name="Q{}action-setfocus" flags="os" line="4301" module="saxon-xforms.xsl" slots="1">
   <param role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="4302" name="Q{}action-map" slot="0" flags="tr" as="map(*)">
    <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
     <check card="1" diag="8|0|XTTE0590|action-map">
      <supplied slot="0"/>
     </check>
    </treat>
   </param>
  </template>
 </co>
 <co id="26" binds="1 2 4 4 27 13 3 6 28">
  <template name="Q{}action-setvalue" flags="os" line="4049" module="saxon-xforms.xsl" slots="10">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="4050">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="4051" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="4052" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="4056" var="refz" as="xs:string" slot="3" eval="7">
     <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="6 7">
      <varRef name="nodeset" slot="2"/>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||xforms:resolveXPathStrings">
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@ref"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </ufCall>
     <let line="4058" var="instance-id" as="xs:string" slot="4" eval="7">
      <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="1" eval="6">
       <varRef name="refz" slot="3"/>
      </ufCall>
      <let line="4071" var="valuez" as="document-node()" slot="5" eval="7">
       <doc line="4073" validation="preserve">
        <choose>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <varRef name="action-map" slot="0"/>
          <str val="@value"/>
         </ifCall>
         <let line="4074" var="contexti" as="node()" slot="6" eval="8">
          <evaluate line="4075" as="node()" dxns="">
           <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="2" eval="6">
            <varRef name="nodeset" slot="2"/>
           </ufCall>
           <varRef role="cxt" name="instanceXML" slot="1"/>
           <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
            <varRef name="instanceXML" slot="1"/>
           </check>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
          <evaluate line="4078" dxns="">
           <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="7">
            <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:impose">
             <check card="1" diag="0|0||xforms:impose">
              <cvUntyped to="xs:string">
               <data>
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="action-map" slot="0"/>
                 <str val="@value"/>
                </ifCall>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </ufCall>
           <varRef role="cxt" name="contexti" slot="6"/>
           <varRef role="nsCxt" name="contexti" slot="6"/>
           <str role="sa" val="no"/>
           <map role="wp" size="0"/>
          </evaluate>
         </let>
         <ifCall line="4081" name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
          <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:contains">
           <dot flags="a"/>
          </treat>
          <str val="value"/>
         </ifCall>
         <ifCall line="4082" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="action-map" slot="0"/>
          <str val="value"/>
         </ifCall>
         <true/>
         <str val=""/>
        </choose>
       </doc>
       <sequence line="4092">
        <choose>
         <fn name="exists">
          <varRef name="refz" slot="3"/>
         </fn>
         <let line="4094" var="associated-form-control" as="node()?" slot="7" eval="7">
          <check card="?" diag="3|0|XTTE0570|associated-form-control">
           <slash>
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            <fn name="key">
             <str val="Q{http://saxon.sf.net/}kk101"/>
             <varRef name="refz" slot="3"/>
             <dot type="document-node()"/>
            </fn>
           </slash>
          </check>
          <choose line="4096">
           <fn name="exists">
            <varRef name="associated-form-control" slot="7"/>
           </fn>
           <sequence line="4097">
            <applyT mode="Q{}set-field" bSlot="4">
             <varRef role="select" name="associated-form-control" slot="7"/>
             <withParam name="Q{}value" flags="t" as="xs:string">
              <cast line="4098" as="xs:string" emptiable="0">
               <data>
                <varRef name="valuez" slot="5"/>
               </data>
              </cast>
             </withParam>
            </applyT>
            <ifCall line="4100" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="setUpdates"/>
             <arrayBlock>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}put" type="map(*)">
               <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:put">
                <check card="1" diag="0|0||map:put">
                 <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="getUpdates"/>
                  <arrayBlock/>
                 </ifCall>
                </check>
               </treat>
               <varRef name="refz" slot="3"/>
               <cast as="xs:string" emptiable="0">
                <data>
                 <varRef name="valuez" slot="5"/>
                </data>
               </cast>
              </ifCall>
             </arrayBlock>
            </ifCall>
           </sequence>
           <true/>
           <ifCall line="4103" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="setPendingUpdates"/>
            <arrayBlock>
             <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}put" type="map(*)">
              <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:put">
               <check card="1" diag="0|0||map:put">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                 <check card="1" diag="0|0||ixsl:call">
                  <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                 </check>
                 <str val="getPendingUpdates"/>
                 <arrayBlock/>
                </ifCall>
               </check>
              </treat>
              <varRef name="refz" slot="3"/>
              <cast as="xs:string" emptiable="0">
               <data>
                <varRef name="valuez" slot="5"/>
               </data>
              </cast>
             </ifCall>
            </arrayBlock>
           </ifCall>
          </choose>
         </let>
        </choose>
        <choose line="4109">
         <and op="and">
          <fn name="exists">
           <varRef name="refz" slot="3"/>
          </fn>
          <vc op="ne" onEmpty="1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <varRef name="refz" slot="3"/>
           <str val=""/>
          </vc>
         </and>
         <let line="4111" var="pendingUpdates" as="map(xs:string, xs:string)?" slot="8" eval="7">
          <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|pendingUpdates">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="getPendingUpdates"/>
            <arrayBlock/>
           </ifCall>
          </treat>
          <let line="4113" var="updatedInstanceXML" as="element()" slot="9" eval="7">
           <treat line="4114" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
            <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
             <applyT mode="Q{}form-check-initial" bSlot="5">
              <choose role="select" line="4062">
               <and op="and">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <varRef name="instance-id" slot="4"/>
                 <str val="saxon-forms-default"/>
                </vc>
                <fn name="exists">
                 <varRef name="instanceXML" slot="1"/>
                </fn>
               </and>
               <check line="4063" card="1" diag="3|0|XTTE0570|instanceXML2">
                <varRef name="instanceXML" slot="1"/>
               </check>
               <true/>
               <check line="4066" card="1" diag="3|0|XTTE0570|instanceXML2">
                <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="6" eval="6">
                 <varRef name="refz" slot="3"/>
                </ufCall>
               </check>
              </choose>
              <withParam name="Q{}instance-id" as="xs:string">
               <varRef line="4115" name="instance-id" slot="4"/>
              </withParam>
              <withParam name="Q{}pendingUpdates" flags="t" as="map(xs:string, xs:string)?">
               <varRef line="4116" name="pendingUpdates" slot="8"/>
              </withParam>
             </applyT>
            </check>
           </treat>
           <sequence line="4121">
            <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="7" eval="6 6">
             <varRef name="refz" slot="3"/>
             <varRef name="updatedInstanceXML" slot="9"/>
            </ufCall>
            <callT line="4122" name="refreshOutputs-JS" bSlot="8" flags="t"/>
           </sequence>
          </let>
         </let>
        </choose>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="29" binds="">
  <globalVariable name="Q{}default-submission-id" type="xs:string" line="65" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="saxon-forms-default-submission"/>
  </globalVariable>
 </co>
 <co id="16" binds="2 3 4 4 26 0 8 22 24 7 16">
  <template name="Q{}applyActions" flags="os" line="3338" module="saxon-xforms.xsl" slots="11">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3339">
    <param name="Q{}action-map" slot="0" flags="tr" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|action-map">
      <check card="1" diag="8|0|XTTE0590|action-map">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3340" name="Q{}instanceXML" slot="1" flags="t" as="element()?">
     <empty role="select"/>
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|instanceXML">
      <check card="?" diag="8|0|XTTE0590|instanceXML">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <param line="3341" name="Q{}nodeset" slot="2" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3343" var="ref" as="xs:string?" slot="3" eval="7">
     <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|ref">
      <check card="?" diag="3|0|XTTE0570|ref">
       <cvUntyped to="xs:string">
        <data>
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="action-map" slot="0"/>
          <str val="@ref"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line="3344" var="at" as="xs:string?" slot="4" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|at">
       <check card="?" diag="3|0|XTTE0570|at">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="action-map" slot="0"/>
           <str val="@at"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3357" var="ref-qualified" as="xs:string?" slot="5" eval="7">
       <choose>
        <and op="and">
         <fn name="exists">
          <varRef name="ref" slot="3"/>
         </fn>
         <gc op="!=" card="1:1" comp="CCC">
          <varRef name="ref" slot="3"/>
          <str val=""/>
         </gc>
        </and>
        <choose>
         <fn name="exists">
          <varRef name="at" slot="4"/>
         </fn>
         <fn name="concat">
          <varRef name="ref" slot="3"/>
          <str val="["/>
          <varRef name="at" slot="4"/>
          <str val="]"/>
         </fn>
         <true/>
         <varRef name="ref" slot="3"/>
        </choose>
       </choose>
       <let line="3361" var="instanceXML2" as="element()?" slot="6" eval="7">
        <choose line="3363">
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <ufCall line="3359" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="0" eval="7">
            <check card="1" diag="0|0||xforms:getInstanceId">
             <varRef name="ref" slot="3"/>
            </check>
           </ufCall>
           <str val="saxon-forms-default"/>
          </vc>
          <fn name="exists">
           <varRef name="instanceXML" slot="1"/>
          </fn>
         </and>
         <varRef line="3364" name="instanceXML" slot="1"/>
         <fn line="3366" name="exists">
          <varRef name="ref-qualified" slot="5"/>
         </fn>
         <ufCall line="3367" name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="1" eval="7">
          <check card="1" diag="0|0||xforms:getInstance-JS">
           <varRef name="ref-qualified" slot="5"/>
          </check>
         </ufCall>
        </choose>
        <let line="3375" var="context" as="node()?" slot="7" eval="7">
         <choose line="3377">
          <and op="and">
           <and op="and">
            <fn name="exists">
             <varRef name="ref-qualified" slot="5"/>
            </fn>
            <fn name="not">
             <gc op="=" card="1:1" comp="CCC">
              <varRef name="ref-qualified" slot="5"/>
              <str val=""/>
             </gc>
            </fn>
           </and>
           <fn name="exists">
            <varRef name="instanceXML2" slot="6"/>
           </fn>
          </and>
          <treat line="3378" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|context">
           <check card="?" diag="3|0|XTTE0570|context">
            <evaluate dxns="">
             <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="2" eval="7">
              <check card="1" diag="0|0||xforms:impose">
               <varRef name="ref-qualified" slot="5"/>
              </check>
             </ufCall>
             <varRef role="cxt" name="instanceXML2" slot="6"/>
             <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
              <varRef name="instanceXML2" slot="6"/>
             </check>
             <str role="sa" val="no"/>
             <map role="wp" size="0"/>
            </evaluate>
           </check>
          </treat>
         </choose>
         <let line="3385" var="ifVar" as="xs:string?" slot="8" eval="7">
          <choose line="715">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <varRef line="3385" name="action-map" slot="0"/>
            <str val="@if"/>
           </ifCall>
           <treat line="716" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
            <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
             <cvUntyped to="xs:string">
              <data>
               <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                <varRef line="3385" name="action-map" slot="0"/>
                <str val="@if"/>
               </ifCall>
              </data>
             </cvUntyped>
            </check>
           </treat>
          </choose>
          <let line="3389" var="ifExecuted" as="xs:boolean" slot="9" eval="7">
           <choose line="3391">
            <and op="and">
             <fn name="exists">
              <varRef name="ifVar" slot="8"/>
             </fn>
             <fn name="exists">
              <varRef name="context" slot="7"/>
             </fn>
            </and>
            <treat line="3392" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|ifExecuted">
             <check card="1" diag="3|0|XTTE0570|ifExecuted">
              <cvUntyped to="xs:boolean">
               <data>
                <evaluate dxns="">
                 <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="7">
                  <check card="1" diag="0|0||xforms:impose">
                   <varRef name="ifVar" slot="8"/>
                  </check>
                 </ufCall>
                 <varRef role="cxt" name="context" slot="7"/>
                 <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
                  <varRef name="context" slot="7"/>
                 </check>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <true/>
            <true/>
           </choose>
           <choose line="3400">
            <varRef name="ifExecuted" slot="9"/>
            <let line="3401" var="action-name" as="xs:string" slot="10" eval="7">
             <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|action-name">
              <check card="1" diag="3|0|XTTE0570|action-name">
               <cvUntyped to="xs:string">
                <data>
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="action-map" slot="0"/>
                  <str val="name"/>
                 </ifCall>
                </data>
               </cvUntyped>
              </check>
             </treat>
             <sequence line="3404">
              <choose>
               <vc op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="action"/>
               </vc>
               <empty/>
               <vc line="3407" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="setvalue"/>
               </vc>
               <callT line="3408" name="action-setvalue" bSlot="4">
                <withParam name="Q{}nodeset" flags="t" as="xs:string">
                 <check line="3409" card="1" diag="8|0|XTTE0590|nodeset">
                  <varRef name="ref" slot="3"/>
                 </check>
                </withParam>
                <withParam name="Q{}instanceXML" flags="t" as="element()">
                 <check line="3410" card="1" diag="8|0|XTTE0590|instanceXML">
                  <varRef name="instanceXML2" slot="6"/>
                 </check>
                </withParam>
               </callT>
               <vc line="3413" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="insert"/>
               </vc>
               <callT line="3414" name="action-insert" bSlot="5">
                <withParam name="Q{}nodeset" flags="t" as="xs:string">
                 <check line="3415" card="1" diag="8|0|XTTE0590|nodeset">
                  <varRef name="ref-qualified" slot="5"/>
                 </check>
                </withParam>
                <withParam name="Q{}instanceXML" flags="t" as="element()">
                 <check line="3416" card="1" diag="8|0|XTTE0590|instanceXML">
                  <varRef name="instanceXML2" slot="6"/>
                 </check>
                </withParam>
               </callT>
               <vc line="3419" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="delete"/>
               </vc>
               <callT line="3420" name="action-delete" bSlot="6">
                <withParam name="Q{}nodeset" flags="t" as="xs:string">
                 <check line="3421" card="1" diag="8|0|XTTE0590|nodeset">
                  <varRef name="ref-qualified" slot="5"/>
                 </check>
                </withParam>
                <withParam name="Q{}instanceXML" flags="t" as="element()">
                 <check line="3422" card="1" diag="8|0|XTTE0590|instanceXML">
                  <varRef name="instanceXML2" slot="6"/>
                 </check>
                </withParam>
               </callT>
               <vc line="3425" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="message"/>
               </vc>
               <callT line="3426" name="action-message" bSlot="7"/>
               <vc line="3428" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="setindex"/>
               </vc>
               <callT line="3429" name="action-setindex" bSlot="8"/>
               <vc line="3431" op="eq" onEmpty="0" comp="CCC">
                <varRef name="action-name" slot="10"/>
                <str val="rebuild"/>
               </vc>
               <callT line="3432" name="xforms-rebuild" bSlot="9"/>
               <true/>
               <message line="3435">
                <sequence role="select">
                 <valueOf>
                  <str val="[applyActions] action '"/>
                 </valueOf>
                 <valueOf>
                  <varRef name="action-name" slot="10"/>
                 </valueOf>
                 <valueOf>
                  <str val="' not yet handled!"/>
                 </valueOf>
                </sequence>
                <str role="terminate" val="no"/>
                <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
               </message>
              </choose>
              <forEach line="3444">
               <ifCall line="3440" name="Q{http://www.w3.org/2005/xpath-functions/array}flatten" type="item()*">
                <treat as="array(map(*))" jsTest="function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isArray(item) &amp;&amp; SaxonJS.U.ForArray(item.value).every(function(seq){return c(seq.length) &amp;&amp; SaxonJS.U.ForArray(seq).every(v)});" diag="3|0|XTTE0570|nested-actions-array">
                 <check card="?" diag="3|0|XTTE0570|nested-actions-array">
                  <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                   <varRef name="action-map" slot="0"/>
                   <str val="nested-actions"/>
                  </ifCall>
                 </check>
                </treat>
               </ifCall>
               <callT line="3445" name="applyActions" bSlot="10">
                <withParam name="Q{}action-map" flags="t" as="item()">
                 <dot line="3446"/>
                </withParam>
               </callT>
              </forEach>
             </sequence>
            </let>
           </choose>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="5" binds="5">
  <mode name="Q{}insert-node" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="3" flags="s" line="1771" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1772">
     <param name="Q{}insert-node-location" slot="0" flags="ti" as="node()">
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|insert-node-location">
       <check card="1" diag="8|0|XTTE0590|insert-node-location">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="1773" name="Q{}node-to-insert" slot="1" flags="ti" as="node()">
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|node-to-insert">
       <check card="1" diag="8|0|XTTE0590|node-to-insert">
        <supplied slot="1"/>
       </check>
      </treat>
     </param>
     <param line="1774" name="Q{}position-relative" slot="2" flags="t" as="xs:string?">
      <str role="select" val="after"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position-relative">
       <check card="?" diag="8|0|XTTE0590|position-relative">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="2"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="1777">
      <and op="and">
       <is op="is">
        <dot type="element()"/>
        <varRef name="insert-node-location" slot="0"/>
       </is>
       <gc op="=" card="1:1" comp="CCC">
        <varRef name="position-relative" slot="2"/>
        <str val="before"/>
       </gc>
      </and>
      <copyOf line="1779" flags="vc">
       <varRef name="node-to-insert" slot="1"/>
      </copyOf>
     </choose>
     <copy line="1782" flags="cin">
      <sequence role="content">
       <copyOf flags="vc">
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </copyOf>
       <applyT line="1783" mode="Q{}insert-node" bSlot="0">
        <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </applyT>
      </sequence>
     </copy>
     <choose line="1785">
      <and op="and">
       <is op="is">
        <dot type="element()"/>
        <varRef name="insert-node-location" slot="0"/>
       </is>
       <gc op="=" card="1:1" comp="CCC">
        <varRef name="position-relative" slot="2"/>
        <str val="after"/>
       </gc>
      </and>
      <copyOf line="1786" flags="vc">
       <varRef name="node-to-insert" slot="1"/>
      </copyOf>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="30" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}hasClass" line="2880" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:boolean" slots="2">
   <arg name="element" as="element()"/>
   <arg name="string" as="xs:string"/>
   <gc role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2884" op="=" card="N:1" comp="CCC">
    <fn name="tokenize">
     <cvUntyped to="xs:string">
      <data>
       <slash simple="1">
        <varRef name="element" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
       </slash>
      </data>
     </cvUntyped>
    </fn>
    <varRef line="2887" name="string" slot="1"/>
   </gc>
  </function>
 </co>
 <co id="31" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-instance-id" type="item()*" line="54" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="xforms-jinstance"/>
  </globalParam>
 </co>
 <co id="32" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getIfStatement" line="712" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:string?" slots="1">
   <arg name="map" as="map(*)"/>
   <choose role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="715">
    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
     <varRef name="map" slot="0"/>
     <str val="@if"/>
    </ifCall>
    <treat line="716" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getIfStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getIfStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="map" slot="0"/>
         <str val="@if"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </choose>
  </function>
 </co>
 <co id="33" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getClass" line="2901" module="saxon-xforms.xsl" eval="7" flags="pU" as="attribute(Q{}class)?" slots="3">
   <arg name="element" as="element()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2904" var="class" as="xs:string?" slot="1" eval="7">
    <choose line="2905">
     <fn name="exists">
      <slash simple="1">
       <varRef name="element" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
      </slash>
     </fn>
     <cvUntyped line="2906" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <slash simple="1">
           <varRef name="element" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
          </slash>
         </data>
        </convert>
       </fn>
      </cast>
     </cvUntyped>
    </choose>
    <let line="2909" var="class-mod" as="xs:string?" slot="2" eval="7">
     <choose line="2911">
      <fn name="exists">
       <slash simple="1">
        <varRef name="element" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
       </slash>
      </fn>
      <cvUntyped line="2912" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <sequence>
          <varRef name="class" slot="1"/>
          <str val="incremental"/>
         </sequence>
         <str val=" "/>
        </fn>
       </cast>
      </cvUntyped>
      <true/>
      <varRef line="2915" name="class" slot="1"/>
     </choose>
     <choose line="2919">
      <fn name="exists">
       <varRef name="class-mod" slot="2"/>
      </fn>
      <treat line="2920" as="attribute(Q{}class)" jsTest="return item.name==='class'" diag="5|0|XTTE0780|xforms:getClass">
       <att name="class">
        <varRef name="class-mod" slot="2"/>
       </att>
      </treat>
     </choose>
    </let>
   </let>
  </function>
 </co>
 <co id="28" binds="34 20 20 4">
  <template name="Q{}refreshOutputs-JS" flags="os" line="3208" module="saxon-xforms.xsl" slots="7">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3215" var="output-keys" as="item()?" slot="0" eval="8">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="getOutputKeys"/>
     <arrayBlock/>
    </ifCall>
    <forEach line="3217">
     <varRef name="output-keys" slot="0"/>
     <let line="3218" var="this-key" as="xs:string" slot="1" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|this-key">
       <check card="1" diag="3|0|XTTE0570|this-key">
        <cvUntyped to="xs:string">
         <data>
          <dot/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3219" var="this-output" as="map(*)" slot="2" eval="7">
       <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|this-output">
        <check card="1" diag="3|0|XTTE0570|this-output">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
          <check card="1" diag="0|0||ixsl:call">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
          </check>
          <str val="getOutput"/>
          <arrayBlock>
           <varRef name="this-key" slot="1"/>
          </arrayBlock>
         </ifCall>
        </check>
       </treat>
       <let line="3250" var="contexti" as="element()?" slot="3" eval="7">
        <ufCall line="3251" name="Q{http://www.w3.org/2002/xforms}instance" tailCall="false" bSlot="0" eval="7">
         <check line="3238" card="1" diag="3|0|XTTE0570|this-instance-id">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <choose>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
             <varRef name="this-output" slot="2"/>
             <str val="@ref"/>
            </ifCall>
            <ufCall line="3240" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="1" eval="7">
             <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:getInstanceMap">
              <check card="1" diag="0|0||xforms:getInstanceMap">
               <cvUntyped to="xs:string">
                <data>
                 <ifCall line="3239" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="this-output" slot="2"/>
                  <str val="@ref"/>
                 </ifCall>
                </data>
               </cvUntyped>
              </check>
             </treat>
            </ufCall>
            <true/>
            <ufCall line="3243" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="2" eval="0">
             <str val="saxon-forms-default"/>
            </ufCall>
           </choose>
           <str val="instance-id"/>
          </ifCall>
         </check>
        </ufCall>
        <let line="3258" var="namespace-context-item" as="element()" slot="4" eval="7">
         <choose>
          <fn name="exists">
           <varRef name="contexti" slot="3"/>
          </fn>
          <check card="1" diag="3|0|XTTE0570|namespace-context-item">
           <varRef name="contexti" slot="3"/>
          </check>
          <true/>
          <treat as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|namespace-context-item">
           <check card="1" diag="3|0|XTTE0570|namespace-context-item">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="getXForm"/>
             <arrayBlock/>
            </ifCall>
           </check>
          </treat>
         </choose>
         <let line="3260" var="value" as="xs:string" slot="5" eval="7">
          <treat line="3261" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|value">
           <check card="1" diag="3|0|XTTE0570|value">
            <cvUntyped to="xs:string">
             <data>
              <evaluate dxns="">
               <ufCall role="xpath" line="3222" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="4">
                <choose>
                 <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="this-output" slot="2"/>
                  <str val="@value"/>
                 </ifCall>
                 <treat line="3223" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|xpath">
                  <check card="1" diag="3|0|XTTE0570|xpath">
                   <cvUntyped to="xs:string">
                    <data>
                     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                      <varRef name="this-output" slot="2"/>
                      <str val="@value"/>
                     </ifCall>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <ifCall line="3225" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                  <varRef name="this-output" slot="2"/>
                  <str val="@ref"/>
                 </ifCall>
                 <treat line="3226" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|xpath">
                  <check card="1" diag="3|0|XTTE0570|xpath">
                   <cvUntyped to="xs:string">
                    <data>
                     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                      <varRef name="this-output" slot="2"/>
                      <str val="@ref"/>
                     </ifCall>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <true/>
                 <str val=""/>
                </choose>
               </ufCall>
               <varRef role="cxt" name="contexti" slot="3"/>
               <varRef role="nsCxt" name="namespace-context-item" slot="4"/>
               <str role="sa" val="no"/>
               <map role="wp" size="0"/>
              </evaluate>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <let line="3264" var="associated-form-control" as="node()?" slot="6" eval="7">
           <check card="?" diag="3|0|XTTE0570|associated-form-control">
            <slash>
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
             <fn name="key">
              <str val="Q{http://saxon.sf.net/}kk102"/>
              <varRef name="this-key" slot="1"/>
              <dot type="document-node()"/>
             </fn>
            </slash>
           </check>
           <choose line="3267">
            <fn name="exists">
             <varRef name="associated-form-control" slot="6"/>
            </fn>
            <resultDoc line="3268" global="#&#xD;&#xA;#Sun Nov 18 10:50:05 GMT 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Sun Nov 18 10:50:05 GMT 2018&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
             <fn role="href" name="concat">
              <str val="#"/>
              <varRef name="this-key" slot="1"/>
             </fn>
             <valueOf role="content" line="3269">
              <varRef name="value" slot="5"/>
             </valueOf>
            </resultDoc>
           </choose>
          </let>
         </let>
        </let>
       </let>
      </let>
     </let>
    </forEach>
   </let>
  </template>
 </co>
 <co id="18" binds="3">
  <function name="Q{http://www.w3.org/2002/xforms}checkRelevantFields" line="581" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="13">
   <arg name="refElement" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="584" var="pendingUpdatesi" as="map(xs:string, xs:string)?" slot="1" eval="7">
    <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|pendingUpdatesi">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
      <check card="1" diag="0|0||ixsl:call">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
      </check>
      <str val="getPendingUpdates"/>
      <arrayBlock/>
     </ifCall>
    </treat>
    <let line="587" var="updatesi" as="map(xs:string, xs:string)?" slot="2" eval="7">
     <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|updatesi">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getUpdates"/>
       <arrayBlock/>
      </ifCall>
     </treat>
     <let line="590" var="relevantMap" as="map(xs:string, xs:string)" slot="3" eval="7">
      <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|relevantMap">
       <check card="1" diag="3|0|XTTE0570|relevantMap">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="getRelevantMap"/>
         <arrayBlock/>
        </ifCall>
       </check>
      </treat>
      <let line="591" var="mapKeys" as="xs:anyAtomicType*" slot="4" eval="3">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
        <varRef name="relevantMap" slot="3"/>
       </ifCall>
       <sequence line="621">
        <forEach>
         <sequence line="594">
          <forEach>
           <varRef name="mapKeys" slot="4"/>
           <choose line="595">
            <fn name="matches">
             <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
              <varRef name="relevantMap" slot="3"/>
              <dot type="xs:anyAtomicType"/>
             </ifCall>
             <varRef name="refElement" slot="0"/>
             <str val=""/>
            </fn>
            <dot line="596" type="xs:anyAtomicType"/>
           </choose>
          </forEach>
          <forEach line="585">
           <choose>
            <fn name="exists">
             <varRef name="pendingUpdatesi" slot="1"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
             <check card="1" diag="0|0||map:keys">
              <varRef name="pendingUpdatesi" slot="1"/>
             </check>
            </ifCall>
           </choose>
           <let line="602" var="keyi" as="xs:string?" slot="5" eval="7">
            <lastOf>
             <fn name="tokenize">
              <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:tokenize">
               <cvUntyped to="xs:string">
                <dot type="xs:anyAtomicType"/>
               </cvUntyped>
              </treat>
              <str val="/"/>
              <str val=""/>
             </fn>
            </lastOf>
            <let line="604" var="vv:v0" as="xs:string" slot="6" eval="13">
             <check card="1" diag="0|1||fn:matches">
              <varRef name="keyi" slot="5"/>
             </check>
             <forEach line="603">
              <varRef name="mapKeys" slot="4"/>
              <choose line="604">
               <fn name="matches">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="relevantMap" slot="3"/>
                 <dot type="xs:anyAtomicType"/>
                </ifCall>
                <varRef name="vv:v0" slot="6"/>
                <str val=""/>
               </fn>
               <dot line="605" type="xs:anyAtomicType"/>
              </choose>
             </forEach>
            </let>
           </let>
          </forEach>
          <forEach line="588">
           <choose>
            <fn name="exists">
             <varRef name="updatesi" slot="2"/>
            </fn>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
             <check card="1" diag="0|0||map:keys">
              <varRef name="updatesi" slot="2"/>
             </check>
            </ifCall>
           </choose>
           <let line="611" var="keyi" as="xs:string?" slot="7" eval="7">
            <lastOf>
             <fn name="tokenize">
              <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:tokenize">
               <cvUntyped to="xs:string">
                <dot type="xs:anyAtomicType"/>
               </cvUntyped>
              </treat>
              <str val="/"/>
              <str val=""/>
             </fn>
            </lastOf>
            <let line="613" var="vv:v1" as="xs:string" slot="8" eval="13">
             <check card="1" diag="0|1||fn:matches">
              <varRef name="keyi" slot="7"/>
             </check>
             <forEach line="612">
              <varRef name="mapKeys" slot="4"/>
              <choose line="613">
               <fn name="matches">
                <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                 <varRef name="relevantMap" slot="3"/>
                 <dot type="xs:anyAtomicType"/>
                </ifCall>
                <varRef name="vv:v1" slot="8"/>
                <str val=""/>
               </fn>
               <dot line="614" type="xs:anyAtomicType"/>
              </choose>
             </forEach>
            </let>
           </let>
          </forEach>
         </sequence>
         <let line="622" var="keyi" as="xs:anyAtomicType" slot="9" eval="7">
          <dot type="xs:anyAtomicType"/>
          <let line="623" var="context" as="node()*" slot="10" eval="8">
           <slash>
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            <fn name="key">
             <str val="Q{http://saxon.sf.net/}kk101"/>
             <varRef name="keyi" slot="9"/>
             <dot type="document-node()"/>
            </fn>
           </slash>
           <let line="624" var="updatedInstanceXML4" as="element()?" slot="11" eval="7">
            <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
             <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:getInstance-JS">
              <cvUntyped to="xs:string">
               <varRef name="keyi" slot="9"/>
              </cvUntyped>
             </treat>
            </ufCall>
            <let line="626" var="relevantCheck" as="xs:boolean" slot="12" eval="7">
             <treat line="627" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantCheck">
              <check card="1" diag="3|0|XTTE0570|relevantCheck">
               <cvUntyped to="xs:boolean">
                <data>
                 <evaluate dxns="">
                  <fn role="xpath" name="concat">
                   <dot type="xs:anyAtomicType"/>
                   <str val="/"/>
                   <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                    <varRef name="relevantMap" slot="3"/>
                    <dot type="xs:anyAtomicType"/>
                   </ifCall>
                  </fn>
                  <varRef role="cxt" name="updatedInstanceXML4" slot="11"/>
                  <check role="nsCxt" card="1" diag="4|0|XTTE3170|xsl:evaluate/namespace-context">
                   <varRef name="updatedInstanceXML4" slot="11"/>
                  </check>
                  <str role="sa" val="no"/>
                  <map role="wp" size="0"/>
                 </evaluate>
                </data>
               </cvUntyped>
              </check>
             </treat>
             <choose line="630">
              <varRef name="relevantCheck" slot="12"/>
              <ifCall line="633" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
               <str val="style.display"/>
               <str val="inline"/>
               <check card="1" diag="0|2||ixsl:set-property">
                <conditionalSort>
                 <fn name="exists">
                  <tail start="2">
                   <varRef name="context" slot="10"/>
                  </tail>
                 </fn>
                 <docOrder intra="1">
                  <slash>
                   <varRef name="context" slot="10"/>
                   <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
                  </slash>
                 </docOrder>
                </conditionalSort>
               </check>
              </ifCall>
              <true/>
              <ifCall line="636" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
               <str val="style.display"/>
               <str val="none"/>
               <check card="1" diag="0|2||ixsl:set-property">
                <conditionalSort>
                 <fn name="exists">
                  <tail start="2">
                   <varRef name="context" slot="10"/>
                  </tail>
                 </fn>
                 <docOrder intra="1">
                  <slash>
                   <varRef name="context" slot="10"/>
                   <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
                  </slash>
                 </docOrder>
                </conditionalSort>
               </check>
              </ifCall>
             </choose>
            </let>
           </let>
          </let>
         </let>
        </forEach>
        <ifCall line="641" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="clearPendingUpdates"/>
         <arrayBlock/>
        </ifCall>
        <ifCall line="642" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="clearUpdates"/>
         <arrayBlock/>
        </ifCall>
       </sequence>
      </let>
     </let>
    </let>
   </let>
  </function>
 </co>
 <co id="35" vis="PUBLIC" binds="">
  <globalParam name="Q{}xform-html-id" type="xs:string" line="58" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="xForm"/>
  </globalParam>
 </co>
 <co id="36" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}random" line="86" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:double" slots="0">
   <check role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="87" card="1" diag="3|0|XTTE0570|randomNumber">
    <convert from="xs:anyAtomicType" to="xs:double" flags="p">
     <cvUntyped to="xs:double">
      <data>
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="Math.random"/>
        <arrayBlock/>
       </ifCall>
      </data>
     </cvUntyped>
    </convert>
   </check>
  </function>
 </co>
 <co id="17" binds="3 37 3 28 38">
  <template name="Q{}xforms-recalculate" flags="os" line="3771" module="saxon-xforms.xsl" slots="3">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3772" var="instance-keys" as="item()?" slot="0" eval="8">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="getInstanceKeys"/>
     <arrayBlock/>
    </ifCall>
    <forEach line="3773">
     <varRef name="instance-keys" slot="0"/>
     <let line="3774" var="refz" as="xs:string" slot="1" eval="8">
      <fn name="concat">
       <str val="instance('"/>
       <atomSing card="?" diag="0|1||fn:concat">
        <dot/>
       </atomSing>
       <str val="')/"/>
      </fn>
      <sequence line="3775">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <atomSing diag="0|0||map:entry">
         <dot/>
        </atomSing>
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="6">
         <varRef name="refz" slot="1"/>
        </ufCall>
       </ifCall>
       <let line="3778" var="updatedInstanceXML" as="element()" slot="2" eval="7">
        <treat line="3779" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
         <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
          <applyT mode="Q{}binding-calculation-initial" bSlot="1">
           <check role="select" line="3777" card="1" diag="3|0|XTTE0570|instanceXML">
            <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="2" eval="6">
             <varRef name="refz" slot="1"/>
            </ufCall>
           </check>
           <withParam name="Q{}instance-id" as="item()">
            <dot line="3780"/>
           </withParam>
          </applyT>
         </check>
        </treat>
        <sequence line="3786">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
          <check card="1" diag="0|0||ixsl:call">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
          </check>
          <str val="setInstance"/>
          <arrayBlock>
           <dot/>
           <varRef name="updatedInstanceXML" slot="2"/>
          </arrayBlock>
         </ifCall>
         <callT line="3787" name="refreshOutputs-JS" bSlot="3"/>
         <callT line="3788" name="refreshElementsUsingIndexFunction-JS" bSlot="4" flags="t"/>
        </sequence>
       </let>
      </sequence>
     </let>
    </forEach>
   </let>
  </template>
 </co>
 <co id="39" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-file" type="xs:string?" line="60" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <empty/>
  </globalParam>
 </co>
 <co id="40" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations" line="2860" module="saxon-xforms.xsl" eval="7" flags="pU" as="element()" slots="1">
   <arg name="this" as="element()"/>
   <compElem role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2862">
    <fn role="name" name="name">
     <varRef name="this" slot="0"/>
    </fn>
    <sequence role="content" line="2863">
     <namespace flags="l">
      <str role="name" val="xforms"/>
      <str role="select" val="http://www.w3.org/2002/xforms"/>
     </namespace>
     <forEach line="2864">
      <filter flags="b">
       <filter flags="b">
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <fn name="boolean">
         <fn name="namespace-uri">
          <dot type="element()"/>
         </fn>
        </fn>
       </filter>
       <fn name="not">
        <gc op="=" card="N:1" comp="CCC">
         <sequence>
          <slash>
           <fn name="reverse">
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </fn>
           <fn name="namespace-uri">
            <dot type="element()"/>
           </fn>
          </slash>
          <slash>
           <fn name="reverse">
            <axis name="preceding" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </fn>
           <fn name="namespace-uri">
            <dot type="element()"/>
           </fn>
          </slash>
         </sequence>
         <fn name="namespace-uri">
          <dot type="element()"/>
         </fn>
        </gc>
       </fn>
      </filter>
      <namespace line="2867" flags="l">
       <fn role="name" line="2866" name="substring-before">
        <fn name="name">
         <dot type="element()"/>
        </fn>
        <str val=":"/>
       </fn>
       <convert role="select" from="xs:anyURI" to="xs:string">
        <fn line="2865" name="namespace-uri">
         <dot type="element()"/>
        </fn>
       </convert>
      </namespace>
     </forEach>
     <copyOf line="2869" flags="vc">
      <sequence>
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </slash>
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </slash>
      </sequence>
     </copyOf>
    </sequence>
   </compElem>
  </function>
 </co>
 <co id="41" binds="3 34 13 42 4 43 16">
  <template name="Q{}xforms-submit" flags="os" line="3856" module="saxon-xforms.xsl" slots="15">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3857">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="3859" var="submission" as="map(*)" slot="1" eval="7">
     <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|submission">
      <check card="1" diag="3|0|XTTE0570|submission">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getSubmission"/>
        <arrayBlock>
         <fn name="string">
          <slash simple="1">
           <varRef name="form-control" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
          </slash>
         </fn>
        </arrayBlock>
       </ifCall>
      </check>
     </treat>
     <let line="3860" var="actions" as="map(*)?" slot="2" eval="7">
      <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="getAction"/>
        <arrayBlock>
         <fn name="string">
          <slash simple="1">
           <varRef name="form-control" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
          </slash>
         </fn>
        </arrayBlock>
       </ifCall>
      </treat>
      <sequence line="3862">
       <message>
        <sequence role="select">
         <valueOf>
          <str val="[xforms-submit] Submitting: "/>
         </valueOf>
         <valueOf>
          <fn name="serialize">
           <varRef name="submission" slot="1"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
       <let line="3864" var="refi" as="xs:string?" slot="3" eval="7">
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
         <check card="?" diag="3|0|XTTE0570|refi">
          <cvUntyped to="xs:string">
           <data>
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
             <varRef name="submission" slot="1"/>
             <str val="@ref"/>
            </ifCall>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <let line="3866" var="instance-id" as="xs:string" slot="4" eval="7">
         <choose line="3868">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="submission" slot="1"/>
           <str val="@instance"/>
          </ifCall>
          <treat line="3869" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|instance-id">
           <check card="1" diag="3|0|XTTE0570|instance-id">
            <cvUntyped to="xs:string">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <varRef name="submission" slot="1"/>
               <str val="@instance"/>
              </ifCall>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <true/>
          <str val="saxon-forms-default"/>
         </choose>
         <let line="3880" var="instanceXML" as="element()" slot="5" eval="7">
          <choose>
           <varRef name="refi" slot="3"/>
           <check card="1" diag="3|0|XTTE0570|instanceXML">
            <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
             <check card="1" diag="0|0||xforms:getInstance-JS">
              <varRef name="refi" slot="3"/>
             </check>
            </ufCall>
           </check>
           <true/>
           <check card="1" diag="3|0|XTTE0570|instanceXML">
            <ufCall name="Q{http://www.w3.org/2002/xforms}instance" tailCall="false" bSlot="1" eval="6">
             <varRef name="instance-id" slot="4"/>
            </ufCall>
           </check>
          </choose>
          <let line="3882" var="updatedInstanceXML" as="element()" slot="6" eval="7">
           <treat line="3883" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
            <check card="1" diag="3|0|XTTE0570|updatedInstanceXML">
             <applyT mode="Q{}form-check-initial" bSlot="2">
              <varRef role="select" name="instanceXML" slot="5"/>
              <withParam name="Q{}instance-id" as="xs:string">
               <varRef line="3884" name="instance-id" slot="4"/>
              </withParam>
             </applyT>
            </check>
           </treat>
           <let line="3888" var="required-fieldsi" as="element()*" slot="7" eval="8">
            <filter flags="b">
             <slash simple="1">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
              <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <fn name="exists">
              <axis name="attribute" nodeTest="attribute(Q{}data-required)" jsTest="return item.name==='data-required'"/>
             </fn>
            </filter>
            <let line="3890" var="required-fields-check" as="element()*" slot="8" eval="3">
             <ufCall name="Q{http://www.w3.org/2002/xforms}check-required-fields" tailCall="false" bSlot="3" eval="6">
              <varRef name="updatedInstanceXML" slot="6"/>
             </ufCall>
             <choose line="3894">
              <fn name="empty">
               <varRef name="required-fields-check" slot="8"/>
              </fn>
              <let line="3895" var="requestBodyXML" as="element()" slot="9" eval="7">
               <choose line="3897">
                <varRef name="refi" slot="3"/>
                <treat line="3898" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|requestBodyXML">
                 <check card="1" diag="3|0|XTTE0570|requestBodyXML">
                  <evaluate dxns="">
                   <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="4" eval="7">
                    <check card="1" diag="0|0||xforms:impose">
                     <varRef name="refi" slot="3"/>
                    </check>
                   </ufCall>
                   <varRef role="cxt" name="instanceXML" slot="5"/>
                   <varRef role="nsCxt" name="instanceXML" slot="5"/>
                   <str role="sa" val="no"/>
                   <map role="wp" size="0"/>
                  </evaluate>
                 </check>
                </treat>
                <true/>
                <varRef line="3901" name="instanceXML" slot="5"/>
               </choose>
               <let line="3915" var="method" as="xs:string" slot="10" eval="7">
                <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|method">
                 <check card="1" diag="3|0|XTTE0570|method">
                  <cvUntyped to="xs:string">
                   <data>
                    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                     <varRef name="submission" slot="1"/>
                     <str val="@method"/>
                    </ifCall>
                   </data>
                  </cvUntyped>
                 </check>
                </treat>
                <let line="3917" var="serialization" as="xs:string?" slot="11" eval="7">
                 <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|serialization">
                  <check card="?" diag="3|0|XTTE0570|serialization">
                   <cvUntyped to="xs:string">
                    <data>
                     <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                      <varRef name="submission" slot="1"/>
                      <str val="@serialization"/>
                     </ifCall>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <let line="3919" var="query-parameters" as="xs:string?" slot="12" eval="7">
                  <choose line="3920">
                   <and op="and">
                    <fn name="exists">
                     <varRef name="serialization" slot="11"/>
                    </fn>
                    <gc op="=" card="1:1" comp="CCC">
                     <varRef name="serialization" slot="11"/>
                     <str val="application/x-www-form-urlencoded"/>
                    </gc>
                   </and>
                   <fn line="3928" name="string-join">
                    <forEach line="3922">
                     <slash simple="1">
                      <varRef name="requestBodyXML" slot="9"/>
                      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                     </slash>
                     <fn line="3923" name="concat">
                      <fn name="name">
                       <dot type="element()"/>
                      </fn>
                      <str val="="/>
                      <fn name="string">
                       <dot type="element()"/>
                      </fn>
                     </fn>
                    </forEach>
                    <str val="&amp;"/>
                   </fn>
                  </choose>
                  <let line="3932" var="href-base" as="xs:string" slot="13" eval="7">
                   <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|href-base">
                    <check card="1" diag="3|0|XTTE0570|href-base">
                     <cvUntyped to="xs:string">
                      <data>
                       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                        <varRef name="submission" slot="1"/>
                        <str val="@resource"/>
                       </ifCall>
                      </data>
                     </cvUntyped>
                    </check>
                   </treat>
                   <sequence line="3963">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}schedule-action" type="item()*">
                     <int val="0"/>
                     <empty/>
                     <callT name="HTTPsubmit" bSlot="5">
                      <withParam name="Q{}instance-id" flags="c" as="xs:string">
                       <varRef line="3964" name="instance-id" slot="4"/>
                      </withParam>
                      <withParam name="Q{}targetref" flags="c" as="xs:string?">
                       <treat line="3965" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|targetref">
                        <check card="?" diag="8|0|XTTE0590|targetref">
                         <cvUntyped to="xs:string">
                          <data>
                           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                            <varRef name="submission" slot="1"/>
                            <str val="@targetref"/>
                           </ifCall>
                          </data>
                         </cvUntyped>
                        </check>
                       </treat>
                      </withParam>
                      <withParam name="Q{}replace" flags="c" as="xs:string?">
                       <treat line="3966" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|replace">
                        <check card="?" diag="8|0|XTTE0590|replace">
                         <cvUntyped to="xs:string">
                          <data>
                           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                            <varRef name="submission" slot="1"/>
                            <str val="@replace"/>
                           </ifCall>
                          </data>
                         </cvUntyped>
                        </check>
                       </treat>
                      </withParam>
                     </callT>
                     <ifCall line="3950" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                      <sequence>
                       <choose>
                        <vc op="ne" onEmpty="1" comp="CCC">
                         <fn name="upper-case">
                          <varRef name="method" slot="10"/>
                         </fn>
                         <str val="GET"/>
                        </vc>
                        <ifCall line="3951" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                         <str val="body"/>
                         <doc line="3911" validation="preserve">
                          <doc flags="l">
                           <varRef name="requestBodyXML" slot="9"/>
                          </doc>
                         </doc>
                        </ifCall>
                       </choose>
                       <ifCall line="3953" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                        <str val="method"/>
                        <varRef name="method" slot="10"/>
                       </ifCall>
                       <ifCall line="3954" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                        <str val="href"/>
                        <choose line="3936">
                         <fn name="exists">
                          <varRef name="query-parameters" slot="12"/>
                         </fn>
                         <fn line="3937" name="concat">
                          <varRef name="href-base" slot="13"/>
                          <str val="?"/>
                          <varRef name="query-parameters" slot="12"/>
                         </fn>
                         <true/>
                         <varRef line="3940" name="href-base" slot="13"/>
                        </choose>
                       </ifCall>
                       <ifCall line="3955" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                        <str val="media-type"/>
                        <treat line="3945" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|mediatype">
                         <check card="1" diag="3|0|XTTE0570|mediatype">
                          <cvUntyped to="xs:string">
                           <data>
                            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                             <varRef name="submission" slot="1"/>
                             <str val="@mediatype"/>
                            </ifCall>
                           </data>
                          </cvUntyped>
                         </check>
                        </treat>
                       </ifCall>
                      </sequence>
                      <map size="2">
                       <str val="duplicates"/>
                       <str val="reject"/>
                       <str val="duplicates-error-code"/>
                       <str val="XTDE3365"/>
                      </map>
                     </ifCall>
                    </ifCall>
                    <forEach line="3970">
                     <varRef name="actions" slot="2"/>
                     <let line="3971" var="action-map" as="map(*)" slot="14" eval="7">
                      <dot type="map(*)"/>
                      <choose line="3974">
                       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
                        <varRef name="action-map" slot="14"/>
                        <str val="@event"/>
                       </ifCall>
                       <choose line="3975">
                        <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                         <data>
                          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                           <varRef name="action-map" slot="14"/>
                           <str val="@event"/>
                          </ifCall>
                         </data>
                         <str val="xforms-submit-done"/>
                        </gc>
                        <callT line="3976" name="applyActions" bSlot="6" flags="t">
                         <withParam name="Q{}action-map" flags="t" as="item()">
                          <varRef line="3977" name="action-map" slot="14"/>
                         </withParam>
                         <withParam name="Q{}nodeset" flags="t" as="xs:string">
                          <check line="3978" card="1" diag="8|0|XTTE0590|nodeset">
                           <varRef name="refi" slot="3"/>
                          </check>
                         </withParam>
                         <withParam name="Q{}instanceXML" flags="t" as="element()">
                          <varRef line="3979" name="instanceXML" slot="5"/>
                         </withParam>
                        </callT>
                       </choose>
                      </choose>
                     </let>
                    </forEach>
                   </sequence>
                  </let>
                 </let>
                </let>
               </let>
              </let>
              <true/>
              <ifCall line="3992" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="alert"/>
               <arrayBlock>
                <fn name="serialize">
                 <doc line="3987" flags="t" validation="preserve">
                  <forEach>
                   <varRef name="required-fields-check" slot="8"/>
                   <valueOf line="3989" flags="l">
                    <fn name="concat">
                     <str val="Value error see: "/>
                     <fn name="serialize">
                      <slash line="3988" simple="1">
                       <dot type="element()"/>
                       <axis line="3989" name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
                      </slash>
                     </fn>
                     <str val="&#xA;"/>
                    </fn>
                   </valueOf>
                  </forEach>
                 </doc>
                </fn>
               </arrayBlock>
              </ifCall>
             </choose>
            </let>
           </let>
          </let>
         </let>
        </let>
       </let>
      </sequence>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="7" binds="3 44 39">
  <template name="Q{}xforms-rebuild" flags="os" line="3747" module="saxon-xforms.xsl" slots="2">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3748" var="instanceDocs" as="map(xs:anyAtomicType, element()?)" slot="0" eval="8">
    <let line="3749" var="instance-keys" as="item()?" slot="1" eval="8">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
      <check card="1" diag="0|0||ixsl:call">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
      </check>
      <str val="getInstanceKeys"/>
      <arrayBlock/>
     </ifCall>
     <ifCall line="3751" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
      <forEach>
       <varRef name="instance-keys" slot="1"/>
       <ifCall line="3753" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
        <atomSing diag="0|0||map:entry">
         <dot/>
        </atomSing>
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="8">
         <fn line="3752" name="concat">
          <str val="instance('"/>
          <atomSing card="?" diag="0|1||fn:concat">
           <dot/>
          </atomSing>
          <str val="')/"/>
         </fn>
        </ufCall>
       </ifCall>
      </forEach>
      <map size="2">
       <str val="duplicates"/>
       <str val="reject"/>
       <str val="duplicates-error-code"/>
       <str val="XTDE3365"/>
      </map>
     </ifCall>
    </let>
    <callT line="3758" name="xformsjs-main" bSlot="1" flags="t">
     <withParam name="Q{}xforms-file" flags="c" as="xs:string?">
      <gVarRef line="3759" name="Q{}xforms-file" bSlot="2"/>
     </withParam>
     <withParam name="Q{}instance-docs" flags="c" as="map(*)">
      <varRef line="3760" name="instanceDocs" slot="0"/>
     </withParam>
    </callT>
   </let>
  </template>
 </co>
 <co id="27" binds="">
  <mode name="Q{}set-field" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="1" flags="s" line="2794" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:textarea" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='textarea'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2795">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <ifCall line="2797" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:textarea"/>
      <str val="value"/>
     </ifCall>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="1" flags="s" line="2786" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:select" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='select'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2787">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <forEach line="2789">
      <filter flags="b">
       <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='option';"/>
       <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="value" slot="0"/>
        </data>
        <attVal name="Q{}value" chk="0"/>
       </gc>
      </filter>
      <ifCall line="2790" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
       <str val="selected"/>
       <true/>
       <dot type="element(Q{}option)"/>
      </ifCall>
     </forEach>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="1" flags="s" line="2765" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:input" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='input'"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2766">
     <param name="Q{}value" slot="0" flags="t">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <forEach line="2769">
      <dot type="*:input"/>
      <choose line="2771">
       <and op="and">
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
        </fn>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}type" chk="0"/>
         <str val="checkbox"/>
        </gc>
       </and>
       <ifCall line="2772" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
        <str val="checked"/>
        <choose>
         <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="value" slot="0"/>
          </data>
          <str val="true"/>
         </gc>
         <check card="?" diag="0|1||ixsl:set-property">
          <varRef name="value" slot="0"/>
         </check>
         <true/>
         <str val=""/>
        </choose>
        <dot type="*:input"/>
       </ifCall>
       <true/>
       <ifCall line="2775" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
        <str val="value"/>
        <check card="?" diag="0|1||ixsl:set-property">
         <varRef name="value" slot="0"/>
        </check>
        <dot type="*:input"/>
       </ifCall>
      </choose>
     </forEach>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="38" binds="45">
  <template name="Q{}refreshElementsUsingIndexFunction-JS" flags="os" line="3283" module="saxon-xforms.xsl" slots="6">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3284">
    <message>
     <valueOf role="select">
      <str val="[refreshElementsUsingIndexFunction-JS] START"/>
     </valueOf>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
    <let line="3285" var="ElementsUsingIndexFunction-keys" as="item()?" slot="0" eval="8">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
      <check card="1" diag="0|0||ixsl:call">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
      </check>
      <str val="getElementsUsingIndexFunctionKeys"/>
      <arrayBlock/>
     </ifCall>
     <let line="3287" var="instance-keys" as="item()?" slot="1" eval="8">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getInstanceKeys"/>
       <arrayBlock/>
      </ifCall>
      <let line="3288" var="instances" as="map(xs:string, element())" slot="2" eval="7">
       <treat line="3290" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|instances">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
         <forEach>
          <varRef name="instance-keys" slot="1"/>
          <ifCall line="3291" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <atomSing diag="0|0||map:entry">
            <dot/>
           </atomSing>
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
            <check card="1" diag="0|0||ixsl:call">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
            </check>
            <str val="getInstance"/>
            <arrayBlock>
             <dot/>
            </arrayBlock>
           </ifCall>
          </ifCall>
         </forEach>
         <map size="2">
          <str val="duplicates"/>
          <str val="reject"/>
          <str val="duplicates-error-code"/>
          <str val="XTDE3365"/>
         </map>
        </ifCall>
       </treat>
       <forEach line="3296">
        <varRef name="ElementsUsingIndexFunction-keys" slot="0"/>
        <let line="3297" var="this-key" as="xs:string" slot="3" eval="7">
         <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|this-key">
          <check card="1" diag="3|0|XTTE0570|this-key">
           <cvUntyped to="xs:string">
            <data>
             <dot/>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line="3298" var="this-element" as="element()" slot="4" eval="7">
          <treat as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|this-element">
           <check card="1" diag="3|0|XTTE0570|this-element">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="getElementUsingIndexFunction"/>
             <arrayBlock>
              <varRef name="this-key" slot="3"/>
             </arrayBlock>
            </ifCall>
           </check>
          </treat>
          <let line="3299" var="this-element-refi" as="xs:string?" slot="5" eval="7">
           <choose line="3301">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this-element" slot="4"/>
              <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
             </slash>
            </fn>
            <cvUntyped to="xs:string">
             <data>
              <slash simple="1">
               <varRef name="this-element" slot="4"/>
               <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
              </slash>
             </data>
            </cvUntyped>
            <fn line="3302" name="exists">
             <slash simple="1">
              <varRef name="this-element" slot="4"/>
              <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
             </slash>
            </fn>
            <cvUntyped line="3302" to="xs:string">
             <data>
              <slash simple="1">
               <varRef name="this-element" slot="4"/>
               <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
              </slash>
             </data>
            </cvUntyped>
           </choose>
           <resultDoc line="3306" global="#&#xD;&#xA;#Sun Nov 18 10:50:05 GMT 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Sun Nov 18 10:50:05 GMT 2018&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
            <fn role="href" name="concat">
             <str val="#"/>
             <varRef name="this-key" slot="3"/>
            </fn>
            <applyT role="content" line="3307" bSlot="0">
             <slash role="select" simple="1">
              <varRef name="this-element" slot="4"/>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <withParam name="Q{}instances" flags="t" as="map(xs:string, element())">
              <varRef line="3308" name="instances" slot="2"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string?">
              <choose line="3309">
               <fn name="exists">
                <varRef name="this-element-refi" slot="5"/>
               </fn>
               <varRef name="this-element-refi" slot="5"/>
               <true/>
               <str val=""/>
              </choose>
             </withParam>
            </applyT>
           </resultDoc>
          </let>
         </let>
        </let>
       </forEach>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="46" binds="">
  <globalVariable name="Q{}xforms-actions" type="xs:string+" line="84" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&gt;=1;};">
   <literal count="15">
    <str val="setvalue"/>
    <str val="insert"/>
    <str val="delete"/>
    <str val="setindex"/>
    <str val="toggle"/>
    <str val="setfocus"/>
    <str val="dispatch"/>
    <str val="rebuild"/>
    <str val="recalculate"/>
    <str val="revalidate"/>
    <str val="refresh"/>
    <str val="reset"/>
    <str val="load"/>
    <str val="send"/>
    <str val="message"/>
   </literal>
  </globalVariable>
 </co>
 <co id="47" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}foo" line="68" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:boolean" slots="1">
   <arg name="num" as="xs:integer"/>
   <compareToInt role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="71" op="lt" val="5">
    <varRef name="num" slot="0"/>
   </compareToInt>
  </function>
 </co>
 <co id="48" binds="48 4 48 48">
  <mode name="Q{}binding-calculation" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="9" flags="s" line="2603" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2604">
     <param name="Q{}curPath" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="2605" name="Q{}position" slot="1">
      <int role="select" val="0"/>
      <supplied role="conversion" slot="1"/>
     </param>
     <param line="2606" name="Q{}calculationMap" slot="2" flags="ti" as="map(xs:string, xs:string)">
      <treat role="conversion" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|calculationMap">
       <check card="1" diag="8|0|XTTE0590|calculationMap">
        <supplied slot="2"/>
       </check>
      </treat>
     </param>
     <let line="2612" var="updatedPath" as="xs:string" slot="3" eval="7">
      <choose>
       <gc op="&gt;" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <varRef name="position" slot="1"/>
        </data>
        <int val="0"/>
       </gc>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="name">
         <dot type="element()"/>
        </fn>
        <str val="["/>
        <atomSing card="?" diag="0|3||fn:concat">
         <varRef name="position" slot="1"/>
        </atomSing>
        <str val="]"/>
       </fn>
       <true/>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="curPath" slot="0"/>
        </atomSing>
        <fn name="name">
         <dot type="element()"/>
        </fn>
       </fn>
      </choose>
      <copy line="2617" flags="cin">
       <sequence role="content">
        <applyT mode="Q{}binding-calculation" bSlot="0">
         <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <withParam name="Q{}curPath" as="xs:string">
          <fn line="2618" name="concat">
           <varRef name="updatedPath" slot="3"/>
           <str val="/"/>
          </fn>
         </withParam>
        </applyT>
        <choose line="2627">
         <fn name="exists">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <varRef name="calculationMap" slot="2"/>
           <varRef name="updatedPath" slot="3"/>
          </ifCall>
         </fn>
         <evaluate line="2631" dxns="">
          <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="1" eval="7">
           <check line="2629" card="1" diag="3|0|XTTE0570|calculationXPath">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
             <varRef name="calculationMap" slot="2"/>
             <varRef name="updatedPath" slot="3"/>
            </ifCall>
           </check>
          </ufCall>
          <dot role="cxt" type="element()"/>
          <dot role="nsCxt" type="element()"/>
          <str role="sa" val="no"/>
          <map role="wp" size="0"/>
         </evaluate>
         <true/>
         <valueOf line="2641" flags="l">
          <fn name="normalize-space">
           <fn name="string-join">
            <data>
             <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
            </data>
            <str val=""/>
           </fn>
          </fn>
         </valueOf>
        </choose>
        <forEachGroup line="2646" algorithm="by">
         <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <fn role="key" name="local-name">
          <dot type="element()"/>
         </fn>
         <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
         <let role="content" line="2648" var="updatedChildPath" as="xs:string" slot="4" eval="8">
          <fn name="concat">
           <varRef name="updatedPath" slot="3"/>
           <str val="/"/>
           <check card="?" diag="0|2||fn:concat">
            <currentGroupingKey/>
           </check>
          </fn>
          <let line="2653" var="vv:v0" as="xs:string" slot="5" eval="13">
           <fn name="concat">
            <varRef name="updatedChildPath" slot="4"/>
            <str val="["/>
           </fn>
           <let var="dataRefWithFilter" as="element()*" slot="6" eval="8">
            <filter flags="b">
             <slash simple="1">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
              <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <fn name="starts-with">
              <cvUntyped to="xs:string">
               <attVal name="Q{}data-ref" chk="0"/>
              </cvUntyped>
              <varRef name="vv:v0" slot="5"/>
             </fn>
            </filter>
            <choose line="2656">
             <or op="or">
              <fn name="exists">
               <tail start="2">
                <currentGroup/>
               </tail>
              </fn>
              <fn name="exists">
               <varRef name="dataRefWithFilter" slot="6"/>
              </fn>
             </or>
             <let line="2659" var="vv:v1" as="xs:string" slot="7" eval="13">
              <fn name="concat">
               <varRef name="updatedPath" slot="3"/>
               <str val="/"/>
              </fn>
              <forEach line="2657">
               <currentGroup/>
               <applyT line="2658" mode="Q{}binding-calculation" bSlot="2">
                <dot role="select"/>
                <withParam name="Q{}curPath" as="xs:string">
                 <varRef line="2659" name="vv:v1" slot="7"/>
                </withParam>
                <withParam name="Q{}position" as="xs:integer">
                 <fn line="2660" name="position"/>
                </withParam>
               </applyT>
              </forEach>
             </let>
             <true/>
             <let line="2668" var="vv:v2" as="xs:string" slot="8" eval="13">
              <fn name="concat">
               <varRef name="updatedPath" slot="3"/>
               <str val="/"/>
              </fn>
              <forEach line="2666">
               <currentGroup/>
               <applyT line="2667" mode="Q{}binding-calculation" bSlot="3">
                <dot role="select"/>
                <withParam name="Q{}curPath" as="xs:string">
                 <varRef line="2668" name="vv:v2" slot="8"/>
                </withParam>
               </applyT>
              </forEach>
             </let>
            </choose>
           </let>
          </let>
         </let>
        </forEachGroup>
       </sequence>
      </copy>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="49" vis="PUBLIC" binds="">
  <globalParam name="Q{}xforms-cache-id" type="item()*" line="55" module="saxon-xforms.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="xforms-cache"/>
  </globalParam>
 </co>
 <co id="4" binds="50">
  <function name="Q{http://www.w3.org/2002/xforms}impose" line="19" module="xforms-function-library.xsl" eval="8" flags="pU" as="xs:string" slots="3">
   <arg name="input" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="33" var="vv:v0" as="xs:anyAtomicType*" slot="1" eval="4">
    <data>
     <gVarRef name="Q{}xform-functions" bSlot="0"/>
    </data>
    <let line="49" var="parts2" as="xs:string*" slot="2" eval="8">
     <analyzeString line="54">
      <fn role="select" line="30" name="string-join">
       <analyzeString>
        <varRef role="select" name="input" slot="0"/>
        <str role="regex" val="\i\c*\("/>
        <str role="flags" val=""/>
        <choose role="matching" line="33">
         <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <varRef name="vv:v0" slot="1"/>
          <fn name="substring-before">
           <dot type="xs:string"/>
           <str val="("/>
          </fn>
         </gc>
         <fn line="34" name="concat">
          <str val="xforms:"/>
          <dot type="xs:string"/>
         </fn>
         <true/>
         <dot line="37" type="xs:string"/>
        </choose>
        <dot role="nonMatching" line="42" type="xs:string"/>
       </analyzeString>
      </fn>
      <str role="regex" val="(^\s*|[^\i\c\]])/\i\c*(/)"/>
      <str role="flags" val=""/>
      <sequence role="matching" line="56">
       <fn name="regex-group">
        <int val="1"/>
       </fn>
       <fn line="57" name="regex-group">
        <int val="2"/>
       </fn>
      </sequence>
      <dot role="nonMatching" line="60" type="xs:string"/>
     </analyzeString>
     <fn line="65" name="string-join">
      <varRef name="parts2" slot="2"/>
     </fn>
    </let>
   </let>
  </function>
 </co>
 <co id="50" binds="">
  <globalVariable name="Q{}xform-functions" type="item()+" line="17" module="xforms-function-library.xsl" visibility="PRIVATE" jsAcceptor="return val;" jsCardCheck="function c(n) {return n&gt;=1;};">
   <sequence ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="17">
    <literal count="5">
     <str val="instance"/>
     <str val="index"/>
     <str val="avg"/>
     <str val="foo"/>
     <str val="current-date"/>
    </literal>
    <slash simple="1">
     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
      <dot flags="a"/>
     </treat>
     <axis name="child" nodeTest="element(Q{}random)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='random';"/>
    </slash>
   </sequence>
  </globalVariable>
 </co>
 <co id="42" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}check-required-fields" line="858" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="3">
   <arg name="instanceXML" as="element()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="861" var="required-fieldsi" as="element()*" slot="1" eval="8">
    <filter flags="b">
     <slash simple="1">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
      <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </slash>
     <fn name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-required)" jsTest="return item.name==='data-required'"/>
     </fn>
    </filter>
    <forEach line="863">
     <varRef name="required-fieldsi" slot="1"/>
     <let line="865" var="resulti" as="document-node()" slot="2" eval="7">
      <doc line="868" validation="preserve">
       <evaluate dxns="">
        <fn role="xpath" name="concat">
         <str val="boolean(normalize-space("/>
         <attVal name="Q{}data-ref" chk="0"/>
         <str val="))"/>
         <str val="="/>
         <attVal name="Q{}data-ref" chk="0"/>
         <str val="/"/>
         <attVal name="Q{}data-required" chk="0"/>
        </fn>
        <varRef role="cxt" name="instanceXML" slot="0"/>
        <varRef role="nsCxt" name="instanceXML" slot="0"/>
        <str role="sa" val="no"/>
        <map role="wp" size="0"/>
       </evaluate>
      </doc>
      <choose line="874">
       <vc op="eq" onEmpty="0" comp="CCC">
        <cast as="xs:string" emptiable="0">
         <data>
          <varRef name="resulti" slot="2"/>
         </data>
        </cast>
        <str val="false"/>
       </vc>
       <dot type="element()"/>
      </choose>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id="51" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}index" line="75" module="xforms-function-library.xsl" eval="7" flags="pU" as="xs:integer" slots="2">
   <arg name="repeatID" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="79" var="repeat-index" as="xs:double?" slot="1" eval="7">
    <check card="?" diag="3|0|XTTE0570|repeat-index">
     <convert from="xs:anyAtomicType" to="xs:double" flags="p">
      <cvUntyped to="xs:double">
       <data>
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="getRepeatIndex"/>
         <arrayBlock>
          <varRef name="repeatID" slot="0"/>
         </arrayBlock>
        </ifCall>
       </data>
      </cvUntyped>
     </convert>
    </check>
    <choose line="82">
     <fn name="exists">
      <varRef name="repeat-index" slot="1"/>
     </fn>
     <check card="1" diag="5|0|XTTE0780|xforms:index">
      <cast as="xs:integer" emptiable="1">
       <varRef name="repeat-index" slot="1"/>
      </cast>
     </check>
     <true/>
     <int val="0"/>
    </choose>
   </let>
  </function>
 </co>
 <co id="9" binds="9">
  <mode name="Q{}delete-node" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="1" flags="s" line="1798" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1799">
     <param name="Q{}delete-node" slot="0" flags="ti" as="node()">
      <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|delete-node">
       <check card="1" diag="8|0|XTTE0590|delete-node">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <choose line="1802">
      <is op="is">
       <dot type="element()"/>
       <varRef name="delete-node" slot="0"/>
      </is>
      <empty/>
      <true/>
      <copy line="1816" flags="cin">
       <sequence role="content">
        <copyOf flags="vc">
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        </copyOf>
        <applyT line="1817" mode="Q{}delete-node" bSlot="0">
         <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        </applyT>
       </sequence>
      </copy>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="12" binds="">
  <mode name="Q{}get-field" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.25" seq="2" rank="0" minImp="0" slots="0" flags="s" line="2758" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:textarea" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='textarea'"/>
    <ifCall role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2761" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
     <dot type="*:textarea"/>
     <str val="value"/>
    </ifCall>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="s" line="2753" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:select" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='select'"/>
    <ifCall role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2755" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
     <check card="?" diag="0|0||ixsl:get">
      <filter flags="b">
       <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='option';"/>
       <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
          <dot type="element(Q{}option)"/>
          <str val="selected"/>
         </ifCall>
        </data>
        <true/>
       </gc>
      </filter>
     </check>
     <str val="value"/>
    </ifCall>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="0" rank="0" minImp="0" slots="0" flags="s" line="2739" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="*:input" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local==='input'"/>
    <choose role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2743">
     <and op="and">
      <fn name="exists">
       <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
      </fn>
      <gc op="=" card="1:1" comp="CCC">
       <attVal name="Q{}type" chk="0"/>
       <str val="checkbox"/>
      </gc>
     </and>
     <ifCall line="2744" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:input"/>
      <str val="checked"/>
     </ifCall>
     <true/>
     <ifCall line="2747" name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <dot type="*:input"/>
      <str val="value"/>
     </ifCall>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="45" binds="44 35 52 45 10 10 53 54 19 55 45 33 45 45 10 10 53 54 19 4 40 55 45 33 53 54 19 33 45 10 10 53 54 19 55 10 10 53 54 55 45 10 10 53 54 19 40 4 4 33 45 45 45 10 10 45 45">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="0" flags="s" line="1012" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1013" name="xformsjs-main" bSlot="0" flags="t">
     <withParam name="Q{}xforms-doc" flags="c" as="document-node()">
      <dot line="1014" type="document-node()"/>
     </withParam>
     <withParam name="Q{}xFormsId" flags="c" as="xs:string">
      <gVarRef line="1015" name="Q{}xform-html-id" bSlot="1"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="17" rank="2" minImp="0" slots="1" flags="s" line="1973" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2002/xforms}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2002/xforms'"/>
     <gc ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1973" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
      <literal count="15">
       <str val="setvalue"/>
       <str val="insert"/>
       <str val="delete"/>
       <str val="setindex"/>
       <str val="toggle"/>
       <str val="setfocus"/>
       <str val="dispatch"/>
       <str val="rebuild"/>
       <str val="recalculate"/>
       <str val="revalidate"/>
       <str val="refresh"/>
       <str val="reset"/>
       <str val="load"/>
       <str val="send"/>
       <str val="message"/>
      </literal>
      <fn name="local-name">
       <dot type="Q{http://www.w3.org/2002/xforms}*"/>
      </fn>
     </gc>
    </p.withPredicate>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1979" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1980" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1981" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1993">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1994" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1973" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}hide)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hide';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1979" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1980" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1981" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1993">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1994" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="1" minImp="0" slots="0" flags="s" line="1441" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="15" rank="1" minImp="0" slots="2" flags="s" line="1736" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}submit)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='submit';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1737">
     <param name="Q{}submissions" slot="0" flags="t" as="map(xs:string, map(*))">
      <map role="select" size="0"/>
      <treat role="conversion" as="map(xs:string, map(*))" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isMap(item)};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|submissions">
       <check card="1" diag="8|0|XTTE0590|submissions">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <let line="1739" var="innerbody" as="document-node()" slot="1" eval="7">
      <doc line="1740" validation="preserve">
       <applyT bSlot="3">
        <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
       </applyT>
      </doc>
      <choose line="1744">
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}appearance" chk="0"/>
        <str val="minimal"/>
       </gc>
       <elem line="1746" name="a" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
        <copyOf flags="vc">
         <varRef name="innerbody" slot="1"/>
        </copyOf>
       </elem>
       <true/>
       <elem line="1750" name="button" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
        <sequence>
         <att name="type" flags="l">
          <str val="button"/>
         </att>
         <copyOf line="1751" flags="vc">
          <filter flags="b">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
           <vc op="ne" comp="CCC">
            <fn name="local-name">
             <dot type="attribute()"/>
            </fn>
            <str val="submission"/>
           </vc>
          </filter>
         </copyOf>
         <choose line="1752">
          <and op="and">
           <fn name="exists">
            <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
           </fn>
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <varRef name="submissions" slot="0"/>
            <atomSing diag="0|1||map:contains">
             <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
            </atomSing>
           </ifCall>
          </and>
          <att line="1753" name="data-submit" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <attVal name="Q{}submission" chk="0"/>
           </convert>
          </att>
         </choose>
         <copyOf line="1755" flags="vc">
          <varRef name="innerbody" slot="1"/>
         </copyOf>
        </sequence>
       </elem>
      </choose>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="7" flags="s" line="1452" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}select1)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='select1';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1453">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1454" name="Q{}context-position" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|context-position">
       <check card="1" diag="8|0|XTTE0590|context-position">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1458" var="myid" as="xs:string" slot="2" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element()"/>
        </fn>
        <str val="-"/>
        <choose line="1456">
         <varRef name="context-position" slot="1"/>
         <varRef name="context-position" slot="1"/>
         <true/>
         <fn name="string">
          <varRef name="position" slot="0"/>
         </fn>
        </choose>
       </fn>
      </choose>
      <sequence line="1460">
       <choose>
        <and op="and">
         <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="4" eval="7">
          <dot type="element()"/>
         </ufCall>
         <fn name="empty">
          <filter flags="b">
           <slash simple="1">
            <dot type="element()"/>
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="5" eval="7">
            <dot type="element()"/>
           </ufCall>
          </filter>
         </fn>
        </and>
        <ifCall line="1461" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setElementUsingIndexFunction"/>
         <arrayBlock>
          <varRef name="myid" slot="2"/>
          <dot type="element()"/>
         </arrayBlock>
        </ifCall>
       </choose>
       <let line="1468" var="bindingi" as="node()?" slot="3" eval="7">
        <treat line="1469" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
         <check card="?" diag="3|0|XTTE0570|bindingi">
          <callT name="getBinding" bSlot="6">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1470" type="element()"/>
           </withParam>
          </callT>
         </check>
        </treat>
        <let line="1475" var="refi" as="xs:string" slot="4" eval="7">
         <treat line="1476" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
          <check card="1" diag="3|0|XTTE0570|refi">
           <cvUntyped to="xs:string">
            <data>
             <callT name="getDataRef" bSlot="7">
              <withParam name="Q{}this" flags="c" as="element()">
               <dot line="1477" type="element()"/>
              </withParam>
              <withParam name="Q{}bindingi" flags="c" as="node()?">
               <varRef line="1478" name="bindingi" slot="3"/>
              </withParam>
             </callT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line="1483" var="instanceField" as="node()?" slot="5" eval="7">
          <treat line="1484" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
           <check card="?" diag="3|0|XTTE0570|instanceField">
            <callT name="getReferencedInstanceField" bSlot="8">
             <withParam name="Q{}refi" flags="c" as="xs:string">
              <varRef line="1485" name="refi" slot="4"/>
             </withParam>
            </callT>
           </check>
          </treat>
          <let line="1490" var="actions" as="map(*)*" slot="6" eval="8">
           <treat line="1491" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
            <callT name="setActions" bSlot="9">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1492" type="element()"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string">
              <varRef line="1493" name="refi" slot="4"/>
             </withParam>
            </callT>
           </treat>
           <sequence line="1497">
            <choose>
             <fn name="exists">
              <varRef name="actions" slot="6"/>
             </fn>
             <ifCall line="1498" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="addAction"/>
              <arrayBlock>
               <varRef name="myid" slot="2"/>
               <varRef name="actions" slot="6"/>
              </arrayBlock>
             </ifCall>
            </choose>
            <elem line="1515" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
             <sequence>
              <att name="class" flags="l">
               <str val="xforms-select"/>
              </att>
              <applyT line="1516" bSlot="10">
               <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
              </applyT>
              <elem line="1519" name="select" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
               <sequence>
                <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="11" eval="7">
                 <dot type="element()"/>
                </ufCall>
                <copyOf line="1520" flags="vc">
                 <except op="except">
                  <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                  <docOrder intra="1">
                   <sequence>
                    <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
                    <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
                    <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
                   </sequence>
                  </docOrder>
                 </except>
                </copyOf>
                <att line="1522" name="data-ref" flags="l">
                 <varRef name="refi" slot="4"/>
                </att>
                <att line="1523" name="data-element" flags="l">
                 <lastOf line="1513">
                  <fn name="tokenize">
                   <varRef name="refi" slot="4"/>
                   <str val="/"/>
                   <str val=""/>
                  </fn>
                 </lastOf>
                </att>
                <choose line="1525">
                 <and op="and">
                  <fn name="exists">
                   <varRef name="bindingi" slot="3"/>
                  </fn>
                  <fn name="exists">
                   <slash simple="1">
                    <varRef name="bindingi" slot="3"/>
                    <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                   </slash>
                  </fn>
                 </and>
                 <att line="1526" name="data-constraint" flags="l">
                  <convert from="xs:untypedAtomic" to="xs:string">
                   <data>
                    <slash simple="1">
                     <varRef name="bindingi" slot="3"/>
                     <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                    </slash>
                   </data>
                  </convert>
                 </att>
                </choose>
                <choose line="1529">
                 <vc op="eq" onEmpty="0" comp="CCC">
                  <fn name="local-name">
                   <dot type="element()"/>
                  </fn>
                  <str val="select"/>
                 </vc>
                 <sequence line="1532">
                  <att name="multiple" flags="l">
                   <str val="true"/>
                  </att>
                  <att name="size" flags="l">
                   <convert from="xs:integer" to="xs:string">
                    <fn name="count">
                     <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                    </fn>
                   </convert>
                  </att>
                 </sequence>
                </choose>
                <choose line="1535">
                 <fn name="exists">
                  <varRef name="actions" slot="6"/>
                 </fn>
                 <att line="1536" name="data-action" flags="l">
                  <varRef name="myid" slot="2"/>
                 </att>
                </choose>
                <applyT line="1539" bSlot="12">
                 <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                 <withParam name="Q{}selectedValue" as="xs:string">
                  <choose line="1504">
                   <fn name="exists">
                    <varRef name="instanceField" slot="5"/>
                   </fn>
                   <cvUntyped line="1505" to="xs:string">
                    <cast as="xs:untypedAtomic" emptiable="0">
                     <fn name="string">
                      <convert from="xs:anyAtomicType" to="xs:string">
                       <data>
                        <varRef name="instanceField" slot="5"/>
                       </data>
                      </convert>
                     </fn>
                    </cast>
                   </cvUntyped>
                   <true/>
                   <str val=""/>
                  </choose>
                 </withParam>
                </applyT>
               </sequence>
              </elem>
             </sequence>
            </elem>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="s" line="1003" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1973" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}unload)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='unload';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1979" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1980" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1981" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1993">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1994" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="s" line="1029" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='html';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1031" name="html" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
     <sequence>
      <copyOf flags="vc">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </copyOf>
      <elem line="1033" name="head" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
       <sequence>
        <copyOf flags="vc">
         <union op="|">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <slash>
           <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
         </union>
        </copyOf>
        <elem line="1034" name="meta" nsuri="" flags="l">
         <sequence>
          <att name="http-equiv" flags="l">
           <str val="Content-Type"/>
          </att>
          <att name="content" flags="l">
           <str val="text/html;charset=utf-8"/>
          </att>
         </sequence>
        </elem>
        <forEach line="1036">
         <union op="|">
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
         </union>
         <elem line="1038" name="meta" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
          <copyOf flags="vc">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </copyOf>
         </elem>
        </forEach>
        <copyOf line="1043" flags="vc">
         <axis name="child" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
        </copyOf>
       </sequence>
      </elem>
      <elem line="1046" name="body" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
       <applyT bSlot="13">
        <slash role="select">
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='body';"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </applyT>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1973" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}show)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='show';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1979" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1980" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1981" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1993">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1994" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="5" rank="1" minImp="0" slots="10" flags="s" line="1170" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='input';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1171">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1172" name="Q{}context-position" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|context-position">
       <check card="1" diag="8|0|XTTE0590|context-position">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1176" var="myid" as="xs:string" slot="2" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
        </fn>
        <str val="-"/>
        <choose line="1174">
         <varRef name="context-position" slot="1"/>
         <varRef name="context-position" slot="1"/>
         <true/>
         <fn name="string">
          <varRef name="position" slot="0"/>
         </fn>
        </choose>
       </fn>
      </choose>
      <sequence line="1178">
       <choose>
        <and op="and">
         <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="14" eval="7">
          <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
         </ufCall>
         <fn name="empty">
          <filter flags="b">
           <slash simple="1">
            <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="15" eval="7">
            <dot type="element()"/>
           </ufCall>
          </filter>
         </fn>
        </and>
        <ifCall line="1179" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setElementUsingIndexFunction"/>
         <arrayBlock>
          <varRef name="myid" slot="2"/>
          <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
         </arrayBlock>
        </ifCall>
       </choose>
       <let line="1187" var="bindingi" as="node()?" slot="3" eval="7">
        <treat line="1188" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
         <check card="?" diag="3|0|XTTE0570|bindingi">
          <callT name="getBinding" bSlot="16">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1189" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
           </withParam>
          </callT>
         </check>
        </treat>
        <let line="1197" var="refi" as="xs:string" slot="4" eval="7">
         <treat line="1198" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
          <check card="1" diag="3|0|XTTE0570|refi">
           <cvUntyped to="xs:string">
            <data>
             <callT name="getDataRef" bSlot="17">
              <withParam name="Q{}this" flags="c" as="element()">
               <dot line="1199" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
              </withParam>
              <withParam name="Q{}bindingi" flags="c" as="node()?">
               <varRef line="1200" name="bindingi" slot="3"/>
              </withParam>
             </callT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line="1207" var="instanceField" as="node()?" slot="5" eval="7">
          <treat line="1208" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
           <check card="?" diag="3|0|XTTE0570|instanceField">
            <callT name="getReferencedInstanceField" bSlot="18">
             <withParam name="Q{}refi" flags="c" as="xs:string">
              <varRef line="1209" name="refi" slot="4"/>
             </withParam>
            </callT>
           </check>
          </treat>
          <let line="1223" var="relevantVar" as="xs:boolean" slot="6" eval="7">
           <choose line="1225">
            <and op="and">
             <and op="and">
              <fn name="exists">
               <varRef name="bindingi" slot="3"/>
              </fn>
              <fn name="exists">
               <slash simple="1">
                <varRef name="bindingi" slot="3"/>
                <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
               </slash>
              </fn>
             </and>
             <fn name="exists">
              <varRef name="instanceField" slot="5"/>
             </fn>
            </and>
            <treat line="1226" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantVar">
             <check card="1" diag="3|0|XTTE0570|relevantVar">
              <cvUntyped to="xs:boolean">
               <data>
                <evaluate dxns="">
                 <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="19" eval="4">
                  <check card="1" diag="0|0||xforms:impose">
                   <cvUntyped to="xs:string">
                    <data>
                     <slash simple="1">
                      <varRef name="bindingi" slot="3"/>
                      <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                     </slash>
                    </data>
                   </cvUntyped>
                  </check>
                 </ufCall>
                 <varRef role="cxt" name="instanceField" slot="5"/>
                 <choose role="nsCxt" line="1218">
                  <fn name="exists">
                   <varRef name="instanceField" slot="5"/>
                  </fn>
                  <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|namespace-context-item">
                   <check card="1" diag="3|0|XTTE0570|namespace-context-item">
                    <varRef name="instanceField" slot="5"/>
                   </check>
                  </treat>
                  <true/>
                  <ufCall name="Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations" tailCall="false" bSlot="20" eval="4">
                   <check card="1" diag="0|0||xforms:addNamespaceDeclarations">
                    <slash simple="1">
                     <root/>
                     <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                    </slash>
                   </check>
                  </ufCall>
                 </choose>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <true/>
            <true/>
           </choose>
           <let line="1236" var="actions" as="map(*)*" slot="7" eval="8">
            <treat line="1237" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
             <callT name="setActions" bSlot="21">
              <withParam name="Q{}this" flags="c" as="element()">
               <dot line="1238" type="element(Q{http://www.w3.org/2002/xforms}input)"/>
              </withParam>
              <withParam name="Q{}nodeset" flags="t" as="xs:string">
               <varRef line="1239" name="refi" slot="4"/>
              </withParam>
             </callT>
            </treat>
            <sequence line="1244">
             <choose>
              <fn name="exists">
               <varRef name="actions" slot="7"/>
              </fn>
              <ifCall line="1245" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="addAction"/>
               <arrayBlock>
                <varRef name="myid" slot="2"/>
                <varRef name="actions" slot="7"/>
               </arrayBlock>
              </ifCall>
             </choose>
             <elem line="1250" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
              <sequence>
               <att name="class" flags="l">
                <str val="xforms-input"/>
               </att>
               <att line="1251" name="style" flags="l">
                <choose>
                 <varRef name="relevantVar" slot="6"/>
                 <str val="display:block"/>
                 <true/>
                 <str val="display:none"/>
                </choose>
               </att>
               <applyT line="1253" bSlot="22">
                <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
               </applyT>
               <let line="1255" var="hints" as="text()*" slot="8" eval="3">
                <slash>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
                 <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
                </slash>
                <elem line="1260" name="input" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
                 <sequence>
                  <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="23" eval="7">
                   <dot type="element(Q{http://www.w3.org/2002/xforms}input)"/>
                  </ufCall>
                  <att line="1261" name="id" flags="l">
                   <varRef name="myid" slot="2"/>
                  </att>
                  <att line="1263" name="data-ref" flags="l">
                   <varRef name="refi" slot="4"/>
                  </att>
                  <att line="1264" name="data-element" flags="l">
                   <lastOf line="1257">
                    <fn name="tokenize">
                     <varRef name="refi" slot="4"/>
                     <str val="/"/>
                     <str val=""/>
                    </fn>
                   </lastOf>
                  </att>
                  <choose line="1266">
                   <and op="and">
                    <fn name="exists">
                     <varRef name="bindingi" slot="3"/>
                    </fn>
                    <fn name="exists">
                     <slash simple="1">
                      <varRef name="bindingi" slot="3"/>
                      <axis name="attribute" nodeTest="attribute(Q{}required)" jsTest="return item.name==='required'"/>
                     </slash>
                    </fn>
                   </and>
                   <att line="1267" name="data-required" flags="l">
                    <convert from="xs:untypedAtomic" to="xs:string">
                     <data>
                      <slash simple="1">
                       <varRef name="bindingi" slot="3"/>
                       <axis name="attribute" nodeTest="attribute(Q{}required)" jsTest="return item.name==='required'"/>
                      </slash>
                     </data>
                    </convert>
                   </att>
                  </choose>
                  <choose line="1269">
                   <and op="and">
                    <fn name="exists">
                     <varRef name="bindingi" slot="3"/>
                    </fn>
                    <fn name="exists">
                     <slash simple="1">
                      <varRef name="bindingi" slot="3"/>
                      <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                     </slash>
                    </fn>
                   </and>
                   <att line="1270" name="data-constraint" flags="l">
                    <convert from="xs:untypedAtomic" to="xs:string">
                     <data>
                      <slash simple="1">
                       <varRef name="bindingi" slot="3"/>
                       <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                      </slash>
                     </data>
                    </convert>
                   </att>
                  </choose>
                  <choose line="1272">
                   <fn name="exists">
                    <varRef name="actions" slot="7"/>
                   </fn>
                   <att line="1273" name="data-action" flags="l">
                    <varRef name="myid" slot="2"/>
                   </att>
                  </choose>
                  <choose line="1276">
                   <and op="and">
                    <fn name="exists">
                     <varRef name="bindingi" slot="3"/>
                    </fn>
                    <fn name="exists">
                     <slash simple="1">
                      <varRef name="bindingi" slot="3"/>
                      <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                     </slash>
                    </fn>
                   </and>
                   <att line="1277" name="data-relevant" flags="l">
                    <convert from="xs:untypedAtomic" to="xs:string">
                     <data>
                      <slash simple="1">
                       <varRef name="bindingi" slot="3"/>
                       <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                      </slash>
                     </data>
                    </convert>
                   </att>
                  </choose>
                  <let line="1280" var="input-value" as="xs:string" slot="9" eval="7">
                   <choose line="1282">
                    <fn name="exists">
                     <varRef name="instanceField" slot="5"/>
                    </fn>
                    <cvUntyped line="1283" to="xs:string">
                     <cast as="xs:untypedAtomic" emptiable="0">
                      <fn name="string">
                       <convert from="xs:anyAtomicType" to="xs:string">
                        <data>
                         <varRef name="instanceField" slot="5"/>
                        </data>
                       </convert>
                      </fn>
                     </cast>
                    </cvUntyped>
                    <true/>
                    <str val=""/>
                   </choose>
                   <sequence line="1297">
                    <choose>
                     <choose>
                      <fn name="exists">
                       <varRef name="bindingi" slot="3"/>
                      </fn>
                      <vc op="eq" comp="EQC">
                       <cast as="xs:QName" emptiable="1">
                        <data>
                         <slash simple="1">
                          <varRef name="bindingi" slot="3"/>
                          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                         </slash>
                        </data>
                       </cast>
                       <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="date"/>
                      </vc>
                      <true/>
                      <false/>
                     </choose>
                     <sequence line="1298">
                      <att name="data-type" flags="l">
                       <str val="date"/>
                      </att>
                      <att line="1300" name="type" flags="l">
                       <str val="date"/>
                      </att>
                      <att line="1302" name="value" flags="l">
                       <varRef name="input-value" slot="9"/>
                      </att>
                     </sequence>
                     <choose line="1309">
                      <fn name="exists">
                       <varRef name="bindingi" slot="3"/>
                      </fn>
                      <vc op="eq" comp="EQC">
                       <cast as="xs:QName" emptiable="1">
                        <data>
                         <slash simple="1">
                          <varRef name="bindingi" slot="3"/>
                          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                         </slash>
                        </data>
                       </cast>
                       <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="time"/>
                      </vc>
                      <true/>
                      <false/>
                     </choose>
                     <sequence line="1310">
                      <att name="data-type" flags="l">
                       <str val="time"/>
                      </att>
                      <att line="1312" name="type" flags="l">
                       <str val="time"/>
                      </att>
                      <att line="1315" name="value" flags="l">
                       <varRef name="input-value" slot="9"/>
                      </att>
                     </sequence>
                     <choose line="1322">
                      <fn name="exists">
                       <varRef name="bindingi" slot="3"/>
                      </fn>
                      <vc op="eq" comp="EQC">
                       <cast as="xs:QName" emptiable="1">
                        <data>
                         <slash simple="1">
                          <varRef name="bindingi" slot="3"/>
                          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name==='type'"/>
                         </slash>
                        </data>
                       </cast>
                       <qName pre="xs" uri="http://www.w3.org/2001/XMLSchema" loc="boolean"/>
                      </vc>
                      <true/>
                      <false/>
                     </choose>
                     <sequence line="1323">
                      <att name="data-type" flags="l">
                       <str val="checkbox"/>
                      </att>
                      <att line="1325" name="type" flags="l">
                       <str val="checkbox"/>
                      </att>
                      <choose line="1330">
                       <fn name="exists">
                        <varRef name="instanceField" slot="5"/>
                       </fn>
                       <choose line="1331">
                        <and op="and">
                         <varRef name="input-value" slot="9"/>
                         <cast as="xs:boolean" emptiable="0">
                          <varRef name="input-value" slot="9"/>
                         </cast>
                        </and>
                        <att line="1332" name="checked" flags="l">
                         <varRef name="input-value" slot="9"/>
                        </att>
                       </choose>
                      </choose>
                     </sequence>
                     <true/>
                     <sequence line="1338">
                      <choose>
                       <varRef name="relevantVar" slot="6"/>
                       <att line="1339" name="type" flags="l">
                        <str val="text"/>
                       </att>
                      </choose>
                      <att line="1341" name="value" flags="l">
                       <varRef name="input-value" slot="9"/>
                      </att>
                     </sequence>
                    </choose>
                    <choose line="1345">
                     <fn name="exists">
                      <varRef name="hints" slot="8"/>
                     </fn>
                     <att line="1346" name="title" flags="l">
                      <fn name="string-join">
                       <convert from="xs:untypedAtomic" to="xs:string">
                        <data>
                         <mergeAdj>
                          <varRef name="hints" slot="8"/>
                         </mergeAdj>
                        </data>
                       </convert>
                       <str val=" "/>
                      </fn>
                     </att>
                    </choose>
                    <choose line="1348">
                     <fn name="exists">
                      <axis name="attribute" nodeTest="attribute(Q{}size)" jsTest="return item.name==='size'"/>
                     </fn>
                     <att line="1349" name="size" flags="l">
                      <convert from="xs:untypedAtomic" to="xs:string">
                       <attVal name="Q{}size" chk="0"/>
                      </convert>
                     </att>
                    </choose>
                   </sequence>
                  </let>
                 </sequence>
                </elem>
               </let>
              </sequence>
             </elem>
            </sequence>
           </let>
          </let>
         </let>
        </let>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="14" rank="1" minImp="0" slots="8" flags="s" line="1658" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}repeat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='repeat';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1659">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1660" name="Q{}context-position" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|context-position">
       <check card="1" diag="8|0|XTTE0590|context-position">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1670" var="bindingi" as="node()?" slot="2" eval="7">
      <treat line="1671" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
       <check card="?" diag="3|0|XTTE0570|bindingi">
        <callT name="getBinding" bSlot="24">
         <withParam name="Q{}this" flags="c" as="element()">
          <dot line="1672" type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
         </withParam>
        </callT>
       </check>
      </treat>
      <let line="1677" var="refi" as="xs:string" slot="3" eval="7">
       <treat line="1678" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
        <check card="1" diag="3|0|XTTE0570|refi">
         <cvUntyped to="xs:string">
          <data>
           <callT name="getDataRef" bSlot="25">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1679" type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
            </withParam>
            <withParam name="Q{}bindingi" flags="c" as="node()?">
             <varRef line="1680" name="bindingi" slot="2"/>
            </withParam>
           </callT>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <let line="1686" var="selectedRepeatVar" as="element()*" slot="4" eval="8">
        <treat line="1688" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|selectedRepeatVar">
         <callT name="getReferencedInstanceField" bSlot="26">
          <withParam name="Q{}refi" flags="c" as="xs:string">
           <varRef line="1689" name="refi" slot="3"/>
          </withParam>
         </callT>
        </treat>
        <choose line="1704">
         <fn name="exists">
          <varRef name="selectedRepeatVar" slot="4"/>
         </fn>
         <elem line="1706" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
          <sequence>
           <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="27" eval="7">
            <dot type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
           </ufCall>
           <att line="1708" name="data-repeatable-context" flags="l">
            <varRef name="refi" slot="3"/>
           </att>
           <att line="1709" name="data-count" flags="l">
            <convert from="xs:integer" to="xs:string">
             <fn name="count">
              <varRef name="selectedRepeatVar" slot="4"/>
             </fn>
            </convert>
           </att>
           <att line="1710" name="id" flags="l">
            <choose line="1664">
             <fn name="exists">
              <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
             </fn>
             <check card="1" diag="3|0|XTTE0570|myid">
              <cvUntyped to="xs:string">
               <attVal name="Q{}id" chk="0"/>
              </cvUntyped>
             </check>
             <true/>
             <fn name="concat">
              <fn name="generate-id">
               <dot type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
              </fn>
              <str val="-"/>
              <choose line="1662">
               <varRef name="context-position" slot="1"/>
               <varRef name="context-position" slot="1"/>
               <true/>
               <fn name="string">
                <varRef name="position" slot="0"/>
               </fn>
              </choose>
             </fn>
            </choose>
           </att>
           <let line="1711" var="xf-repeat" as="element(Q{http://www.w3.org/2002/xforms}repeat)" slot="5" eval="7">
            <dot type="element(Q{http://www.w3.org/2002/xforms}repeat)"/>
            <let line="1716" var="vv:v0" as="element()*" slot="6" eval="4">
             <slash simple="1">
              <varRef name="xf-repeat" slot="5"/>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <forEach line="1712">
              <varRef name="selectedRepeatVar" slot="4"/>
              <let line="1713" var="string-position" as="xs:string" slot="7" eval="8">
               <fn name="string">
                <fn name="position"/>
               </fn>
               <elem line="1715" name="div" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
                <sequence>
                 <att name="data-repeat-item" flags="l">
                  <str val="true"/>
                 </att>
                 <applyT line="1716" bSlot="28">
                  <varRef role="select" name="vv:v0" slot="6"/>
                  <withParam name="Q{}position" as="xs:integer">
                   <fn line="1718" name="position"/>
                  </withParam>
                  <withParam name="Q{}context-position" as="xs:string">
                   <choose line="1714">
                    <varRef name="context-position" slot="1"/>
                    <fn name="concat">
                     <varRef name="context-position" slot="1"/>
                     <str val="."/>
                     <varRef name="string-position" slot="7"/>
                    </fn>
                    <true/>
                    <varRef name="string-position" slot="7"/>
                   </choose>
                  </withParam>
                  <withParam name="Q{}nodeset" flags="t" as="xs:string">
                   <fn line="1717" name="concat">
                    <varRef name="refi" slot="3"/>
                    <str val="["/>
                    <fn name="position"/>
                    <str val="]"/>
                   </fn>
                  </withParam>
                 </applyT>
                </sequence>
               </elem>
              </let>
             </forEach>
            </let>
           </let>
          </sequence>
         </elem>
        </choose>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="s" line="1029" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/1999/xhtml}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='html';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1031" name="html" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
     <sequence>
      <copyOf flags="vc">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </copyOf>
      <elem line="1033" name="head" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
       <sequence>
        <copyOf flags="vc">
         <union op="|">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <slash>
           <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
         </union>
        </copyOf>
        <elem line="1034" name="meta" nsuri="" flags="l">
         <sequence>
          <att name="http-equiv" flags="l">
           <str val="Content-Type"/>
          </att>
          <att name="content" flags="l">
           <str val="text/html;charset=utf-8"/>
          </att>
         </sequence>
        </elem>
        <forEach line="1036">
         <union op="|">
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/xhtml}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/xhtml'&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
          <filter flags="b">
           <slash>
            <axis name="child" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
            <axis name="child" nodeTest="element(Q{}meta)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='meta';"/>
           </slash>
           <vc op="ne" comp="CCC">
            <fn name="string">
             <axis name="attribute" nodeTest="attribute(Q{}http-equiv)" jsTest="return item.name==='http-equiv'"/>
            </fn>
            <str val="Content-Type"/>
           </vc>
          </filter>
         </union>
         <elem line="1038" name="meta" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
          <copyOf flags="vc">
           <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </copyOf>
         </elem>
        </forEach>
        <copyOf line="1043" flags="vc">
         <axis name="child" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
        </copyOf>
       </sequence>
      </elem>
      <elem line="1046" name="body" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
       <applyT bSlot="13">
        <slash role="select">
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='body';"/>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </applyT>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="2.0" seq="6" rank="3" minImp="0" slots="8" flags="s" line="1367" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}textarea)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='textarea';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1368">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1369" name="Q{}context-position" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|context-position">
       <check card="1" diag="8|0|XTTE0590|context-position">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1373" var="myid" as="xs:string" slot="2" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
        </fn>
        <str val="-"/>
        <choose line="1371">
         <varRef name="context-position" slot="1"/>
         <varRef name="context-position" slot="1"/>
         <true/>
         <fn name="string">
          <varRef name="position" slot="0"/>
         </fn>
        </choose>
       </fn>
      </choose>
      <sequence line="1375">
       <choose>
        <and op="and">
         <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="29" eval="7">
          <dot type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
         </ufCall>
         <fn name="empty">
          <filter flags="b">
           <slash simple="1">
            <dot type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="30" eval="7">
            <dot type="element()"/>
           </ufCall>
          </filter>
         </fn>
        </and>
        <ifCall line="1376" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setElementUsingIndexFunction"/>
         <arrayBlock>
          <varRef name="myid" slot="2"/>
          <dot type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
         </arrayBlock>
        </ifCall>
       </choose>
       <let line="1380" var="bindingi" as="node()?" slot="3" eval="7">
        <treat line="1381" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
         <check card="?" diag="3|0|XTTE0570|bindingi">
          <callT name="getBinding" bSlot="31">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1382" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
           </withParam>
          </callT>
         </check>
        </treat>
        <let line="1387" var="refi" as="xs:string" slot="4" eval="7">
         <treat line="1388" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
          <check card="1" diag="3|0|XTTE0570|refi">
           <cvUntyped to="xs:string">
            <data>
             <callT name="getDataRef" bSlot="32">
              <withParam name="Q{}this" flags="c" as="element()">
               <dot line="1389" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
              </withParam>
              <withParam name="Q{}bindingi" flags="c" as="node()?">
               <varRef line="1390" name="bindingi" slot="3"/>
              </withParam>
             </callT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line="1395" var="instanceField" as="node()?" slot="5" eval="7">
          <treat line="1396" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
           <check card="?" diag="3|0|XTTE0570|instanceField">
            <callT name="getReferencedInstanceField" bSlot="33">
             <withParam name="Q{}refi" flags="c" as="xs:string">
              <varRef line="1397" name="refi" slot="4"/>
             </withParam>
            </callT>
           </check>
          </treat>
          <let line="1402" var="actions" as="map(*)*" slot="6" eval="8">
           <treat line="1403" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
            <callT name="setActions" bSlot="34">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1404" type="element(Q{http://www.w3.org/2002/xforms}textarea)"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string">
              <varRef line="1405" name="refi" slot="4"/>
             </withParam>
            </callT>
           </treat>
           <sequence line="1409">
            <choose>
             <fn name="exists">
              <varRef name="actions" slot="6"/>
             </fn>
             <ifCall line="1410" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="addAction"/>
              <arrayBlock>
               <varRef name="myid" slot="2"/>
               <varRef name="actions" slot="6"/>
              </arrayBlock>
             </ifCall>
            </choose>
            <let line="1415" var="hints" as="text()*" slot="7" eval="3">
             <slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hint)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hint';"/>
              <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
             </slash>
             <elem line="1418" name="textarea" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
              <sequence>
               <copyOf flags="vc">
                <filter flags="b">
                 <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                 <vc op="ne" comp="CCC">
                  <fn name="local-name">
                   <dot type="attribute()"/>
                  </fn>
                  <str val="ref"/>
                 </vc>
                </filter>
               </copyOf>
               <att line="1419" name="data-element" flags="l">
                <lastOf line="1413">
                 <fn name="tokenize">
                  <varRef name="refi" slot="4"/>
                  <str val="/"/>
                  <str val=""/>
                 </fn>
                </lastOf>
               </att>
               <att line="1420" name="data-ref" flags="l">
                <varRef name="refi" slot="4"/>
               </att>
               <choose line="1422">
                <fn name="exists">
                 <varRef name="instanceField" slot="5"/>
                </fn>
                <valueOf line="1423" flags="l">
                 <convert from="xs:anyAtomicType" to="xs:string">
                  <data>
                   <varRef name="instanceField" slot="5"/>
                  </data>
                 </convert>
                </valueOf>
                <true/>
                <sequence line="1425">
                 <valueOf flags="Sl">
                  <str val=""/>
                 </valueOf>
                 <valueOf flags="l">
                  <str val="  "/>
                 </valueOf>
                </sequence>
               </choose>
               <choose line="1428">
                <fn name="exists">
                 <varRef name="hints" slot="7"/>
                </fn>
                <att line="1429" name="title" flags="l">
                 <fn name="string-join">
                  <convert from="xs:untypedAtomic" to="xs:string">
                   <data>
                    <mergeAdj>
                     <varRef name="hints" slot="7"/>
                    </mergeAdj>
                   </data>
                  </convert>
                  <str val=" "/>
                 </fn>
                </att>
               </choose>
              </sequence>
             </elem>
            </let>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="16" rank="1" minImp="0" slots="7" flags="s" line="1891" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}trigger)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='trigger';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1892">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1893" name="Q{}context-position" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|context-position">
       <check card="1" diag="8|0|XTTE0590|context-position">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1897" var="myid" as="xs:string" slot="2" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
        </fn>
        <str val="-"/>
        <choose line="1895">
         <varRef name="context-position" slot="1"/>
         <varRef name="context-position" slot="1"/>
         <true/>
         <fn name="string">
          <varRef name="position" slot="0"/>
         </fn>
        </choose>
       </fn>
      </choose>
      <sequence line="1899">
       <choose>
        <and op="and">
         <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="35" eval="7">
          <dot type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
         </ufCall>
         <fn name="empty">
          <filter flags="b">
           <slash simple="1">
            <dot type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="36" eval="7">
            <dot type="element()"/>
           </ufCall>
          </filter>
         </fn>
        </and>
        <ifCall line="1900" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setElementUsingIndexFunction"/>
         <arrayBlock>
          <varRef name="myid" slot="2"/>
          <dot type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
         </arrayBlock>
        </ifCall>
       </choose>
       <let line="1904" var="bindingi" as="node()?" slot="3" eval="7">
        <treat line="1905" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
         <check card="?" diag="3|0|XTTE0570|bindingi">
          <callT name="getBinding" bSlot="37">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1906" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
           </withParam>
          </callT>
         </check>
        </treat>
        <let line="1911" var="refi" as="xs:string" slot="4" eval="7">
         <treat line="1912" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
          <check card="1" diag="3|0|XTTE0570|refi">
           <cvUntyped to="xs:string">
            <data>
             <callT name="getDataRef" bSlot="38">
              <withParam name="Q{}this" flags="c" as="element()">
               <dot line="1913" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
              </withParam>
              <withParam name="Q{}bindingi" flags="c" as="node()?">
               <varRef line="1914" name="bindingi" slot="3"/>
              </withParam>
             </callT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line="1921" var="actions" as="map(*)*" slot="5" eval="8">
          <treat line="1922" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
           <callT name="setActions" bSlot="39">
            <withParam name="Q{}this" flags="c" as="element()">
             <dot line="1923" type="element(Q{http://www.w3.org/2002/xforms}trigger)"/>
            </withParam>
            <withParam name="Q{}nodeset" flags="t" as="xs:string">
             <varRef line="1924" name="refi" slot="4"/>
            </withParam>
           </callT>
          </treat>
          <sequence line="1928">
           <choose>
            <fn name="exists">
             <varRef name="actions" slot="5"/>
            </fn>
            <ifCall line="1929" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
             <check card="1" diag="0|0||ixsl:call">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
             </check>
             <str val="addAction"/>
             <arrayBlock>
              <varRef name="myid" slot="2"/>
              <varRef name="actions" slot="5"/>
             </arrayBlock>
            </ifCall>
           </choose>
           <let line="1932" var="innerbody" as="document-node()" slot="6" eval="7">
            <doc line="1934" validation="preserve">
             <choose>
              <fn name="exists">
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
              </fn>
              <applyT line="1935" bSlot="40">
               <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
              </applyT>
              <true/>
              <valueOf line="1937" flags="l">
               <str val=" "/>
              </valueOf>
             </choose>
            </doc>
            <elem line="1941" name="span" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
             <sequence>
              <att name="style" flags="l">
               <str val="display:'inline'"/>
              </att>
              <compElem line="1952" flags="l">
               <choose role="name" line="1944">
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}appearance" chk="0"/>
                 <str val="minimal"/>
                </gc>
                <str val="a"/>
                <true/>
                <str val="button"/>
               </choose>
               <sequence role="content" line="1953">
                <choose>
                 <gc op="=" card="1:1" comp="CCC">
                  <attVal name="Q{}appearance" chk="0"/>
                  <str val="minimal"/>
                 </gc>
                 <att line="1954" name="type" flags="l">
                  <str val="button"/>
                 </att>
                </choose>
                <att line="1957" name="data-ref" flags="l">
                 <varRef name="refi" slot="4"/>
                </att>
                <att line="1958" name="data-action" flags="l">
                 <varRef name="myid" slot="2"/>
                </att>
                <copyOf line="1959" flags="vc">
                 <varRef name="innerbody" slot="6"/>
                </copyOf>
               </sequence>
              </compElem>
             </sequence>
            </elem>
           </let>
          </sequence>
         </let>
        </let>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="4" rank="1" minImp="0" slots="9" flags="s" line="1061" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}output)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='output';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1062">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1063" name="Q{}context-position" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|context-position">
       <check card="1" diag="8|0|XTTE0590|context-position">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1067" var="myid" as="xs:string" slot="2" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}output)"/>
        </fn>
        <str val="-"/>
        <choose line="1065">
         <varRef name="context-position" slot="1"/>
         <varRef name="context-position" slot="1"/>
         <true/>
         <fn name="string">
          <varRef name="position" slot="0"/>
         </fn>
        </choose>
       </fn>
      </choose>
      <sequence line="1069">
       <choose>
        <and op="and">
         <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="41" eval="7">
          <dot type="element(Q{http://www.w3.org/2002/xforms}output)"/>
         </ufCall>
         <fn name="empty">
          <filter flags="b">
           <slash simple="1">
            <dot type="element(Q{http://www.w3.org/2002/xforms}output)"/>
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="42" eval="7">
            <dot type="element()"/>
           </ufCall>
          </filter>
         </fn>
        </and>
        <ifCall line="1070" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setElementUsingIndexFunction"/>
         <arrayBlock>
          <varRef name="myid" slot="2"/>
          <dot type="element(Q{http://www.w3.org/2002/xforms}output)"/>
         </arrayBlock>
        </ifCall>
       </choose>
       <let line="1075" var="bindingi" as="node()?" slot="3" eval="7">
        <treat line="1076" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
         <check card="?" diag="3|0|XTTE0570|bindingi">
          <callT name="getBinding" bSlot="43">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1077" type="element(Q{http://www.w3.org/2002/xforms}output)"/>
           </withParam>
          </callT>
         </check>
        </treat>
        <let line="1082" var="refi" as="xs:string" slot="4" eval="7">
         <treat line="1083" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
          <check card="1" diag="3|0|XTTE0570|refi">
           <cvUntyped to="xs:string">
            <data>
             <callT name="getDataRef" bSlot="44">
              <withParam name="Q{}this" flags="c" as="element()">
               <dot line="1084" type="element(Q{http://www.w3.org/2002/xforms}output)"/>
              </withParam>
              <withParam name="Q{}bindingi" flags="c" as="node()?">
               <varRef line="1085" name="bindingi" slot="3"/>
              </withParam>
             </callT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line="1090" var="instanceField" as="node()?" slot="5" eval="7">
          <treat line="1091" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
           <check card="?" diag="3|0|XTTE0570|instanceField">
            <callT name="getReferencedInstanceField" bSlot="45">
             <withParam name="Q{}refi" flags="c" as="xs:string">
              <varRef line="1092" name="refi" slot="4"/>
             </withParam>
            </callT>
           </check>
          </treat>
          <let line="1103" var="namespace-context-item" as="element()" slot="6" eval="7">
           <choose>
            <fn name="exists">
             <varRef name="instanceField" slot="5"/>
            </fn>
            <choose>
             <fn name="exists">
              <filter flags="b">
               <varRef name="instanceField" slot="5"/>
               <fn name="exists">
                <axis name="self" nodeTest="text()" jsTest="return item.nodeType===3;"/>
               </fn>
              </filter>
             </fn>
             <check card="1" diag="3|0|XTTE0570|namespace-context-item">
              <slash simple="1">
               <varRef name="instanceField" slot="5"/>
               <axis name="parent" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
             </check>
             <true/>
             <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|namespace-context-item">
              <check card="1" diag="3|0|XTTE0570|namespace-context-item">
               <varRef name="instanceField" slot="5"/>
              </check>
             </treat>
            </choose>
            <true/>
            <ufCall name="Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations" tailCall="false" bSlot="46" eval="4">
             <check card="1" diag="0|0||xforms:addNamespaceDeclarations">
              <slash simple="1">
               <root/>
               <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
             </check>
            </ufCall>
           </choose>
           <let line="1105" var="valueExecuted" as="xs:string" slot="7" eval="7">
            <choose line="1107">
             <fn name="exists">
              <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
             </fn>
             <evaluate line="1108" as="xs:string" dxns="">
              <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="47" eval="7">
               <check card="1" diag="0|0||xforms:impose">
                <cvUntyped to="xs:string">
                 <attVal name="Q{}value" chk="0"/>
                </cvUntyped>
               </check>
              </ufCall>
              <varRef role="cxt" name="instanceField" slot="5"/>
              <varRef role="nsCxt" name="namespace-context-item" slot="6"/>
              <str role="sa" val="no"/>
              <map role="wp" size="0"/>
             </evaluate>
             <true/>
             <cvUntyped line="1111" to="xs:string">
              <cast as="xs:untypedAtomic" emptiable="0">
               <fn name="string">
                <convert from="xs:anyAtomicType" to="xs:string">
                 <data>
                  <varRef name="instanceField" slot="5"/>
                 </data>
                </convert>
               </fn>
              </cast>
             </cvUntyped>
            </choose>
            <let line="1117" var="relevantVar" as="xs:boolean" slot="8" eval="7">
             <choose line="1119">
              <and op="and">
               <and op="and">
                <fn name="exists">
                 <varRef name="bindingi" slot="3"/>
                </fn>
                <fn name="exists">
                 <slash simple="1">
                  <varRef name="bindingi" slot="3"/>
                  <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                 </slash>
                </fn>
               </and>
               <fn name="exists">
                <varRef name="instanceField" slot="5"/>
               </fn>
              </and>
              <treat line="1120" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|relevantVar">
               <check card="1" diag="3|0|XTTE0570|relevantVar">
                <cvUntyped to="xs:boolean">
                 <data>
                  <evaluate dxns="">
                   <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="48" eval="4">
                    <check card="1" diag="0|0||xforms:impose">
                     <cvUntyped to="xs:string">
                      <data>
                       <slash simple="1">
                        <varRef name="bindingi" slot="3"/>
                        <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                       </slash>
                      </data>
                     </cvUntyped>
                    </check>
                   </ufCall>
                   <varRef role="cxt" name="instanceField" slot="5"/>
                   <varRef role="nsCxt" name="namespace-context-item" slot="6"/>
                   <str role="sa" val="no"/>
                   <map role="wp" size="0"/>
                  </evaluate>
                 </data>
                </cvUntyped>
               </check>
              </treat>
              <true/>
              <true/>
             </choose>
             <sequence line="1132">
              <elem name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
               <sequence>
                <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="49" eval="7">
                 <dot type="element(Q{http://www.w3.org/2002/xforms}output)"/>
                </ufCall>
                <applyT line="1134" bSlot="50">
                 <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
                </applyT>
                <elem line="1137" name="span" nsuri="" flags="l">
                 <sequence>
                  <att name="id" flags="l">
                   <varRef name="myid" slot="2"/>
                  </att>
                  <att line="1138" name="style" flags="l">
                   <choose>
                    <varRef name="relevantVar" slot="8"/>
                    <str val="display:inline"/>
                    <true/>
                    <str val="display:none"/>
                   </choose>
                  </att>
                  <att line="1139" name="data-ref" flags="l">
                   <varRef name="refi" slot="4"/>
                  </att>
                  <varRef line="1141" name="valueExecuted" slot="7"/>
                 </sequence>
                </elem>
               </sequence>
              </elem>
              <ifCall line="1158" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="addOutput"/>
               <arrayBlock>
                <varRef name="myid" slot="2"/>
                <ifCall line="1148" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                 <sequence>
                  <choose>
                   <varRef name="refi" slot="4"/>
                   <ifCall line="1149" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                    <str val="@ref"/>
                    <varRef name="refi" slot="4"/>
                   </ifCall>
                  </choose>
                  <choose line="1152">
                   <fn name="exists">
                    <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
                   </fn>
                   <ifCall line="1153" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                    <str val="@value"/>
                    <cast as="xs:string" emptiable="1">
                     <attVal name="Q{}value" chk="0"/>
                    </cast>
                   </ifCall>
                  </choose>
                 </sequence>
                 <map size="2">
                  <str val="duplicates"/>
                  <str val="reject"/>
                  <str val="duplicates-error-code"/>
                  <str val="XTDE3365"/>
                 </map>
                </ifCall>
               </arrayBlock>
              </ifCall>
             </sequence>
            </let>
           </let>
          </let>
         </let>
        </let>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="s" line="993" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
    <applyT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="994" flags="t" bSlot="51">
     <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="12" rank="1" minImp="0" slots="1" flags="s" line="1595" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1596">
     <param name="Q{}selectedValue" slot="0" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|selectedValue">
       <check card="1" diag="8|0|XTTE0590|selectedValue">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <elem line="1598" name="option" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
      <sequence>
       <att name="value" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='value';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </att>
       <choose line="1599">
        <gc op="=" card="1:1" comp="CCC">
         <varRef name="selectedValue" slot="0"/>
         <cast as="xs:string" emptiable="1">
          <atomSing card="?" diag="2|0||cast as">
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='value';"/>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </slash>
          </atomSing>
         </cast>
        </gc>
        <att line="1600" name="selected" flags="l">
         <varRef name="selectedValue" slot="0"/>
        </att>
       </choose>
       <valueOf line="1603" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1973" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='script';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1979" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1980" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1981" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1993">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1994" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="7" flags="s" line="1452" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='select';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1453">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1454" name="Q{}context-position" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|context-position">
       <check card="1" diag="8|0|XTTE0590|context-position">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1458" var="myid" as="xs:string" slot="2" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element()"/>
        </fn>
        <str val="-"/>
        <choose line="1456">
         <varRef name="context-position" slot="1"/>
         <varRef name="context-position" slot="1"/>
         <true/>
         <fn name="string">
          <varRef name="position" slot="0"/>
         </fn>
        </choose>
       </fn>
      </choose>
      <sequence line="1460">
       <choose>
        <and op="and">
         <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="4" eval="7">
          <dot type="element()"/>
         </ufCall>
         <fn name="empty">
          <filter flags="b">
           <slash simple="1">
            <dot type="element()"/>
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="5" eval="7">
            <dot type="element()"/>
           </ufCall>
          </filter>
         </fn>
        </and>
        <ifCall line="1461" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setElementUsingIndexFunction"/>
         <arrayBlock>
          <varRef name="myid" slot="2"/>
          <dot type="element()"/>
         </arrayBlock>
        </ifCall>
       </choose>
       <let line="1468" var="bindingi" as="node()?" slot="3" eval="7">
        <treat line="1469" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
         <check card="?" diag="3|0|XTTE0570|bindingi">
          <callT name="getBinding" bSlot="6">
           <withParam name="Q{}this" flags="c" as="element()">
            <dot line="1470" type="element()"/>
           </withParam>
          </callT>
         </check>
        </treat>
        <let line="1475" var="refi" as="xs:string" slot="4" eval="7">
         <treat line="1476" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
          <check card="1" diag="3|0|XTTE0570|refi">
           <cvUntyped to="xs:string">
            <data>
             <callT name="getDataRef" bSlot="7">
              <withParam name="Q{}this" flags="c" as="element()">
               <dot line="1477" type="element()"/>
              </withParam>
              <withParam name="Q{}bindingi" flags="c" as="node()?">
               <varRef line="1478" name="bindingi" slot="3"/>
              </withParam>
             </callT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <let line="1483" var="instanceField" as="node()?" slot="5" eval="7">
          <treat line="1484" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
           <check card="?" diag="3|0|XTTE0570|instanceField">
            <callT name="getReferencedInstanceField" bSlot="8">
             <withParam name="Q{}refi" flags="c" as="xs:string">
              <varRef line="1485" name="refi" slot="4"/>
             </withParam>
            </callT>
           </check>
          </treat>
          <let line="1490" var="actions" as="map(*)*" slot="6" eval="8">
           <treat line="1491" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
            <callT name="setActions" bSlot="9">
             <withParam name="Q{}this" flags="c" as="element()">
              <dot line="1492" type="element()"/>
             </withParam>
             <withParam name="Q{}nodeset" flags="t" as="xs:string">
              <varRef line="1493" name="refi" slot="4"/>
             </withParam>
            </callT>
           </treat>
           <sequence line="1497">
            <choose>
             <fn name="exists">
              <varRef name="actions" slot="6"/>
             </fn>
             <ifCall line="1498" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="addAction"/>
              <arrayBlock>
               <varRef name="myid" slot="2"/>
               <varRef name="actions" slot="6"/>
              </arrayBlock>
             </ifCall>
            </choose>
            <elem line="1515" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
             <sequence>
              <att name="class" flags="l">
               <str val="xforms-select"/>
              </att>
              <applyT line="1516" bSlot="10">
               <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
              </applyT>
              <elem line="1519" name="select" nsuri="" flags="l" namespaces="xd rdf xhtml js in fn map array ev">
               <sequence>
                <ufCall name="Q{http://www.w3.org/2002/xforms}getClass" tailCall="false" bSlot="11" eval="7">
                 <dot type="element()"/>
                </ufCall>
                <copyOf line="1520" flags="vc">
                 <except op="except">
                  <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
                  <docOrder intra="1">
                   <sequence>
                    <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name==='class'"/>
                    <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
                    <axis name="attribute" nodeTest="attribute(Q{}incremental)" jsTest="return item.name==='incremental'"/>
                   </sequence>
                  </docOrder>
                 </except>
                </copyOf>
                <att line="1522" name="data-ref" flags="l">
                 <varRef name="refi" slot="4"/>
                </att>
                <att line="1523" name="data-element" flags="l">
                 <lastOf line="1513">
                  <fn name="tokenize">
                   <varRef name="refi" slot="4"/>
                   <str val="/"/>
                   <str val=""/>
                  </fn>
                 </lastOf>
                </att>
                <choose line="1525">
                 <and op="and">
                  <fn name="exists">
                   <varRef name="bindingi" slot="3"/>
                  </fn>
                  <fn name="exists">
                   <slash simple="1">
                    <varRef name="bindingi" slot="3"/>
                    <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                   </slash>
                  </fn>
                 </and>
                 <att line="1526" name="data-constraint" flags="l">
                  <convert from="xs:untypedAtomic" to="xs:string">
                   <data>
                    <slash simple="1">
                     <varRef name="bindingi" slot="3"/>
                     <axis name="attribute" nodeTest="attribute(Q{}constraint)" jsTest="return item.name==='constraint'"/>
                    </slash>
                   </data>
                  </convert>
                 </att>
                </choose>
                <choose line="1529">
                 <vc op="eq" onEmpty="0" comp="CCC">
                  <fn name="local-name">
                   <dot type="element()"/>
                  </fn>
                  <str val="select"/>
                 </vc>
                 <sequence line="1532">
                  <att name="multiple" flags="l">
                   <str val="true"/>
                  </att>
                  <att name="size" flags="l">
                   <convert from="xs:integer" to="xs:string">
                    <fn name="count">
                     <axis name="descendant" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                    </fn>
                   </convert>
                  </att>
                 </sequence>
                </choose>
                <choose line="1535">
                 <fn name="exists">
                  <varRef name="actions" slot="6"/>
                 </fn>
                 <att line="1536" name="data-action" flags="l">
                  <varRef name="myid" slot="2"/>
                 </att>
                </choose>
                <applyT line="1539" bSlot="12">
                 <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='item';"/>
                 <withParam name="Q{}selectedValue" as="xs:string">
                  <choose line="1504">
                   <fn name="exists">
                    <varRef name="instanceField" slot="5"/>
                   </fn>
                   <cvUntyped line="1505" to="xs:string">
                    <cast as="xs:untypedAtomic" emptiable="0">
                     <fn name="string">
                      <convert from="xs:anyAtomicType" to="xs:string">
                       <data>
                        <varRef name="instanceField" slot="5"/>
                       </data>
                      </convert>
                     </fn>
                    </cast>
                   </cvUntyped>
                   <true/>
                   <str val=""/>
                  </choose>
                 </withParam>
                </applyT>
               </sequence>
              </elem>
             </sequence>
            </elem>
           </sequence>
          </let>
         </let>
        </let>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="1" flags="s" line="1973" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='action';"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1979" var="action-map" as="map(*)" slot="0" eval="7">
     <treat line="1980" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|action-map">
      <check card="1" diag="3|0|XTTE0570|action-map">
       <callT name="setAction" bSlot="2">
        <withParam name="Q{}this" flags="c" as="element()">
         <dot line="1981" type="element()"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <choose line="1993">
      <fn name="exists">
       <varRef name="action-map" slot="0"/>
      </fn>
      <varRef line="1994" name="action-map" slot="0"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="1" minImp="0" slots="0" flags="s" line="1577" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='label';"/>
    <elem role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1580" name="label" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
     <choose>
      <fn name="exists">
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </fn>
      <applyT line="1581" bSlot="52">
       <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </applyT>
      <true/>
      <valueOf flags="l">
       <str val=" "/>
      </valueOf>
     </choose>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="13" rank="1" minImp="0" slots="4" flags="s" line="1616" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2002/xforms}group)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='group';"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1617">
     <param name="Q{}position" slot="0" as="xs:integer">
      <int role="select" val="0"/>
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|position">
       <check card="1" diag="8|0|XTTE0590|position">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <param line="1618" name="Q{}context-position" slot="1" as="xs:string">
      <str role="select" val=""/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|context-position">
       <check card="1" diag="8|0|XTTE0590|context-position">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="1622" var="myid" as="xs:string" slot="2" eval="7">
      <choose>
       <fn name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|myid">
        <cvUntyped to="xs:string">
         <attVal name="Q{}id" chk="0"/>
        </cvUntyped>
       </check>
       <true/>
       <fn name="concat">
        <fn name="generate-id">
         <dot type="element(Q{http://www.w3.org/2002/xforms}group)"/>
        </fn>
        <str val="-"/>
        <choose line="1620">
         <varRef name="context-position" slot="1"/>
         <varRef name="context-position" slot="1"/>
         <true/>
         <fn name="string">
          <varRef name="position" slot="0"/>
         </fn>
        </choose>
       </fn>
      </choose>
      <sequence line="1624">
       <choose>
        <and op="and">
         <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="53" eval="7">
          <dot type="element(Q{http://www.w3.org/2002/xforms}group)"/>
         </ufCall>
         <fn name="empty">
          <filter flags="b">
           <slash simple="1">
            <dot type="element(Q{http://www.w3.org/2002/xforms}group)"/>
            <axis name="ancestor" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <ufCall name="Q{http://www.w3.org/2002/xforms}usesIndexFunction" tailCall="false" bSlot="54" eval="7">
            <dot type="element()"/>
           </ufCall>
          </filter>
         </fn>
        </and>
        <ifCall line="1625" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="setElementUsingIndexFunction"/>
         <arrayBlock>
          <varRef name="myid" slot="2"/>
          <dot type="element(Q{http://www.w3.org/2002/xforms}group)"/>
         </arrayBlock>
        </ifCall>
       </choose>
       <let line="1628" var="refi" as="xs:string?" slot="3" eval="7">
        <choose line="1630">
         <fn name="exists">
          <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
         </fn>
         <cvUntyped to="xs:string">
          <attVal name="Q{}nodeset" chk="0"/>
         </cvUntyped>
         <fn line="1631" name="exists">
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </fn>
         <cvUntyped line="1631" to="xs:string">
          <attVal name="Q{}ref" chk="0"/>
         </cvUntyped>
        </choose>
        <elem line="1638" name="div" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
         <sequence>
          <att name="id" flags="l">
           <varRef name="myid" slot="2"/>
          </att>
          <choose line="1639">
           <fn name="exists">
            <varRef name="refi" slot="3"/>
           </fn>
           <att line="1640" name="data-group-ref" flags="l">
            <varRef name="refi" slot="3"/>
           </att>
          </choose>
          <applyT line="1642" bSlot="55">
           <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           <withParam name="Q{}nodeset" flags="t" as="xs:string?">
            <choose line="1643">
             <fn name="exists">
              <varRef name="refi" slot="3"/>
             </fn>
             <varRef name="refi" slot="3"/>
             <true/>
             <str val=""/>
            </choose>
           </withParam>
          </applyT>
         </sequence>
        </elem>
       </let>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="9" rank="0" minImp="0" slots="0" flags="s" line="1556" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1558" flags="cin">
     <applyT role="content" bSlot="56">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="2" minImp="0" slots="0" flags="s" line="1567" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===3;"/>
     <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1567" name="ancestor" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="9" rank="0" minImp="0" slots="0" flags="s" line="1556" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
    <copy role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1558" flags="cin">
     <applyT role="content" bSlot="56">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="54" binds="1 1 1">
  <template name="Q{}getDataRef" flags="os" line="3093" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3094">
    <param name="Q{}this" slot="0" flags="r" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3095" name="Q{}nodeset" slot="1" flags="t" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|nodeset">
      <check card="1" diag="8|0|XTTE0590|nodeset">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="3096" name="Q{}bindingi" slot="2" as="node()?">
     <empty role="select"/>
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|bindingi">
      <check card="?" diag="8|0|XTTE0590|bindingi">
       <supplied slot="2"/>
      </check>
     </treat>
    </param>
    <let line="3104" var="this-ref" as="xs:string?" slot="3" eval="7">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
       </slash>
      </fn>
      <fn name="normalize-space">
       <cast as="xs:string" emptiable="1">
        <data>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
         </slash>
        </data>
       </cast>
      </fn>
      <fn name="exists">
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
       </slash>
      </fn>
      <fn name="normalize-space">
       <cast as="xs:string" emptiable="1">
        <data>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </slash>
        </data>
       </cast>
      </fn>
     </choose>
     <choose line="3129">
      <fn name="exists">
       <varRef name="bindingi" slot="2"/>
      </fn>
      <ufCall line="3131" name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="0" eval="0 4">
       <str val=""/>
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <choose line="3109">
         <fn name="exists">
          <varRef name="bindingi" slot="2"/>
         </fn>
         <cvUntyped line="3120" to="xs:string">
          <cast as="xs:untypedAtomic" emptiable="0">
           <choose>
            <fn name="exists">
             <slash simple="1">
              <varRef name="bindingi" slot="2"/>
              <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
             </slash>
            </fn>
            <fn name="normalize-space">
             <cast as="xs:string" emptiable="1">
              <data>
               <slash simple="1">
                <varRef name="bindingi" slot="2"/>
                <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
               </slash>
              </data>
             </cast>
            </fn>
            <true/>
            <fn name="normalize-space">
             <cast as="xs:string" emptiable="1">
              <data>
               <slash simple="1">
                <varRef name="bindingi" slot="2"/>
                <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
               </slash>
              </data>
             </cast>
            </fn>
           </choose>
          </cast>
         </cvUntyped>
        </choose>
       </check>
      </ufCall>
      <fn line="3133" name="exists">
       <varRef name="this-ref" slot="3"/>
      </fn>
      <ufCall line="3135" name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="1" eval="6 7">
       <varRef name="nodeset" slot="1"/>
       <check card="1" diag="0|1||xforms:resolveXPathStrings">
        <varRef name="this-ref" slot="3"/>
       </check>
      </ufCall>
      <varRef line="3137" name="nodeset" slot="1"/>
      <ufCall line="3140" name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="2" eval="0 6">
       <str val=""/>
       <varRef name="nodeset" slot="1"/>
      </ufCall>
      <true/>
      <cvUntyped line="3144" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <varRef name="nodeset" slot="1"/>
       </cast>
      </cvUntyped>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id="6" binds="20">
  <function name="Q{http://www.w3.org/2002/xforms}setInstance-JS" line="3007" module="saxon-xforms.xsl" eval="7" flags="pU" as="empty-sequence()" slots="2">
   <arg name="ref" as="xs:string"/>
   <arg name="updatedInstance" as="element()"/>
   <check role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3015" card="°" diag="5|0|XTTE0780|xforms:setInstance-JS">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="setInstance"/>
     <arrayBlock>
      <check line="3013" card="1" diag="3|0|XTTE0570|this-instance-id">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
         <varRef name="ref" slot="0"/>
        </ufCall>
        <str val="instance-id"/>
       </ifCall>
      </check>
      <varRef name="updatedInstance" slot="1"/>
     </arrayBlock>
    </ifCall>
   </check>
  </function>
 </co>
 <co id="3" binds="34 20">
  <function name="Q{http://www.w3.org/2002/xforms}getInstance-JS" line="2982" module="saxon-xforms.xsl" eval="7" flags="pU" as="element()?" slots="1">
   <arg name="ref" as="xs:string"/>
   <tailCallLoop role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2986">
    <choose>
     <fn name="not">
      <varRef name="ref" slot="0"/>
     </fn>
     <treat line="2987" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="5|0|XTTE0780|xforms:getInstance-JS">
      <message>
       <valueOf role="select">
        <str val="[xforms:getInstance-JS] Empty ref supplied, no instance will be returned"/>
       </valueOf>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
     </treat>
     <true/>
     <ufCall line="2992" name="Q{http://www.w3.org/2002/xforms}instance" tailCall="foreign" bSlot="0" eval="7">
      <check line="2990" card="1" diag="3|0|XTTE0570|this-instance-id">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <ufCall name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="1" eval="6">
         <varRef name="ref" slot="0"/>
        </ufCall>
        <str val="instance-id"/>
       </ifCall>
      </check>
     </ufCall>
    </choose>
   </tailCallLoop>
  </function>
 </co>
 <co id="20" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getInstanceMap" line="2945" module="saxon-xforms.xsl" eval="8" flags="pU" as="map(xs:string, xs:string)" slots="3">
   <arg name="nodeset" as="xs:string"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2966" var="vv:v0" as="map(xs:string, xs:string)+" slot="1" eval="4">
    <sequence>
     <map size="1">
      <str val="instance-id"/>
      <str val="saxon-forms-default"/>
     </map>
     <ifCall line="2967" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
      <str val="xpath"/>
      <fn name="normalize-space">
       <varRef name="nodeset" slot="0"/>
      </fn>
     </ifCall>
    </sequence>
    <ifCall line="2950" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
     <analyzeString>
      <fn role="select" name="normalize-space">
       <varRef name="nodeset" slot="0"/>
      </fn>
      <str role="regex" val="^instance\s*\(\s*'(.*)'\s*\)\s*(/\s*(.*)|)$"/>
      <str role="flags" val=""/>
      <let role="matching" line="2952" var="xpath" as="xs:string" slot="2" eval="7">
       <choose line="2954">
        <fn name="regex-group">
         <int val="2"/>
        </fn>
        <fn line="2955" name="regex-group">
         <int val="3"/>
        </fn>
        <true/>
        <str val="."/>
       </choose>
       <sequence line="2962">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
         <str val="instance-id"/>
         <fn name="regex-group">
          <int val="1"/>
         </fn>
        </ifCall>
        <ifCall line="2963" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
         <str val="xpath"/>
         <varRef name="xpath" slot="2"/>
        </ifCall>
       </sequence>
      </let>
      <varRef role="nonMatching" line="2966" name="vv:v0" slot="1"/>
     </analyzeString>
     <map size="2">
      <str val="duplicates"/>
      <str val="reject"/>
      <str val="duplicates-error-code"/>
      <str val="XTDE3365"/>
     </map>
    </ifCall>
   </let>
  </function>
 </co>
 <co id="2" binds="20">
  <function name="Q{http://www.w3.org/2002/xforms}getInstanceId" line="2932" module="saxon-xforms.xsl" eval="8" flags="pU" as="xs:string" slots="1">
   <arg name="nodeset" as="xs:string"/>
   <cvUntyped role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2935" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="string">
      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
       <ufCall line="2934" name="Q{http://www.w3.org/2002/xforms}getInstanceMap" tailCall="false" bSlot="0" eval="6">
        <varRef name="nodeset" slot="0"/>
       </ufCall>
       <str val="instance-id"/>
      </ifCall>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="56" binds="">
  <globalVariable name="Q{}debugMode" type="xs:boolean" line="62" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <true/>
  </globalVariable>
 </co>
 <co id="57" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}getWhileStatement" line="731" module="saxon-xforms.xsl" eval="7" flags="pU" as="xs:string?" slots="3">
   <arg name="map" as="map(*)"/>
   <choose role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="734">
    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
     <varRef name="map" slot="0"/>
     <str val="@while"/>
    </ifCall>
    <treat line="735" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getWhileStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getWhileStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="map" slot="0"/>
         <str val="@while"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
    <true/>
    <treat line="738" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|xforms:getWhileStatement">
     <check card="?" diag="5|0|XTTE0780|xforms:getWhileStatement">
      <cvUntyped to="xs:string">
       <data>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:get">
          <check card="1" diag="0|0||map:get">
           <let var="vv:LHS730663242" as="map(*)" slot="1" eval="1">
            <varRef name="map" slot="0"/>
            <for var="vv:STAR625668683" as="xs:anyAtomicType" slot="2">
             <ifCall role="in" name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
              <varRef name="vv:LHS730663242" slot="1"/>
             </ifCall>
             <ifCall role="return" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
              <varRef name="vv:LHS730663242" slot="1"/>
              <varRef name="vv:STAR625668683" slot="2"/>
             </ifCall>
            </for>
           </let>
          </check>
         </treat>
         <str val="@while"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </choose>
  </function>
 </co>
 <co id="58" binds="3 13 2 16">
  <template name="Q{}DOMActivate" flags="os" line="4005" module="saxon-xforms.xsl" slots="6">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="4006">
    <param name="Q{}form-control" slot="0" flags="i" as="node()">
     <treat role="conversion" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="8|0|XTTE0590|form-control">
      <check card="1" diag="8|0|XTTE0590|form-control">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="4008" var="actions" as="map(*)?" slot="1" eval="7">
     <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="getAction"/>
       <arrayBlock>
        <fn name="string">
         <slash simple="1">
          <varRef name="form-control" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
         </slash>
        </fn>
       </arrayBlock>
      </ifCall>
     </treat>
     <let line="4010" var="refi" as="attribute(Q{}data-ref)?" slot="2" eval="8">
      <slash simple="1">
       <varRef name="form-control" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}data-ref)" jsTest="return item.name==='data-ref'"/>
      </slash>
      <let line="4014" var="instanceXML" as="element()?" slot="3" eval="7">
       <ufCall name="Q{http://www.w3.org/2002/xforms}getInstance-JS" tailCall="false" bSlot="0" eval="7">
        <check card="1" diag="0|0||xforms:getInstance-JS">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="refi" slot="2"/>
          </data>
         </cvUntyped>
        </check>
       </ufCall>
       <let line="4016" var="updatedInstanceXML" as="element()?" slot="4" eval="7">
        <choose line="4017">
         <fn name="exists">
          <varRef name="instanceXML" slot="3"/>
         </fn>
         <treat line="4018" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|updatedInstanceXML">
          <check card="?" diag="3|0|XTTE0570|updatedInstanceXML">
           <applyT mode="Q{}form-check-initial" bSlot="1">
            <varRef role="select" name="instanceXML" slot="3"/>
            <withParam name="Q{}instance-id" as="xs:string">
             <ufCall line="4012" name="Q{http://www.w3.org/2002/xforms}getInstanceId" tailCall="false" bSlot="2" eval="7">
              <check card="1" diag="0|0||xforms:getInstanceId">
               <cvUntyped to="xs:string">
                <data>
                 <varRef name="refi" slot="2"/>
                </data>
               </cvUntyped>
              </check>
             </ufCall>
            </withParam>
           </applyT>
          </check>
         </treat>
        </choose>
        <forEach line="4024">
         <varRef name="actions" slot="1"/>
         <let line="4025" var="action-map" as="map(*)" slot="5" eval="7">
          <dot type="map(*)"/>
          <choose line="4028">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}contains" type="xs:boolean">
            <varRef name="action-map" slot="5"/>
            <str val="@event"/>
           </ifCall>
           <choose line="4029">
            <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
               <varRef name="action-map" slot="5"/>
               <str val="@event"/>
              </ifCall>
             </data>
             <str val="DOMActivate"/>
            </gc>
            <callT line="4030" name="applyActions" bSlot="3" flags="t">
             <withParam name="Q{}action-map" flags="t" as="item()">
              <varRef line="4031" name="action-map" slot="5"/>
             </withParam>
             <withParam name="Q{}instanceXML" flags="t" as="element()?">
              <varRef line="4032" name="updatedInstanceXML" slot="4"/>
             </withParam>
            </callT>
           </choose>
          </choose>
         </let>
        </forEach>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="55" binds="45">
  <template name="Q{}setActions" flags="os" line="3323" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3324">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <applyT line="3326" flags="t" bSlot="0">
     <union role="select" op="|">
      <union op="|">
       <union op="|">
        <union op="|">
         <union op="|">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}action)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='action';"/>
          </slash>
          <filter flags="b">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="child" nodeTest="Q{http://www.w3.org/2002/xforms}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2002/xforms'"/>
           </slash>
           <gc op="=" card="N:1" comp="CCC">
            <literal count="15">
             <str val="setvalue"/>
             <str val="insert"/>
             <str val="delete"/>
             <str val="setindex"/>
             <str val="toggle"/>
             <str val="setfocus"/>
             <str val="dispatch"/>
             <str val="rebuild"/>
             <str val="recalculate"/>
             <str val="revalidate"/>
             <str val="refresh"/>
             <str val="reset"/>
             <str val="load"/>
             <str val="send"/>
             <str val="message"/>
            </literal>
            <fn name="local-name">
             <dot type="Q{http://www.w3.org/2002/xforms}*"/>
            </fn>
           </gc>
          </filter>
         </union>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}show)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='show';"/>
         </slash>
        </union>
        <slash simple="1">
         <varRef name="this" slot="0"/>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}hide)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='hide';"/>
        </slash>
       </union>
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='script';"/>
       </slash>
      </union>
      <slash simple="1">
       <varRef name="this" slot="0"/>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}unload)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='unload';"/>
      </slash>
     </union>
    </applyT>
   </sequence>
  </template>
 </co>
 <co id="59" binds="">
  <template name="Q{}serverError" flags="os" line="982" module="saxon-xforms.xsl" slots="1">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="983">
    <param name="Q{}responseMap" slot="0" flags="i" as="map(*)">
     <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|responseMap">
      <check card="1" diag="8|0|XTTE0590|responseMap">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <message line="984">
     <sequence role="select">
      <valueOf>
       <str val="Server side error HTTP response - "/>
      </valueOf>
      <valueOf>
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="responseMap" slot="0"/>
          <str val="status"/>
         </ifCall>
        </atomSing>
        <str val=" "/>
        <atomSing card="?" diag="0|2||fn:concat">
         <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
          <varRef name="responseMap" slot="0"/>
          <str val="message"/>
         </ifCall>
        </atomSing>
       </fn>
      </valueOf>
     </sequence>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </sequence>
  </template>
 </co>
 <co id="52" binds="53 54 19 4 19 1 1 45">
  <template name="Q{}setAction" flags="os" line="3462" module="saxon-xforms.xsl" slots="9">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3463">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3464" name="Q{}nodeset" slot="1" flags="t">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <let line="3467" var="bindingi" as="node()?" slot="2" eval="7">
     <treat line="3468" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
      <check card="?" diag="3|0|XTTE0570|bindingi">
       <callT name="getBinding" bSlot="0">
        <withParam name="Q{}this" flags="c" as="element()">
         <treat line="3469" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
          <dot flags="a"/>
         </treat>
        </withParam>
       </callT>
      </check>
     </treat>
     <let line="3474" var="refi" as="xs:string" slot="3" eval="7">
      <treat line="3475" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
       <check card="1" diag="3|0|XTTE0570|refi">
        <cvUntyped to="xs:string">
         <data>
          <callT name="getDataRef" bSlot="1">
           <withParam name="Q{}this" flags="c" as="element()">
            <treat line="3476" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
             <dot flags="a"/>
            </treat>
           </withParam>
           <withParam name="Q{}bindingi" flags="c" as="node()?">
            <varRef line="3477" name="bindingi" slot="2"/>
           </withParam>
          </callT>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <ifCall line="3485" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
       <sequence>
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
         <str val="name"/>
         <fn name="local-name">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
           <dot flags="a"/>
          </treat>
         </fn>
        </ifCall>
        <choose line="3487">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
          </slash>
         </fn>
         <ifCall line="3488" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@value"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3490">
         <and op="and">
          <fn name="empty">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name==='value'"/>
           </slash>
          </fn>
          <fn name="exists">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </slash>
          </fn>
         </and>
         <ifCall line="3491" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="value"/>
          <fn name="string">
           <dot flags="a"/>
          </fn>
         </ifCall>
        </choose>
        <ifCall line="3494" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
         <str val="@ref"/>
         <varRef name="refi" slot="3"/>
        </ifCall>
        <choose line="3500">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
          </slash>
         </fn>
         <ifCall line="3501" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@position"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}position)" jsTest="return item.name==='position'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3503">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
          </slash>
         </fn>
         <ifCall line="3504" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@at"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}at)" jsTest="return item.name==='at'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3508">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
          </slash>
         </fn>
         <ifCall line="3509" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@if"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}if)" jsTest="return item.name==='if'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3513">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
          </slash>
         </fn>
         <ifCall line="3514" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@while"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}while)" jsTest="return item.name==='while'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3517">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
          </slash>
         </fn>
         <ifCall line="3518" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@event"/>
          <fn name="string">
           <check card="?" diag="0|0||fn:string">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="@*:event" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===2&amp;&amp;q.local==='event'"/>
            </slash>
           </check>
          </fn>
         </ifCall>
        </choose>
        <choose line="3520">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
          </slash>
         </fn>
         <ifCall line="3521" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@submission"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}submission)" jsTest="return item.name==='submission'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3524">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}model)" jsTest="return item.name==='model'"/>
          </slash>
         </fn>
         <ifCall line="3525" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@model"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}model)" jsTest="return item.name==='model'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3528">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}control)" jsTest="return item.name==='control'"/>
          </slash>
         </fn>
         <ifCall line="3529" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@control"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}control)" jsTest="return item.name==='control'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3532">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}repeat)" jsTest="return item.name==='repeat'"/>
          </slash>
         </fn>
         <ifCall line="3533" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="@repeat"/>
          <fn name="string">
           <slash simple="1">
            <varRef name="this" slot="0"/>
            <axis name="attribute" nodeTest="attribute(Q{}repeat)" jsTest="return item.name==='repeat'"/>
           </slash>
          </fn>
         </ifCall>
        </choose>
        <choose line="3536">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}index)" jsTest="return item.name==='index'"/>
          </slash>
         </fn>
         <let line="3539" var="instanceField" as="node()?" slot="4" eval="7">
          <treat line="3540" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|instanceField">
           <check card="?" diag="3|0|XTTE0570|instanceField">
            <callT name="getReferencedInstanceField" bSlot="2">
             <withParam name="Q{}refi" flags="c" as="xs:string">
              <varRef line="3541" name="refi" slot="3"/>
             </withParam>
            </callT>
           </check>
          </treat>
          <let line="3552" var="namespace-context-item" as="element()" slot="5" eval="7">
           <choose>
            <fn name="exists">
             <varRef name="instanceField" slot="4"/>
            </fn>
            <choose>
             <fn name="exists">
              <filter flags="b">
               <varRef name="instanceField" slot="4"/>
               <fn name="exists">
                <axis name="self" nodeTest="text()" jsTest="return item.nodeType===3;"/>
               </fn>
              </filter>
             </fn>
             <check card="1" diag="3|0|XTTE0570|namespace-context-item">
              <slash simple="1">
               <varRef name="instanceField" slot="4"/>
               <axis name="parent" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
             </check>
             <true/>
             <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|namespace-context-item">
              <check card="1" diag="3|0|XTTE0570|namespace-context-item">
               <varRef name="instanceField" slot="4"/>
              </check>
             </treat>
            </choose>
            <true/>
            <treat as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|namespace-context-item">
             <check card="1" diag="3|0|XTTE0570|namespace-context-item">
              <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
               <check card="1" diag="0|0||ixsl:call">
                <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
               </check>
               <str val="getXForm"/>
               <arrayBlock/>
              </ifCall>
             </check>
            </treat>
           </choose>
           <let line="3554" var="index" as="xs:integer" slot="6" eval="7">
            <treat line="3555" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="3|0|XTTE0570|index">
             <check card="1" diag="3|0|XTTE0570|index">
              <cvUntyped to="xs:integer">
               <data>
                <evaluate dxns="">
                 <ufCall role="xpath" name="Q{http://www.w3.org/2002/xforms}impose" tailCall="false" bSlot="3" eval="4">
                  <check card="1" diag="0|0||xforms:impose">
                   <cvUntyped to="xs:string">
                    <data>
                     <slash simple="1">
                      <varRef name="this" slot="0"/>
                      <axis name="attribute" nodeTest="attribute(Q{}index)" jsTest="return item.name==='index'"/>
                     </slash>
                    </data>
                   </cvUntyped>
                  </check>
                 </ufCall>
                 <varRef role="cxt" name="instanceField" slot="4"/>
                 <varRef role="nsCxt" name="namespace-context-item" slot="5"/>
                 <str role="sa" val="no"/>
                 <map role="wp" size="0"/>
                </evaluate>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <ifCall line="3558" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
             <str val="@index"/>
             <varRef name="index" slot="6"/>
            </ifCall>
           </let>
          </let>
         </let>
        </choose>
        <choose line="3561">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}origin)" jsTest="return item.name==='origin'"/>
          </slash>
         </fn>
         <let line="3570" var="origin" as="node()?" slot="7" eval="7">
          <treat line="3571" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|origin">
           <check card="?" diag="3|0|XTTE0570|origin">
            <callT name="getReferencedInstanceField" bSlot="4">
             <withParam name="Q{}refi" flags="c" as="xs:string">
              <ufCall line="3568" name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="5" eval="7 4">
               <choose>
                <fn name="exists">
                 <slash simple="1">
                  <varRef name="this" slot="0"/>
                  <axis name="attribute" nodeTest="attribute(Q{}context)" jsTest="return item.name==='context'"/>
                 </slash>
                </fn>
                <ufCall name="Q{http://www.w3.org/2002/xforms}resolveXPathStrings" tailCall="false" bSlot="6" eval="7 4">
                 <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||xforms:resolveXPathStrings">
                  <check card="1" diag="0|0||xforms:resolveXPathStrings">
                   <cvUntyped to="xs:string">
                    <data>
                     <varRef name="nodeset" slot="1"/>
                    </data>
                   </cvUntyped>
                  </check>
                 </treat>
                 <check card="1" diag="0|1||xforms:resolveXPathStrings">
                  <cvUntyped to="xs:string">
                   <data>
                    <slash simple="1">
                     <varRef name="this" slot="0"/>
                     <axis name="attribute" nodeTest="attribute(Q{}context)" jsTest="return item.name==='context'"/>
                    </slash>
                   </data>
                  </cvUntyped>
                 </check>
                </ufCall>
                <true/>
                <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|origin-context">
                 <check card="1" diag="3|0|XTTE0570|origin-context">
                  <cvUntyped to="xs:string">
                   <data>
                    <varRef name="nodeset" slot="1"/>
                   </data>
                  </cvUntyped>
                 </check>
                </treat>
               </choose>
               <check line="3569" card="1" diag="0|1||xforms:resolveXPathStrings">
                <cvUntyped to="xs:string">
                 <data>
                  <slash simple="1">
                   <varRef name="this" slot="0"/>
                   <axis name="attribute" nodeTest="attribute(Q{}origin)" jsTest="return item.name==='origin'"/>
                  </slash>
                 </data>
                </cvUntyped>
               </check>
              </ufCall>
             </withParam>
            </callT>
           </check>
          </treat>
          <ifCall line="3576" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@origin"/>
           <varRef name="origin" slot="7"/>
          </ifCall>
         </let>
        </choose>
        <choose line="3580">
         <fn name="exists">
          <slash simple="1">
           <varRef name="this" slot="0"/>
           <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          </slash>
         </fn>
         <ifCall line="3581" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
          <str val="nested-actions"/>
          <let line="3582" var="array" as="map(*)*" slot="8" eval="3">
           <treat line="3583" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|array">
            <forEach>
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <applyT line="3584" bSlot="7">
              <dot role="select" type="element()"/>
             </applyT>
            </forEach>
           </treat>
           <ifCall line="3587" name="Q{http://www.w3.org/2005/xpath-functions/array}_from-sequence" type="array(*)">
            <varRef name="array" slot="8"/>
           </ifCall>
          </let>
         </ifCall>
        </choose>
       </sequence>
       <map size="2">
        <str val="duplicates"/>
        <str val="reject"/>
        <str val="duplicates-error-code"/>
        <str val="XTDE3365"/>
       </map>
      </ifCall>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="60" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}check-constraints-on-fields" line="880" module="saxon-xforms.xsl" eval="8" flags="pU" as="item()*" slots="4">
   <arg name="updatedInstanceXML" as="document-node()"/>
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="883" var="constraint-fieldsi" as="element()*" slot="1" eval="8">
    <filter flags="b">
     <slash simple="1">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
      <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </slash>
     <fn name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-constraint)" jsTest="return item.name==='data-constraint'"/>
     </fn>
    </filter>
    <forEach line="887">
     <varRef name="constraint-fieldsi" slot="1"/>
     <let line="888" var="contexti" as="node()" slot="2" eval="7">
      <treat line="889" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|contexti">
       <check card="1" diag="3|0|XTTE0570|contexti">
        <evaluate dxns="">
         <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
          <cvUntyped to="xs:string">
           <attVal name="Q{}data-ref" chk="0"/>
          </cvUntyped>
         </check>
         <varRef role="cxt" name="updatedInstanceXML" slot="0"/>
         <varRef role="nsCxt" name="updatedInstanceXML" slot="0"/>
         <str role="sa" val="no"/>
         <map role="wp" size="0"/>
        </evaluate>
       </check>
      </treat>
      <let line="892" var="resulti" as="xs:boolean" slot="3" eval="7">
       <treat line="895" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="3|0|XTTE0570|resulti">
        <check card="1" diag="3|0|XTTE0570|resulti">
         <cvUntyped to="xs:boolean">
          <data>
           <evaluate dxns="">
            <check role="xpath" card="1" diag="4|0||xsl:evaluate/xpath">
             <cvUntyped to="xs:string">
              <attVal name="Q{}data-constraint" chk="0"/>
             </cvUntyped>
            </check>
            <varRef role="cxt" name="contexti" slot="2"/>
            <varRef role="nsCxt" name="contexti" slot="2"/>
            <str role="sa" val="no"/>
            <map role="wp" size="0"/>
           </evaluate>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <choose line="903">
        <fn name="not">
         <varRef name="resulti" slot="3"/>
        </fn>
        <dot type="element()"/>
       </choose>
      </let>
     </let>
    </forEach>
   </let>
  </function>
 </co>
 <co id="37" binds="48">
  <mode name="Q{}binding-calculation-initial" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="2571" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2572">
     <param name="Q{}instance-id" slot="0" as="xs:string">
      <str role="select" val="saxon-forms-default"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
       <check card="1" diag="8|0|XTTE0590|instance-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="2574" var="calculationMap" as="map(xs:string, xs:string)" slot="1" eval="7">
      <treat as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|calculationMap">
       <check card="1" diag="3|0|XTTE0570|calculationMap">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
         <check card="1" diag="0|0||ixsl:call">
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
         </check>
         <str val="getCalculationMap"/>
         <arrayBlock/>
        </ifCall>
       </check>
      </treat>
      <copy line="2588" flags="cin">
       <applyT role="content" mode="Q{}binding-calculation" bSlot="0">
        <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <withParam name="Q{}curPath" as="xs:string">
         <choose line="2578">
          <vc op="eq" onEmpty="0" comp="CCC">
           <varRef name="instance-id" slot="0"/>
           <str val="saxon-forms-default"/>
          </vc>
          <str val=""/>
          <true/>
          <cvUntyped line="2582" to="xs:string">
           <cast as="xs:untypedAtomic" emptiable="0">
            <fn name="concat">
             <str val="instance('"/>
             <varRef name="instance-id" slot="0"/>
             <str val="')/"/>
            </fn>
           </cast>
          </cvUntyped>
         </choose>
        </withParam>
        <withParam name="Q{}calculationMap" flags="t" as="map(xs:string, xs:string)">
         <varRef line="2590" name="calculationMap" slot="1"/>
        </withParam>
       </applyT>
      </copy>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="61" binds="15 15">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onchange" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="s" line="660" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="661" name="xforms-value-changed" bSlot="0" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="662" type="element(Q{}input)"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="s" line="670" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='select';"/>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="671" name="xforms-value-changed" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="672" type="element(Q{}select)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="44" binds="35 40 62 49 49 63 45">
  <template name="Q{}xformsjs-main" flags="os" line="100" module="saxon-xforms.xsl" slots="21">
   <let role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="558" var="vv:v1" as="item()" slot="5" eval="13">
    <check card="1" diag="0|0||ixsl:call">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
    </check>
    <let line="528" var="vv:v0" as="item()" slot="6" eval="13">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <sequence line="101">
      <param name="Q{}xforms-doc" slot="0" as="document-node()?">
       <empty role="select"/>
       <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|xforms-doc">
        <check card="?" diag="8|0|XTTE0590|xforms-doc">
         <supplied slot="0"/>
        </check>
       </treat>
      </param>
      <param line="102" name="Q{}xforms-file" slot="1" as="xs:string?">
       <empty role="select"/>
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xforms-file">
        <check card="?" diag="8|0|XTTE0590|xforms-file">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="1"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <param line="111" name="Q{}instance-xml" slot="2" as="document-node()*">
       <empty role="select"/>
       <treat role="conversion" as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="8|0|XTTE0590|instance-xml">
        <supplied slot="2"/>
       </treat>
      </param>
      <param line="112" name="Q{}instance-docs" slot="3" as="map(*)?">
       <empty role="select"/>
       <treat role="conversion" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="8|0|XTTE0590|instance-docs">
        <check card="?" diag="8|0|XTTE0590|instance-docs">
         <supplied slot="3"/>
        </check>
       </treat>
      </param>
      <param line="114" name="Q{}xFormsId" slot="4" as="xs:string">
       <gVarRef role="select" name="Q{}xform-html-id" bSlot="0"/>
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|xFormsId">
        <check card="1" diag="8|0|XTTE0590|xFormsId">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="4"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <let line="122" var="xforms-doci" as="document-node()?" slot="7" eval="7">
       <choose>
        <fn name="empty">
         <varRef name="xforms-doc" slot="0"/>
        </fn>
        <fn name="doc">
         <varRef name="xforms-file" slot="1"/>
        </fn>
        <true/>
        <varRef name="xforms-doc" slot="0"/>
       </choose>
       <let line="124" var="xform" as="element(Q{http://www.w3.org/2002/xforms}xform)" slot="8" eval="7">
        <treat as="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';" diag="3|0|XTTE0570|xform">
         <ufCall name="Q{http://www.w3.org/2002/xforms}addNamespaceDeclarations" tailCall="false" bSlot="1" eval="4">
          <check card="1" diag="0|0||xforms:addNamespaceDeclarations">
           <slash simple="1">
            <varRef name="xforms-doci" slot="7"/>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
          </check>
         </ufCall>
        </treat>
        <let line="128" var="xforms-instances" as="map(xs:string, element())" slot="9" eval="7">
         <choose line="130">
          <fn name="empty">
           <varRef name="instance-docs" slot="3"/>
          </fn>
          <treat line="133" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|xforms-instances">
           <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
            <choose>
             <fn name="empty">
              <varRef name="instance-xml" slot="2"/>
             </fn>
             <forEach line="134">
              <slash>
               <slash simple="1">
                <varRef name="xform" slot="8"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
              </slash>
              <let line="135" var="instance-with-explicit-namespaces" as="element()" slot="10" eval="7">
               <treat line="136" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|instance-with-explicit-namespaces">
                <check card="1" diag="3|0|XTTE0570|instance-with-explicit-namespaces">
                 <applyT mode="Q{}namespace-fix" bSlot="2">
                  <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                 </applyT>
                </check>
               </treat>
               <ifCall line="145" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                <check card="1" diag="0|0||map:entry">
                 <cast as="xs:string" emptiable="1">
                  <choose>
                   <fn name="exists">
                    <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                   </fn>
                   <attVal name="Q{}id" chk="0"/>
                   <true/>
                   <str val="saxon-forms-default"/>
                  </choose>
                 </cast>
                </check>
                <varRef name="instance-with-explicit-namespaces" slot="10"/>
               </ifCall>
              </let>
             </forEach>
             <true/>
             <ifCall line="155" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
              <check card="1" diag="0|0||map:entry">
               <cast as="xs:string" emptiable="1">
                <choose>
                 <fn name="exists">
                  <slash>
                   <conditionalSort>
                    <fn name="exists">
                     <tail start="2">
                      <varRef name="instance-xml" slot="2"/>
                     </tail>
                    </fn>
                    <docOrder intra="0">
                     <slash>
                      <varRef name="instance-xml" slot="2"/>
                      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                     </slash>
                    </docOrder>
                   </conditionalSort>
                   <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                  </slash>
                 </fn>
                 <atomSing card="?" diag="2|0||cast as">
                  <slash>
                   <conditionalSort>
                    <fn name="exists">
                     <tail start="2">
                      <varRef name="instance-xml" slot="2"/>
                     </tail>
                    </fn>
                    <docOrder intra="0">
                     <slash>
                      <varRef name="instance-xml" slot="2"/>
                      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                     </slash>
                    </docOrder>
                   </conditionalSort>
                   <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                  </slash>
                 </atomSing>
                 <true/>
                 <str val="saxon-forms-default"/>
                </choose>
               </cast>
              </check>
              <conditionalSort>
               <fn name="exists">
                <tail start="2">
                 <varRef name="instance-xml" slot="2"/>
                </tail>
               </fn>
               <docOrder intra="0">
                <slash>
                 <varRef name="instance-xml" slot="2"/>
                 <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                </slash>
               </docOrder>
              </conditionalSort>
             </ifCall>
            </choose>
            <map size="2">
             <str val="duplicates"/>
             <str val="reject"/>
             <str val="duplicates-error-code"/>
             <str val="XTDE3365"/>
            </map>
           </ifCall>
          </treat>
          <true/>
          <treat line="161" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|xforms-instances">
           <check card="1" diag="3|0|XTTE0570|xforms-instances">
            <varRef name="instance-docs" slot="3"/>
           </check>
          </treat>
         </choose>
         <let line="167" var="default-instance" as="element()" slot="11" eval="7">
          <choose line="169">
           <fn name="empty">
            <varRef name="instance-docs" slot="3"/>
           </fn>
           <choose line="171">
            <fn name="exists">
             <filter flags="b">
              <slash>
               <slash simple="1">
                <varRef name="xform" slot="8"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
              </slash>
              <fn name="empty">
               <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
              </fn>
             </filter>
            </fn>
            <check line="172" card="1" diag="3|0|XTTE0570|default-instance">
             <slash>
              <slash>
               <slash simple="1">
                <varRef name="xform" slot="8"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <first>
                <filter flags="b">
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
                 <fn name="empty">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </fn>
                </filter>
               </first>
              </slash>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
            </check>
            <true/>
            <check line="175" card="1" diag="3|0|XTTE0570|default-instance">
             <slash>
              <slash>
               <slash simple="1">
                <varRef name="xform" slot="8"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
               </slash>
               <first>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}instance)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='instance';"/>
               </first>
              </slash>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
            </check>
           </choose>
           <true/>
           <treat line="181" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|default-instance">
            <check card="1" diag="3|0|XTTE0570|default-instance">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
              <check card="1" diag="0|0||ixsl:call">
               <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
              </check>
              <str val="getDefaultInstance"/>
              <arrayBlock/>
             </ifCall>
            </check>
           </treat>
          </choose>
          <let line="187" var="bindings" as="map(xs:string, element(Q{http://www.w3.org/2002/xforms}bind))" slot="12" eval="8">
           <ifCall line="189" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
            <forEach>
             <slash>
              <slash>
               <slash simple="1">
                <varRef name="xforms-doci" slot="7"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
               </slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
              </slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}bind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='bind';"/>
             </slash>
             <ifCall line="197" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
              <check card="1" diag="0|0||map:entry">
               <cast as="xs:string" emptiable="1">
                <choose>
                 <fn name="exists">
                  <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                 </fn>
                 <attVal name="Q{}id" chk="0"/>
                 <true/>
                 <attVal name="Q{}nodeset" chk="0"/>
                </choose>
               </cast>
              </check>
              <dot type="element(Q{http://www.w3.org/2002/xforms}bind)"/>
             </ifCall>
            </forEach>
            <map size="2">
             <str val="duplicates"/>
             <str val="reject"/>
             <str val="duplicates-error-code"/>
             <str val="XTDE3365"/>
            </map>
           </ifCall>
           <let line="211" var="bindingKeys" as="xs:anyAtomicType*" slot="13" eval="3">
            <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
             <varRef name="bindings" slot="12"/>
            </ifCall>
            <let line="213" var="RelevantBindings" as="map(xs:string, xs:string)" slot="14" eval="7">
             <treat line="215" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|RelevantBindings">
              <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
               <forEach>
                <varRef name="bindingKeys" slot="13"/>
                <let line="216" var="bindingNode" as="element(Q{http://www.w3.org/2002/xforms}bind)" slot="15" eval="7">
                 <check card="1" diag="3|0|XTTE0570|bindingNode">
                  <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                   <varRef name="bindings" slot="12"/>
                   <cast as="xs:string" emptiable="0">
                    <dot type="xs:anyAtomicType"/>
                   </cast>
                  </ifCall>
                 </check>
                 <choose line="218">
                  <fn name="exists">
                   <filter flags="b">
                    <varRef name="bindingNode" slot="15"/>
                    <fn name="exists">
                     <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                    </fn>
                   </filter>
                  </fn>
                  <ifCall line="220" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                   <check line="219" card="1" diag="3|0|XTTE0570|keyi">
                    <cast as="xs:string" emptiable="1">
                     <data>
                      <slash simple="1">
                       <varRef name="bindingNode" slot="15"/>
                       <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
                      </slash>
                     </data>
                    </cast>
                   </check>
                   <cast as="xs:string" emptiable="1">
                    <data>
                     <slash simple="1">
                      <varRef name="bindingNode" slot="15"/>
                      <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
                     </slash>
                    </data>
                   </cast>
                  </ifCall>
                 </choose>
                </let>
               </forEach>
               <map size="2">
                <str val="duplicates"/>
                <str val="reject"/>
                <str val="duplicates-error-code"/>
                <str val="XTDE3365"/>
               </map>
              </ifCall>
             </treat>
             <let line="229" var="CalculationBindings" as="map(xs:string, xs:string)" slot="16" eval="7">
              <treat line="231" as="map(xs:string, xs:string)" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.Atomic.string.matches(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0|XTTE0570|CalculationBindings">
               <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                <forEach>
                 <varRef name="bindingKeys" slot="13"/>
                 <let line="232" var="bindingNode" as="element(Q{http://www.w3.org/2002/xforms}bind)" slot="17" eval="7">
                  <check card="1" diag="3|0|XTTE0570|bindingNode">
                   <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                    <varRef name="bindings" slot="12"/>
                    <cast as="xs:string" emptiable="0">
                     <dot type="xs:anyAtomicType"/>
                    </cast>
                   </ifCall>
                  </check>
                  <choose line="234">
                   <fn name="exists">
                    <filter flags="b">
                     <varRef name="bindingNode" slot="17"/>
                     <fn name="exists">
                      <axis name="attribute" nodeTest="attribute(Q{}calculate)" jsTest="return item.name==='calculate'"/>
                     </fn>
                    </filter>
                   </fn>
                   <ifCall line="236" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                    <check line="235" card="1" diag="3|0|XTTE0570|keyi">
                     <cast as="xs:string" emptiable="1">
                      <data>
                       <slash simple="1">
                        <varRef name="bindingNode" slot="17"/>
                        <axis name="attribute" nodeTest="attribute(Q{}nodeset)" jsTest="return item.name==='nodeset'"/>
                       </slash>
                      </data>
                     </cast>
                    </check>
                    <cast as="xs:string" emptiable="1">
                     <data>
                      <slash simple="1">
                       <varRef name="bindingNode" slot="17"/>
                       <axis name="attribute" nodeTest="attribute(Q{}calculate)" jsTest="return item.name==='calculate'"/>
                      </slash>
                     </data>
                    </cast>
                   </ifCall>
                  </choose>
                 </let>
                </forEach>
                <map size="2">
                 <str val="duplicates"/>
                 <str val="reject"/>
                 <str val="duplicates-error-code"/>
                 <str val="XTDE3365"/>
                </map>
               </ifCall>
              </treat>
              <sequence line="248">
               <choose>
                <gc op="=" card="M:N" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                 <data>
                  <slash>
                   <slash simple="1">
                    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                    <axis name="descendant" nodeTest="element(Q{}script)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='script';"/>
                   </slash>
                   <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                  </slash>
                 </data>
                 <data>
                  <gVarRef name="Q{}xforms-cache-id" bSlot="3"/>
                 </data>
                </gc>
                <sequence line="249">
                 <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setXFormsDoc"/>
                  <arrayBlock>
                   <varRef name="xforms-doc" slot="0"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="250" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setXForm"/>
                  <arrayBlock>
                   <varRef name="xform" slot="8"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="251" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setXFormsID"/>
                  <arrayBlock>
                   <varRef name="xFormsId" slot="4"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="252" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setRelevantMap"/>
                  <arrayBlock>
                   <varRef name="RelevantBindings" slot="14"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="253" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setCalculationMap"/>
                  <arrayBlock>
                   <varRef name="CalculationBindings" slot="16"/>
                  </arrayBlock>
                 </ifCall>
                </sequence>
                <true/>
                <sequence line="264">
                 <forEach>
                  <slash simple="1">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
                   <axis name="descendant" nodeTest="element(Q{}head)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='head';"/>
                  </slash>
                  <resultDoc line="273" global="#&#xD;&#xA;#Sun Nov 18 10:50:05 GMT 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Sun Nov 18 10:50:05 GMT 2018&#xD;&#xA;">
                   <str role="href" val="?."/>
                   <elem role="content" line="274" name="script" nsuri="" namespaces="xd rdf xhtml js in fn map array ev">
                    <sequence>
                     <att name="type" flags="l">
                      <str val="text/javascript"/>
                     </att>
                     <att name="id" flags="l">
                      <fn name="string-join">
                       <convert from="xs:anyAtomicType" to="xs:string">
                        <data>
                         <mergeAdj>
                          <gVarRef name="Q{}xforms-cache-id" bSlot="4"/>
                         </mergeAdj>
                        </data>
                       </convert>
                       <str val=" "/>
                      </fn>
                     </att>
                     <valueOf flags="l">
                      <str val="                &#xA;                            var XFormsDoc = null;&#xA;                            var XForm = null;&#xA;                            var defaultInstanceDoc = null;&#xA;                            &#xA;                            // MD 2018: OND's suggestion for multiple instances&#xA;                            var instanceDocs = {};&#xA;                            &#xA;                            var pendingUpdatesMap = null;&#xA;                            var updatesMap = null;&#xA;                            var XFormsID = '"/>
                     </valueOf>
                     <valueOf line="284" flags="l">
                      <varRef name="xFormsId" slot="4"/>
                     </valueOf>
                     <valueOf flags="l">
                      <str val="';&#xA;                            var actions = {};&#xA;                            var submissions = {};&#xA;                            var outputs = {};&#xA;                            var relevantMap = {};&#xA;                            var calculationMap = {};&#xA;                            var repeatIndexMap = {};&#xA;                            var elementsUsingIndexFunction = {};&#xA;                            &#xA;                            var getCurrentDate = function(){&#xA;                                var today = new Date();&#xA;                                var dd = today.getDate();&#xA;                                var mm = today.getMonth()+1; //January is 0!&#xA;                                var yyyy = today.getFullYear();&#xA;                            &#xA;                                if(dd &lt; 10) {&#xA;                                    dd = '0' + dd;&#xA;                                } &#xA;                            &#xA;                                if(mm &lt; 10) {&#xA;                                    mm = '0' + mm;&#xA;                                } &#xA;                            &#xA;                                today = yyyy + '-' + mm + '-' + dd;&#xA;                                return today;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setXFormsDoc = function(doc) {&#xA;                                XFormsDoc = doc;&#xA;                            }&#xA;                            &#xA;                            var getXFormsDoc = function() {&#xA;                                return XFormsDoc;&#xA;                            }&#xA;                            &#xA;                            var setXForm = function(element) {&#xA;                                XForm = element;&#xA;                            }&#xA;                            &#xA;                            var getXForm = function() {&#xA;                                return XForm;&#xA;                            }&#xA;                            &#xA;                            var setXFormsID = function(id) {&#xA;                                XFormsID = id;&#xA;                            }&#xA;                            &#xA;                            var getXFormsID = function() {&#xA;                                return XFormsID;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setInstance = function(name, value) {&#xA;                                instanceDocs[name] = value;&#xA;                            } &#xA;                            &#xA;                            var getInstance = function(name) {&#xA;                                return instanceDocs[name];&#xA;                            }&#xA;                            &#xA;                            &#xA;                            //[OND] Maybe we can just set the key-&gt; value without having to copy the entire instanceDocs object.&#xA;                            var updateInstance = function(instanceDocs, key, value){&#xA;                                instanceDocs[key] = value;&#xA;                                return instanceDocs;&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var setDefaultInstance = function(doc) {&#xA;                                defaultInstanceDoc = doc;&#xA;                            }&#xA;                            &#xA;                            var getDefaultInstance = function() {&#xA;                                return defaultInstanceDoc;&#xA;                            }&#xA;                            &#xA;                           &#xA;                            var getInstanceKeys = function() {&#xA;                                return Object.keys(instanceDocs);&#xA;                            }&#xA;                            &#xA;                            var getInstances = function() {&#xA;                                return instanceDocs;&#xA;                            }&#xA;                            &#xA;                            var setPendingUpdates = function(map1) {&#xA;                                pendingUpdatesMap = map1;&#xA;                            }&#xA;                            &#xA;                            var clearPendingUpdates = function() {&#xA;                                pendingUpdatesMap = null;&#xA;                            }&#xA;                            &#xA;                            var getPendingUpdates = function() {&#xA;                                return pendingUpdatesMap;&#xA;                            }&#xA;                            &#xA;                            var setUpdates = function(map1) {&#xA;                                updatesMap = map1;&#xA;                            }&#xA;                            &#xA;                            var clearUpdates = function() {&#xA;                                updatesMap = null;&#xA;                            }&#xA;                            &#xA;                            var getUpdates = function() {&#xA;                                return updatesMap;&#xA;                            }&#xA;                            &#xA;                            var addAction = function(name, value){&#xA;                                actions[name] = value;&#xA;                            }&#xA;&#xA;                            var getAction = function(name){&#xA;                                return actions[name];&#xA;                            }&#xA;                            &#xA;                            var updateAction = function(actioni, key, value){&#xA;                                actioni[key] = value;&#xA;                                return actioni;&#xA;                            }&#xA;                            &#xA;                            var addSubmission = function(name, value){&#xA;                                submissions[name] = value;&#xA;                            }&#xA;                            &#xA;                            var getSubmission = function(name){&#xA;                                return submissions[name];&#xA;                            }     &#xA;                            &#xA;                            var addOutput = function(name, value){&#xA;                                outputs[name] = value;&#xA;                            }&#xA;                            &#xA;                            var getOutput = function(name){&#xA;                                return outputs[name];&#xA;                            }&#xA;                            &#xA;                            var getOutputKeys = function() {&#xA;                                return Object.keys(outputs);&#xA;                            }&#xA;                            &#xA;                            var setRelevantMap = function(map1) {&#xA;                                relevantMap = map1;                            &#xA;                            }&#xA;                            &#xA;                            var getRelevantMap = function() {&#xA;                                return relevantMap;&#xA;                            }&#xA;                            &#xA;  &#xA;                            var setCalculationMap = function(map1) {&#xA;                                calculationMap = map1;                            &#xA;                            }&#xA;  &#xA;                            var getCalculationMap = function() {&#xA;                                return calculationMap;&#xA;                            }&#xA;  &#xA;                            &#xA;                            var setRepeatIndex = function(name, value) {&#xA;                                repeatIndexMap[name] = value;&#xA;                            }&#xA;                            &#xA;                            var getRepeatIndex = function(name) {&#xA;                                if ( typeof(repeatIndexMap[name]) != 'undefined' ) {&#xA;                                    return repeatIndexMap[name];&#xA;                                }&#xA;                                else {&#xA;                                    return 0;&#xA;                                }&#xA;                            } &#xA;                            &#xA;                            var setElementUsingIndexFunction = function(name, value) {&#xA;                                elementsUsingIndexFunction[name] = value;&#xA;                            } &#xA;                            &#xA;                            var getElementUsingIndexFunction = function(name) {&#xA;                                return elementsUsingIndexFunction[name];&#xA;                            }&#xA;                            &#xA;                            var getElementsUsingIndexFunctionKeys = function() {&#xA;                            return Object.keys(elementsUsingIndexFunction);&#xA;                            }&#xA;                            &#xA;                            &#xA;                            var startTime = function(name) {&#xA;                                console.time(name);&#xA;                            }&#xA;                            &#xA;                            var endTime = function(name) {&#xA;                                console.timeEnd(name);&#xA;                            }&#xA;                            &#xA;                            var highlightClicked = function(id) {&#xA;                                var item = document.getElementById(id);&#xA;                                toggleClass(item);&#xA;                            }&#xA;                            &#xA;                            var toggleClass = function(element) {&#xA;                                if (element.className == 'selected') {&#xA;                                    element.classList.remove('selected');&#xA;                                }&#xA;                                else {&#xA;                                    var x = document.getElementsByClassName('selected');&#xA;                                    var i;&#xA;                                    for (i = 0; i &lt; x.length; i++) {&#xA;                                        x[i].classList.remove('selected');&#xA;                                    } &#xA;                                    element.classList.add('selected');&#xA;                                }&#xA;                            }&#xA;                            &#xA;                            var setFocus = function(id) {&#xA;                                var item = document.getElementById(id);&#xA;                                item.select();&#xA;                            }&#xA;                            &#xA;                        "/>
                     </valueOf>
                    </sequence>
                   </elem>
                  </resultDoc>
                 </forEach>
                 <ifCall line="507" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setXFormsDoc"/>
                  <arrayBlock>
                   <varRef name="xforms-doc" slot="0"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="508" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setXForm"/>
                  <arrayBlock>
                   <varRef name="xform" slot="8"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="509" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setDefaultInstance"/>
                  <arrayBlock>
                   <varRef name="default-instance" slot="11"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="510" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setRelevantMap"/>
                  <arrayBlock>
                   <varRef name="RelevantBindings" slot="14"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="511" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setCalculationMap"/>
                  <arrayBlock>
                   <varRef name="CalculationBindings" slot="16"/>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="516" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setPendingUpdates"/>
                  <arrayBlock>
                   <treat line="513" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||pendingInstanceUpdates">
                    <map size="0"/>
                   </treat>
                  </arrayBlock>
                 </ifCall>
                 <ifCall line="517" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                  <check card="1" diag="0|0||ixsl:call">
                   <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
                  </check>
                  <str val="setUpdates"/>
                  <arrayBlock>
                   <treat line="514" as="map(°)" jsTest="function k(item) {return SaxonJS.U.Atomic.anyAtomicType.matches(item);};function v(item) {return true;};function c() {return true;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="3|0||instanceUpdates">
                    <map size="0"/>
                   </treat>
                  </arrayBlock>
                 </ifCall>
                </sequence>
               </choose>
               <forEach line="526">
                <treat line="524" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|instanceKeys">
                 <cvUntyped to="xs:string">
                  <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
                   <varRef name="xforms-instances" slot="9"/>
                  </ifCall>
                 </cvUntyped>
                </treat>
                <ifCall line="528" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                 <varRef name="vv:v0" slot="6"/>
                 <str val="setInstance"/>
                 <arrayBlock>
                  <dot type="xs:string"/>
                  <check line="527" card="1" diag="3|0|XTTE0570|instance">
                   <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                    <varRef name="xforms-instances" slot="9"/>
                    <dot type="xs:string"/>
                   </ifCall>
                  </check>
                 </arrayBlock>
                </ifCall>
               </forEach>
               <let line="533" var="submissions" as="map(xs:string, map(*))" slot="18" eval="8">
                <ifCall line="535" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
                 <forEach>
                  <slash>
                   <slash>
                    <slash simple="1">
                     <varRef name="xforms-doci" slot="7"/>
                     <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                    </slash>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}model)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='model';"/>
                   </slash>
                   <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}submission)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='submission';"/>
                  </slash>
                  <let line="539" var="map-key" as="xs:string" slot="19" eval="7">
                   <choose>
                    <fn name="exists">
                     <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
                    </fn>
                    <check card="1" diag="3|0|XTTE0570|map-key">
                     <cast as="xs:string" emptiable="1">
                      <attVal name="Q{}id" chk="0"/>
                     </cast>
                    </check>
                    <true/>
                    <str val="saxon-forms-default-submission"/>
                   </choose>
                   <let line="540" var="map-value" as="map(*)" slot="20" eval="7">
                    <treat line="541" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|map-value">
                     <check card="1" diag="3|0|XTTE0570|map-value">
                      <callT name="setSubmission" bSlot="5">
                       <withParam name="Q{}this" flags="c" as="element()">
                        <dot line="542" type="element(Q{http://www.w3.org/2002/xforms}submission)"/>
                       </withParam>
                       <withParam name="Q{}submission-id" flags="c" as="xs:string">
                        <varRef line="543" name="map-key" slot="19"/>
                       </withParam>
                      </callT>
                     </check>
                    </treat>
                    <ifCall line="546" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
                     <varRef name="map-key" slot="19"/>
                     <varRef name="map-value" slot="20"/>
                    </ifCall>
                   </let>
                  </let>
                 </forEach>
                 <map size="2">
                  <str val="duplicates"/>
                  <str val="reject"/>
                  <str val="duplicates-error-code"/>
                  <str val="XTDE3365"/>
                 </map>
                </ifCall>
                <sequence line="555">
                 <forEach>
                  <treat line="553" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|submissionKeys">
                   <cvUntyped to="xs:string">
                    <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
                     <varRef name="submissions" slot="18"/>
                    </ifCall>
                   </cvUntyped>
                  </treat>
                  <sequence line="557">
                   <message>
                    <sequence role="select">
                     <valueOf>
                      <str val="Setting submission with ID '"/>
                     </valueOf>
                     <valueOf>
                      <dot type="xs:string"/>
                     </valueOf>
                     <valueOf flags="S">
                      <str val="'"/>
                     </valueOf>
                    </sequence>
                    <str role="terminate" val="no"/>
                    <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
                   </message>
                   <ifCall line="558" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
                    <varRef name="vv:v1" slot="5"/>
                    <str val="addSubmission"/>
                    <arrayBlock>
                     <dot type="xs:string"/>
                     <check line="556" card="1" diag="3|0|XTTE0570|submission">
                      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
                       <varRef name="submissions" slot="18"/>
                       <dot type="xs:string"/>
                      </ifCall>
                     </check>
                    </arrayBlock>
                   </ifCall>
                  </sequence>
                 </forEach>
                 <resultDoc line="567" global="#&#xD;&#xA;#Sun Nov 18 10:50:05 GMT 2018&#xD;&#xA;indent=no&#xD;&#xA;doctype-system=http\://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#xD;&#xA;encoding=utf-8&#xD;&#xA;doctype-public=-//W3C//DTD XHTML 1.0 Transitional//EN&#xD;&#xA;omit-xml-declaration=no&#xD;&#xA;method=html&#xD;&#xA;" local="#&#xD;&#xA;#Sun Nov 18 10:50:05 GMT 2018&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
                  <fn role="href" name="concat">
                   <str val="#"/>
                   <varRef name="xFormsId" slot="4"/>
                  </fn>
                  <applyT role="content" line="568" bSlot="6">
                   <slash role="select" simple="1">
                    <varRef name="xforms-doci" slot="7"/>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2002/xforms}xform)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2002/xforms'&amp;&amp;q.local==='xform';"/>
                   </slash>
                   <withParam name="Q{}instances" flags="t" as="map(xs:string, element())">
                    <varRef line="569" name="xforms-instances" slot="9"/>
                   </withParam>
                   <withParam name="Q{}bindings" flags="t" as="map(xs:string, node())">
                    <varRef line="570" name="bindings" slot="12"/>
                   </withParam>
                   <withParam name="Q{}submissions" flags="t" as="map(xs:string, map(*))">
                    <varRef line="571" name="submissions" slot="18"/>
                   </withParam>
                   <withParam name="Q{}nodeset" flags="t" as="xs:string">
                    <str val=""/>
                   </withParam>
                  </applyT>
                 </resultDoc>
                </sequence>
               </let>
              </sequence>
             </let>
            </let>
           </let>
          </let>
         </let>
        </let>
       </let>
      </let>
     </sequence>
    </let>
   </let>
  </template>
 </co>
 <co id="62" binds="62">
  <mode name="Q{}namespace-fix" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="1" flags="s" line="2726" module="saxon-xforms.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2727" var="current-namespace" as="xs:anyURI" slot="0" eval="8">
     <fn name="namespace-uri">
      <dot type="element()"/>
     </fn>
     <compElem line="2729">
      <convert role="name" from="xs:QName" to="xs:string">
       <fn line="2728" name="QName">
        <varRef name="current-namespace" slot="0"/>
        <fn name="name">
         <dot type="element()"/>
        </fn>
       </fn>
      </convert>
      <convert role="namespace" from="xs:anyURI" to="xs:string">
       <varRef name="current-namespace" slot="0"/>
      </convert>
      <sequence role="content" line="2730">
       <namespace flags="l">
        <str role="name" val="xforms"/>
        <str role="select" val="http://www.w3.org/2002/xforms"/>
       </namespace>
       <applyT line="2732" mode="Q{}namespace-fix" bSlot="0">
        <sequence role="select">
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
        </sequence>
       </applyT>
      </sequence>
     </compElem>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="43" binds="59 6 7">
  <template name="Q{}HTTPsubmit" cxt="map(*)" jsTest="return SaxonJS.U.isMap(item)" flags="s" line="932" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="938">
    <param name="Q{}instance-id" slot="0" as="xs:string">
     <str role="select" val="saxon-forms-default"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
      <check card="1" diag="8|0|XTTE0590|instance-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="939" name="Q{}targetref" slot="1" as="xs:string?">
     <empty role="select"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|targetref">
      <check card="?" diag="8|0|XTTE0590|targetref">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="940" name="Q{}replace" slot="2" as="xs:string?">
     <empty role="select"/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|replace">
      <check card="?" diag="8|0|XTTE0590|replace">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="944" var="responseXML" as="document-node()" slot="3" eval="7">
     <treat as="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);" diag="3|0|XTTE0570|responseXML">
      <check card="1" diag="3|0|XTTE0570|responseXML">
       <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
        <dot type="map(*)"/>
        <str val="body"/>
       </ifCall>
      </check>
     </treat>
     <choose line="947">
      <fn name="empty">
       <varRef name="responseXML" slot="3"/>
      </fn>
      <callT line="948" name="serverError" bSlot="0" flags="t">
       <withParam name="Q{}responseMap" flags="c" as="map(*)">
        <dot line="949" type="map(*)"/>
       </withParam>
      </callT>
      <gc line="961" op="=" card="1:1" comp="CCC">
       <varRef name="replace" slot="2"/>
       <str val="instance"/>
      </gc>
      <sequence line="962">
       <ufCall name="Q{http://www.w3.org/2002/xforms}setInstance-JS" tailCall="false" bSlot="1" eval="8 4">
        <fn line="942" name="concat">
         <str val="instance('"/>
         <varRef name="instance-id" slot="0"/>
         <str val="')/"/>
        </fn>
        <check card="1" diag="0|1||xforms:setInstance-JS">
         <slash simple="1">
          <varRef name="responseXML" slot="3"/>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
        </check>
       </ufCall>
       <callT line="964" name="xforms-rebuild" bSlot="2"/>
       <message line="965">
        <sequence role="select">
         <valueOf>
          <str val="[HTTPsubmit] response body: "/>
         </valueOf>
         <valueOf>
          <fn name="serialize">
           <varRef name="responseXML" slot="3"/>
          </fn>
         </valueOf>
        </sequence>
        <str role="terminate" val="no"/>
        <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
       </message>
      </sequence>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id="34" binds="">
  <function name="Q{http://www.w3.org/2002/xforms}instance" line="104" module="xforms-function-library.xsl" eval="7" flags="pU" as="element()?" slots="1">
   <arg name="instance-id" as="xs:string"/>
   <treat role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="106" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="5|0|XTTE0780|xforms:instance">
    <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <str val="getInstance"/>
     <arrayBlock>
      <varRef name="instance-id" slot="0"/>
     </arrayBlock>
    </ifCall>
   </treat>
  </function>
 </co>
 <co id="64" binds="38 58 41">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onclick" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="1" flags="s" line="682" module="saxon-xforms.xsl">
    <p.withUpper role="match" axis="ancestor" upFirst="false">
     <p.withPredicate>
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
      <or ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="682" op="or">
       <axis name="self" nodeTest="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='span';"/>
       <axis name="self" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
      </or>
     </p.withPredicate>
     <p.withPredicate>
      <p.nodeTest test="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='div';"/>
      <gc ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="682" op="=" card="M:N" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}data-repeat-item)" jsTest="return item.name==='data-repeat-item'"/>
       </data>
       <str val="true"/>
      </gc>
     </p.withPredicate>
    </p.withUpper>
    <let role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="691" var="vv:v0" as="item()" slot="0" eval="13">
     <check card="1" diag="0|0||ixsl:call">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
     </check>
     <sequence line="683">
      <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
       <check card="1" diag="0|0||ixsl:call">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
       </check>
       <str val="highlightClicked"/>
       <arrayBlock>
        <fn name="string">
         <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
        </fn>
       </arrayBlock>
      </ifCall>
      <forEach line="686">
       <fn name="reverse">
        <filter flags="b">
         <slash simple="1">
          <dot type="element()"/>
          <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='div';"/>
         </slash>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}data-repeat-item" chk="0"/>
          <str val="true"/>
         </gc>
        </filter>
       </fn>
       <ifCall line="691" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <varRef name="vv:v0" slot="0"/>
        <str val="setRepeatIndex"/>
        <arrayBlock>
         <check line="687" card="1" diag="3|0|XTTE0570|repeat-id">
          <cvUntyped to="xs:string">
           <data>
            <slash simple="1">
             <first>
              <filter flags="b">
               <slash simple="1">
                <dot type="element(Q{}div)"/>
                <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='div';"/>
               </slash>
               <fn name="exists">
                <axis name="attribute" nodeTest="attribute(Q{}data-repeatable-context)" jsTest="return item.name==='data-repeatable-context'"/>
               </fn>
              </filter>
             </first>
             <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
            </slash>
           </data>
          </cvUntyped>
         </check>
         <arith line="688" op="+" calc="i+i">
          <fn name="count">
           <filter flags="b">
            <slash simple="1">
             <dot type="element(Q{}div)"/>
             <axis name="preceding-sibling" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='div';"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}data-repeat-item" chk="0"/>
             <str val="true"/>
            </gc>
           </filter>
          </fn>
          <int val="1"/>
         </arith>
        </arrayBlock>
       </ifCall>
      </forEach>
      <callT line="694" name="refreshElementsUsingIndexFunction-JS" bSlot="0"/>
      <choose line="696">
       <fn name="exists">
        <axis name="self" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
       </fn>
       <ifCall line="697" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
        <check card="1" diag="0|0||ixsl:call">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
        </check>
        <str val="setFocus"/>
        <arrayBlock>
         <cast as="xs:string" emptiable="1">
          <attVal name="Q{}id" chk="0"/>
         </cast>
        </arrayBlock>
       </ifCall>
      </choose>
     </sequence>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="0" minImp="0" slots="0" flags="s" line="1873" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <fn ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1873" name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-action)" jsTest="return item.name==='data-action'"/>
     </fn>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="1875" name="DOMActivate" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="1876" type="element(Q{}button)"/>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="0" minImp="0" slots="0" flags="s" line="915" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <fn ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="915" name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}data-submit)" jsTest="return item.name==='data-submit'"/>
     </fn>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="917" name="xforms-submit" bSlot="2" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="918" type="element(Q{}button)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="63" binds="53 54 55">
  <template name="Q{}setSubmission" flags="os" line="3605" module="saxon-xforms.xsl" slots="5">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3606">
    <param name="Q{}this" slot="0" flags="i" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3607" name="Q{}submission-id" slot="1" flags="i" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|submission-id">
      <check card="1" diag="8|0|XTTE0590|submission-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="3610" var="bindingi" as="node()?" slot="2" eval="7">
     <treat line="3611" as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="3|0|XTTE0570|bindingi">
      <check card="?" diag="3|0|XTTE0570|bindingi">
       <callT name="getBinding" bSlot="0">
        <withParam name="Q{}this" flags="c" as="element()">
         <varRef line="3612" name="this" slot="0"/>
        </withParam>
       </callT>
      </check>
     </treat>
     <let line="3617" var="refi" as="xs:string" slot="3" eval="7">
      <treat line="3618" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|refi">
       <check card="1" diag="3|0|XTTE0570|refi">
        <cvUntyped to="xs:string">
         <data>
          <callT name="getDataRef" bSlot="1">
           <withParam name="Q{}this" flags="c" as="element()">
            <varRef line="3619" name="this" slot="0"/>
           </withParam>
           <withParam name="Q{}bindingi" flags="c" as="node()?">
            <varRef line="3620" name="bindingi" slot="2"/>
           </withParam>
          </callT>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line="3625" var="actions" as="map(*)*" slot="4" eval="8">
       <treat line="3626" as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="3|0|XTTE0570|actions">
        <callT name="setActions" bSlot="2">
         <withParam name="Q{}this" flags="c" as="element()">
          <treat line="3627" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
           <dot flags="a"/>
          </treat>
         </withParam>
         <withParam name="Q{}nodeset" flags="t" as="xs:string">
          <varRef line="3628" name="refi" slot="3"/>
         </withParam>
        </callT>
       </treat>
       <sequence line="3632">
        <choose>
         <fn name="exists">
          <varRef name="actions" slot="4"/>
         </fn>
         <ifCall line="3633" name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
          <check card="1" diag="0|0||ixsl:call">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
          </check>
          <str val="addAction"/>
          <arrayBlock>
           <varRef name="submission-id" slot="1"/>
           <varRef name="actions" slot="4"/>
          </arrayBlock>
         </ifCall>
        </choose>
        <ifCall line="3638" name="Q{http://www.w3.org/2005/xpath-functions/map}merge" type="map(*)">
         <sequence>
          <choose>
           <fn name="exists">
            <varRef name="refi" slot="3"/>
           </fn>
           <ifCall line="3639" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@ref"/>
            <varRef name="refi" slot="3"/>
           </ifCall>
          </choose>
          <choose line="3642">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}resource)" jsTest="return item.name==='resource'"/>
            </slash>
           </fn>
           <ifCall line="3643" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@resource"/>
            <cast as="xs:string" emptiable="1">
             <data>
              <slash simple="1">
               <varRef name="this" slot="0"/>
               <axis name="attribute" nodeTest="attribute(Q{}resource)" jsTest="return item.name==='resource'"/>
              </slash>
             </data>
            </cast>
           </ifCall>
          </choose>
          <choose line="3645">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}mode)" jsTest="return item.name==='mode'"/>
            </slash>
           </fn>
           <ifCall line="3646" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@mode"/>
            <cast as="xs:string" emptiable="1">
             <data>
              <slash simple="1">
               <varRef name="this" slot="0"/>
               <axis name="attribute" nodeTest="attribute(Q{}mode)" jsTest="return item.name==='mode'"/>
              </slash>
             </data>
            </cast>
           </ifCall>
          </choose>
          <ifCall line="3649" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@method"/>
           <choose line="3651">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}method)" jsTest="return item.name==='method'"/>
             </slash>
            </fn>
            <fn line="3652" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}method)" jsTest="return item.name==='method'"/>
             </slash>
            </fn>
            <true/>
            <str val="POST"/>
           </choose>
          </ifCall>
          <choose line="3661">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}validate)" jsTest="return item.name==='validate'"/>
            </slash>
           </fn>
           <ifCall line="3662" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@validate"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}validate)" jsTest="return item.name==='validate'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3664">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
            </slash>
           </fn>
           <ifCall line="3665" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@relevant"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}relevant)" jsTest="return item.name==='relevant'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3667">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}serialization)" jsTest="return item.name==='serialization'"/>
            </slash>
           </fn>
           <ifCall line="3668" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@serialization"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}serialization)" jsTest="return item.name==='serialization'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3670">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}version)" jsTest="return item.name==='version'"/>
            </slash>
           </fn>
           <ifCall line="3671" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@version"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}version)" jsTest="return item.name==='version'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3673">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}indent)" jsTest="return item.name==='indent'"/>
            </slash>
           </fn>
           <ifCall line="3674" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@indent"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}indent)" jsTest="return item.name==='indent'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <ifCall line="3678" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@mediatype"/>
           <choose line="3680">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}mediatype)" jsTest="return item.name==='mediatype'"/>
             </slash>
            </fn>
            <fn line="3681" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}mediatype)" jsTest="return item.name==='mediatype'"/>
             </slash>
            </fn>
            <true/>
            <str val="text/plain"/>
           </choose>
          </ifCall>
          <choose line="3691">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}encoding)" jsTest="return item.name==='encoding'"/>
            </slash>
           </fn>
           <ifCall line="3692" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@encoding"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}encoding)" jsTest="return item.name==='encoding'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3694">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}omit-xml-declaration)" jsTest="return item.name==='omit-xml-declaration'"/>
            </slash>
           </fn>
           <ifCall line="3695" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@omit-xml-declaration"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}omit-xml-declaration)" jsTest="return item.name==='omit-xml-declaration'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3697">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}standalone)" jsTest="return item.name==='standalone'"/>
            </slash>
           </fn>
           <ifCall line="3698" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@standalone"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}standalone)" jsTest="return item.name==='standalone'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3700">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}cdata-section-elements)" jsTest="return item.name==='cdata-section-elements'"/>
            </slash>
           </fn>
           <ifCall line="3701" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@cdata-section-elements"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}cdata-section-elements)" jsTest="return item.name==='cdata-section-elements'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <ifCall line="3704" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
           <str val="@replace"/>
           <choose line="3706">
            <fn name="exists">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}replace)" jsTest="return item.name==='replace'"/>
             </slash>
            </fn>
            <fn line="3707" name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}replace)" jsTest="return item.name==='replace'"/>
             </slash>
            </fn>
            <true/>
            <str val="all"/>
           </choose>
          </ifCall>
          <choose line="3718">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}instance)" jsTest="return item.name==='instance'"/>
            </slash>
           </fn>
           <ifCall line="3719" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@instance"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}instance)" jsTest="return item.name==='instance'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3721">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}targetref)" jsTest="return item.name==='targetref'"/>
            </slash>
           </fn>
           <ifCall line="3722" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@targetref"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}targetref)" jsTest="return item.name==='targetref'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3724">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}separator)" jsTest="return item.name==='separator'"/>
            </slash>
           </fn>
           <ifCall line="3725" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@separator"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}separator)" jsTest="return item.name==='separator'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
          <choose line="3727">
           <fn name="exists">
            <slash simple="1">
             <varRef name="this" slot="0"/>
             <axis name="attribute" nodeTest="attribute(Q{}includenamespaceprefixes)" jsTest="return item.name==='includenamespaceprefixes'"/>
            </slash>
           </fn>
           <ifCall line="3728" name="Q{http://www.w3.org/2005/xpath-functions/map}entry" type="map(*)">
            <str val="@includenamespaceprefixes"/>
            <fn name="string">
             <slash simple="1">
              <varRef name="this" slot="0"/>
              <axis name="attribute" nodeTest="attribute(Q{}includenamespaceprefixes)" jsTest="return item.name==='includenamespaceprefixes'"/>
             </slash>
            </fn>
           </ifCall>
          </choose>
         </sequence>
         <map size="2">
          <str val="duplicates"/>
          <str val="reject"/>
          <str val="duplicates-error-code"/>
          <str val="XTDE3365"/>
         </map>
        </ifCall>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="65" binds="30 15">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onkeyup" onNo="TC" flags="W" patternSlots="1">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="649" module="saxon-xforms.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='input';"/>
     <ufCall ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="649" name="Q{http://www.w3.org/2002/xforms}hasClass" tailCall="false" bSlot="0">
      <dot type="element(Q{}input)"/>
      <str val="incremental"/>
     </ufCall>
    </p.withPredicate>
    <callT role="action" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="651" name="xforms-value-changed" bSlot="1" flags="t">
     <withParam name="Q{}form-control" flags="c" as="node()">
      <dot line="652" type="element(Q{}input)"/>
     </withParam>
    </callT>
   </templateRule>
  </mode>
 </co>
 <co id="53" binds="">
  <template name="Q{}getBinding" flags="os" line="3054" module="saxon-xforms.xsl" slots="4">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3055">
    <param name="Q{}this" slot="0" flags="r" as="element()">
     <treat role="conversion" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="8|0|XTTE0590|this">
      <check card="1" diag="8|0|XTTE0590|this">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="3056" name="Q{}bindings" slot="1" flags="t" as="map(xs:string, node())">
     <map role="select" size="0"/>
     <treat role="conversion" as="map(xs:string, node())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item);};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|bindings">
      <check card="1" diag="8|0|XTTE0590|bindings">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <let line="3065" var="ref-binding" as="xs:string" slot="2" eval="7">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}bind)" jsTest="return item.name==='bind'"/>
       </slash>
      </fn>
      <check card="1" diag="3|0|XTTE0570|ref-binding">
       <cast as="xs:string" emptiable="1">
        <data>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}bind)" jsTest="return item.name==='bind'"/>
         </slash>
        </data>
       </cast>
      </check>
      <fn name="exists">
       <slash simple="1">
        <varRef name="this" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
       </slash>
      </fn>
      <check card="1" diag="3|0|XTTE0570|ref-binding">
       <cast as="xs:string" emptiable="1">
        <data>
         <slash simple="1">
          <varRef name="this" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name==='ref'"/>
         </slash>
        </data>
       </cast>
      </check>
      <true/>
      <str val=""/>
     </choose>
     <let line="3067" var="binding" as="element()?" slot="3" eval="7">
      <choose line="3072">
       <fn name="empty">
        <varRef name="ref-binding" slot="2"/>
       </fn>
       <empty/>
       <true/>
       <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|binding">
        <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
         <varRef name="bindings" slot="1"/>
         <varRef name="ref-binding" slot="2"/>
        </ifCall>
       </treat>
      </choose>
      <sequence line="3075">
       <choose>
        <fn name="exists">
         <varRef name="binding" slot="3"/>
        </fn>
        <message line="3076">
         <sequence role="select">
          <valueOf>
           <str val="[getBinding for "/>
          </valueOf>
          <valueOf>
           <fn name="name">
            <varRef name="this" slot="0"/>
           </fn>
          </valueOf>
          <valueOf>
           <str val="] Binding found: "/>
          </valueOf>
          <valueOf>
           <fn name="serialize">
            <varRef name="binding" slot="3"/>
           </fn>
          </valueOf>
         </sequence>
         <str role="terminate" val="no"/>
         <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
        </message>
       </choose>
       <varRef line="3080" name="binding" slot="3"/>
      </sequence>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="66" binds="">
  <globalVariable name="Q{}default-instance-id" type="xs:string" line="64" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="saxon-forms-default"/>
  </globalVariable>
 </co>
 <co id="67" binds="">
  <globalVariable name="Q{}debugTiming" type="xs:boolean" line="63" module="saxon-xforms.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <false/>
  </globalVariable>
 </co>
 <co id="21" binds="">
  <template name="Q{}getInstance" flags="os" as="element()?" line="3028" module="saxon-xforms.xsl" slots="2">
   <sequence role="body" ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3029">
    <param name="Q{}instance-id" slot="0" as="xs:string">
     <str role="select" val=""/>
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|instance-id">
      <check card="1" diag="8|0|XTTE0590|instance-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="3030" name="Q{}instances" slot="1" flags="ti" as="map(xs:string, element())">
     <treat role="conversion" as="map(xs:string, element())" jsTest="function k(item) {return SaxonJS.U.Atomic.string.matches(item);};function v(item) {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};function c(n) {return n==1;};return SaxonJS.U.isMap(item) &amp;&amp; item.conforms(k, v, c);" diag="8|0|XTTE0590|instances">
      <check card="1" diag="8|0|XTTE0590|instances">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <choose line="3034">
     <varRef name="instance-id" slot="0"/>
     <ifCall line="3035" name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
      <varRef name="instances" slot="1"/>
      <varRef name="instance-id" slot="0"/>
     </ifCall>
     <true/>
     <copyOf line="3039" flags="vc">
      <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
       <varRef name="instances" slot="1"/>
       <str val="saxon-forms-default"/>
      </ifCall>
     </copyOf>
    </choose>
   </sequence>
  </template>
 </co>
 <overridden/>
 <key name="Q{http://saxon.sf.net/}kk101" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="2700" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <attVal ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="-1" name="Q{}data-ref" chk="0"/>
 </key>
 <key name="Q{http://saxon.sf.net/}kk102" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="3264" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <attVal ns="xforms=http://www.w3.org/2002/xforms in=http://www.w3.org/2002/xforms-instance fn=~ js=~ saxon=~ xd=http://www.oxygenxml.com/ns/doc/xsl xf=http://www.w3.org/2002/xforms xhtml=http://www.w3.org/1999/xhtml xsl=~ ev=http://www.w3.org/2001/xml-events rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# array=http://www.w3.org/2005/xpath-functions/array sfl=http://saxonica.com/ns/forms-local ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="-1" name="Q{}id" chk="0"/>
 </key>
 <output>
  <property name="indent" value="no"/>
  <property name="doctype-system" value="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"/>
  <property name="encoding" value="utf-8"/>
  <property name="doctype-public" value="-//W3C//DTD XHTML 1.0 Transitional//EN"/>
  <property name="omit-xml-declaration" value="no"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="html"/>
 </output>
 <decimalFormat/>
</package>
<?Σ e709fc56?>
